package typingsSlinky.awsSdk.glueMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait GetPlanRequest extends StObject {
  
  /**
    * A map to hold additional optional key-value parameters. Currently, these key-value pairs are supported:    inferSchema  —  Specifies whether to set inferSchema to true or false for the default script generated by an AWS Glue job. For example, to set inferSchema to true, pass the following key value pair:  --additional-plan-options-map '{"inferSchema":"true"}'   
    */
  var AdditionalPlanOptionsMap: js.UndefOr[typingsSlinky.awsSdk.glueMod.AdditionalPlanOptionsMap] = js.native
  
  /**
    * The programming language of the code to perform the mapping.
    */
  var Language: js.UndefOr[typingsSlinky.awsSdk.glueMod.Language] = js.native
  
  /**
    * The parameters for the mapping.
    */
  var Location: js.UndefOr[typingsSlinky.awsSdk.glueMod.Location] = js.native
  
  /**
    * The list of mappings from a source table to target tables.
    */
  var Mapping: MappingList = js.native
  
  /**
    * The target tables.
    */
  var Sinks: js.UndefOr[CatalogEntries] = js.native
  
  /**
    * The source table.
    */
  var Source: CatalogEntry = js.native
}
object GetPlanRequest {
  
  @scala.inline
  def apply(Mapping: MappingList, Source: CatalogEntry): GetPlanRequest = {
    val __obj = js.Dynamic.literal(Mapping = Mapping.asInstanceOf[js.Any], Source = Source.asInstanceOf[js.Any])
    __obj.asInstanceOf[GetPlanRequest]
  }
  
  @scala.inline
  implicit class GetPlanRequestMutableBuilder[Self <: GetPlanRequest] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAdditionalPlanOptionsMap(value: AdditionalPlanOptionsMap): Self = StObject.set(x, "AdditionalPlanOptionsMap", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAdditionalPlanOptionsMapUndefined: Self = StObject.set(x, "AdditionalPlanOptionsMap", js.undefined)
    
    @scala.inline
    def setLanguage(value: Language): Self = StObject.set(x, "Language", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLanguageUndefined: Self = StObject.set(x, "Language", js.undefined)
    
    @scala.inline
    def setLocation(value: Location): Self = StObject.set(x, "Location", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLocationUndefined: Self = StObject.set(x, "Location", js.undefined)
    
    @scala.inline
    def setMapping(value: MappingList): Self = StObject.set(x, "Mapping", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMappingVarargs(value: MappingEntry*): Self = StObject.set(x, "Mapping", js.Array(value :_*))
    
    @scala.inline
    def setSinks(value: CatalogEntries): Self = StObject.set(x, "Sinks", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSinksUndefined: Self = StObject.set(x, "Sinks", js.undefined)
    
    @scala.inline
    def setSinksVarargs(value: CatalogEntry*): Self = StObject.set(x, "Sinks", js.Array(value :_*))
    
    @scala.inline
    def setSource(value: CatalogEntry): Self = StObject.set(x, "Source", value.asInstanceOf[js.Any])
  }
}
