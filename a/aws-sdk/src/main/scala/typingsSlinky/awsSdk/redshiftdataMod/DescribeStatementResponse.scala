package typingsSlinky.awsSdk.redshiftdataMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait DescribeStatementResponse extends StObject {
  
  /**
    * The cluster identifier. 
    */
  var ClusterIdentifier: js.UndefOr[String] = js.native
  
  /**
    * The date and time (UTC) when the SQL statement was submitted to run. 
    */
  var CreatedAt: js.UndefOr[js.Date] = js.native
  
  /**
    * The name of the database. 
    */
  var Database: js.UndefOr[String] = js.native
  
  /**
    * The database user name. 
    */
  var DbUser: js.UndefOr[String] = js.native
  
  /**
    * The amount of time in nanoseconds that the statement ran. 
    */
  var Duration: js.UndefOr[Long] = js.native
  
  /**
    * The error message from the cluster if the SQL statement encountered an error while running. 
    */
  var Error: js.UndefOr[String] = js.native
  
  /**
    * The identifier of the SQL statement described. This value is a universally unique identifier (UUID) generated by Amazon Redshift Data API. 
    */
  var Id: UUID = js.native
  
  /**
    * The SQL statement text. 
    */
  var QueryString: js.UndefOr[StatementString] = js.native
  
  /**
    * The process identifier from Amazon Redshift. 
    */
  var RedshiftPid: js.UndefOr[Long] = js.native
  
  /**
    * The identifier of the query generated by Amazon Redshift. These identifiers are also available in the query column of the STL_QUERY system view. 
    */
  var RedshiftQueryId: js.UndefOr[Long] = js.native
  
  /**
    * Either the number of rows returned from the SQL statement or the number of rows affected. If result size is greater than zero, the result rows can be the number of rows affected by SQL statements such as INSERT, UPDATE, DELETE, COPY, and others. 
    */
  var ResultRows: js.UndefOr[Long] = js.native
  
  /**
    * The size in bytes of the returned results. 
    */
  var ResultSize: js.UndefOr[Long] = js.native
  
  /**
    * The name or Amazon Resource Name (ARN) of the secret that enables access to the database. 
    */
  var SecretArn: js.UndefOr[typingsSlinky.awsSdk.redshiftdataMod.SecretArn] = js.native
  
  /**
    * The status of the SQL statement being described. Status values are defined as follows:    ABORTED - The query run was stopped by the user.    ALL - A status value that includes all query statuses. This value can be used to filter results.    FAILED - The query run failed.    FINISHED - The query has finished running.    PICKED - The query has been chosen to be run.    STARTED - The query run has started.    SUBMITTED - The query was submitted, but not yet processed.   
    */
  var Status: js.UndefOr[StatusString] = js.native
  
  /**
    * The date and time (UTC) that the metadata for the SQL statement was last updated. An example is the time the status last changed. 
    */
  var UpdatedAt: js.UndefOr[js.Date] = js.native
}
object DescribeStatementResponse {
  
  @scala.inline
  def apply(Id: UUID): DescribeStatementResponse = {
    val __obj = js.Dynamic.literal(Id = Id.asInstanceOf[js.Any])
    __obj.asInstanceOf[DescribeStatementResponse]
  }
  
  @scala.inline
  implicit class DescribeStatementResponseMutableBuilder[Self <: DescribeStatementResponse] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setClusterIdentifier(value: String): Self = StObject.set(x, "ClusterIdentifier", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setClusterIdentifierUndefined: Self = StObject.set(x, "ClusterIdentifier", js.undefined)
    
    @scala.inline
    def setCreatedAt(value: js.Date): Self = StObject.set(x, "CreatedAt", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCreatedAtUndefined: Self = StObject.set(x, "CreatedAt", js.undefined)
    
    @scala.inline
    def setDatabase(value: String): Self = StObject.set(x, "Database", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDatabaseUndefined: Self = StObject.set(x, "Database", js.undefined)
    
    @scala.inline
    def setDbUser(value: String): Self = StObject.set(x, "DbUser", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDbUserUndefined: Self = StObject.set(x, "DbUser", js.undefined)
    
    @scala.inline
    def setDuration(value: Long): Self = StObject.set(x, "Duration", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDurationUndefined: Self = StObject.set(x, "Duration", js.undefined)
    
    @scala.inline
    def setError(value: String): Self = StObject.set(x, "Error", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setErrorUndefined: Self = StObject.set(x, "Error", js.undefined)
    
    @scala.inline
    def setId(value: UUID): Self = StObject.set(x, "Id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setQueryString(value: StatementString): Self = StObject.set(x, "QueryString", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setQueryStringUndefined: Self = StObject.set(x, "QueryString", js.undefined)
    
    @scala.inline
    def setRedshiftPid(value: Long): Self = StObject.set(x, "RedshiftPid", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRedshiftPidUndefined: Self = StObject.set(x, "RedshiftPid", js.undefined)
    
    @scala.inline
    def setRedshiftQueryId(value: Long): Self = StObject.set(x, "RedshiftQueryId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRedshiftQueryIdUndefined: Self = StObject.set(x, "RedshiftQueryId", js.undefined)
    
    @scala.inline
    def setResultRows(value: Long): Self = StObject.set(x, "ResultRows", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setResultRowsUndefined: Self = StObject.set(x, "ResultRows", js.undefined)
    
    @scala.inline
    def setResultSize(value: Long): Self = StObject.set(x, "ResultSize", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setResultSizeUndefined: Self = StObject.set(x, "ResultSize", js.undefined)
    
    @scala.inline
    def setSecretArn(value: SecretArn): Self = StObject.set(x, "SecretArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSecretArnUndefined: Self = StObject.set(x, "SecretArn", js.undefined)
    
    @scala.inline
    def setStatus(value: StatusString): Self = StObject.set(x, "Status", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStatusUndefined: Self = StObject.set(x, "Status", js.undefined)
    
    @scala.inline
    def setUpdatedAt(value: js.Date): Self = StObject.set(x, "UpdatedAt", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setUpdatedAtUndefined: Self = StObject.set(x, "UpdatedAt", js.undefined)
  }
}
