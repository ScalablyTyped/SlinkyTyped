package typingsSlinky.awsSdk.redshiftdataMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait ExecuteStatementOutput extends js.Object {
  
  /**
    * The cluster identifier. 
    */
  var ClusterIdentifier: js.UndefOr[Location] = js.native
  
  /**
    * The date and time (UTC) the statement was created. 
    */
  var CreatedAt: js.UndefOr[js.Date] = js.native
  
  /**
    * The name of the database.
    */
  var Database: js.UndefOr[String] = js.native
  
  /**
    * The database user name.
    */
  var DbUser: js.UndefOr[String] = js.native
  
  /**
    * The identifier of the statement to be run. This value is a universally unique identifier (UUID) generated by Amazon Redshift Data API. 
    */
  var Id: js.UndefOr[UUID] = js.native
  
  /**
    * The name or ARN of the secret that enables access to the database. 
    */
  var SecretArn: js.UndefOr[typingsSlinky.awsSdk.redshiftdataMod.SecretArn] = js.native
}
object ExecuteStatementOutput {
  
  @scala.inline
  def apply(): ExecuteStatementOutput = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[ExecuteStatementOutput]
  }
  
  @scala.inline
  implicit class ExecuteStatementOutputOps[Self <: ExecuteStatementOutput] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: java.lang.String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setClusterIdentifier(value: Location): Self = this.set("ClusterIdentifier", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteClusterIdentifier: Self = this.set("ClusterIdentifier", js.undefined)
    
    @scala.inline
    def setCreatedAt(value: js.Date): Self = this.set("CreatedAt", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreatedAt: Self = this.set("CreatedAt", js.undefined)
    
    @scala.inline
    def setDatabase(value: String): Self = this.set("Database", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDatabase: Self = this.set("Database", js.undefined)
    
    @scala.inline
    def setDbUser(value: String): Self = this.set("DbUser", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDbUser: Self = this.set("DbUser", js.undefined)
    
    @scala.inline
    def setId(value: UUID): Self = this.set("Id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteId: Self = this.set("Id", js.undefined)
    
    @scala.inline
    def setSecretArn(value: SecretArn): Self = this.set("SecretArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSecretArn: Self = this.set("SecretArn", js.undefined)
  }
}
