package typingsSlinky.awsSdk.apigatewayv2Mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Route extends js.Object {
  
  /**
    * Specifies whether a route is managed by API Gateway. If you created an API using quick create, the $default route is managed by API Gateway. You can't modify the $default route key.
    */
  var ApiGatewayManaged: js.UndefOr[boolean] = js.native
  
  /**
    * Specifies whether an API key is required for this route. Supported only for WebSocket APIs.
    */
  var ApiKeyRequired: js.UndefOr[boolean] = js.native
  
  /**
    * A list of authorization scopes configured on a route. The scopes are used with a JWT authorizer to authorize the method invocation. The authorization works by matching the route scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any route scope matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the route scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
    */
  var AuthorizationScopes: js.UndefOr[typingsSlinky.awsSdk.apigatewayv2Mod.AuthorizationScopes] = js.native
  
  /**
    * The authorization type for the route. For WebSocket APIs, valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are NONE for open access, or JWT for using JSON Web Tokens.
    */
  var AuthorizationType: js.UndefOr[typingsSlinky.awsSdk.apigatewayv2Mod.AuthorizationType] = js.native
  
  /**
    * The identifier of the Authorizer resource to be associated with this route. The authorizer identifier is generated by API Gateway when you created the authorizer.
    */
  var AuthorizerId: js.UndefOr[Id] = js.native
  
  /**
    * The model selection expression for the route. Supported only for WebSocket APIs.
    */
  var ModelSelectionExpression: js.UndefOr[SelectionExpression] = js.native
  
  /**
    * The operation name for the route.
    */
  var OperationName: js.UndefOr[StringWithLengthBetween1And64] = js.native
  
  /**
    * The request models for the route. Supported only for WebSocket APIs.
    */
  var RequestModels: js.UndefOr[RouteModels] = js.native
  
  /**
    * The request parameters for the route. Supported only for WebSocket APIs.
    */
  var RequestParameters: js.UndefOr[RouteParameters] = js.native
  
  /**
    * The route ID.
    */
  var RouteId: js.UndefOr[Id] = js.native
  
  /**
    * The route key for the route.
    */
  var RouteKey: SelectionKey = js.native
  
  /**
    * The route response selection expression for the route. Supported only for WebSocket APIs.
    */
  var RouteResponseSelectionExpression: js.UndefOr[SelectionExpression] = js.native
  
  /**
    * The target for the route.
    */
  var Target: js.UndefOr[StringWithLengthBetween1And128] = js.native
}
object Route {
  
  @scala.inline
  def apply(RouteKey: SelectionKey): Route = {
    val __obj = js.Dynamic.literal(RouteKey = RouteKey.asInstanceOf[js.Any])
    __obj.asInstanceOf[Route]
  }
  
  @scala.inline
  implicit class RouteOps[Self <: Route] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setRouteKey(value: SelectionKey): Self = this.set("RouteKey", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setApiGatewayManaged(value: boolean): Self = this.set("ApiGatewayManaged", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteApiGatewayManaged: Self = this.set("ApiGatewayManaged", js.undefined)
    
    @scala.inline
    def setApiKeyRequired(value: boolean): Self = this.set("ApiKeyRequired", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteApiKeyRequired: Self = this.set("ApiKeyRequired", js.undefined)
    
    @scala.inline
    def setAuthorizationScopesVarargs(value: StringWithLengthBetween1And64*): Self = this.set("AuthorizationScopes", js.Array(value :_*))
    
    @scala.inline
    def setAuthorizationScopes(value: AuthorizationScopes): Self = this.set("AuthorizationScopes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAuthorizationScopes: Self = this.set("AuthorizationScopes", js.undefined)
    
    @scala.inline
    def setAuthorizationType(value: AuthorizationType): Self = this.set("AuthorizationType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAuthorizationType: Self = this.set("AuthorizationType", js.undefined)
    
    @scala.inline
    def setAuthorizerId(value: Id): Self = this.set("AuthorizerId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAuthorizerId: Self = this.set("AuthorizerId", js.undefined)
    
    @scala.inline
    def setModelSelectionExpression(value: SelectionExpression): Self = this.set("ModelSelectionExpression", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteModelSelectionExpression: Self = this.set("ModelSelectionExpression", js.undefined)
    
    @scala.inline
    def setOperationName(value: StringWithLengthBetween1And64): Self = this.set("OperationName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteOperationName: Self = this.set("OperationName", js.undefined)
    
    @scala.inline
    def setRequestModels(value: RouteModels): Self = this.set("RequestModels", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequestModels: Self = this.set("RequestModels", js.undefined)
    
    @scala.inline
    def setRequestParameters(value: RouteParameters): Self = this.set("RequestParameters", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequestParameters: Self = this.set("RequestParameters", js.undefined)
    
    @scala.inline
    def setRouteId(value: Id): Self = this.set("RouteId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRouteId: Self = this.set("RouteId", js.undefined)
    
    @scala.inline
    def setRouteResponseSelectionExpression(value: SelectionExpression): Self = this.set("RouteResponseSelectionExpression", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRouteResponseSelectionExpression: Self = this.set("RouteResponseSelectionExpression", js.undefined)
    
    @scala.inline
    def setTarget(value: StringWithLengthBetween1And128): Self = this.set("Target", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTarget: Self = this.set("Target", js.undefined)
  }
}
