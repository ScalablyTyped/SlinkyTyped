package typingsSlinky.awsSdk.swfMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait RespondDecisionTaskCompletedInput extends StObject {
  
  /**
    * The list of decisions (possibly empty) made by the decider while processing this decision task. See the docs for the Decision structure for details.
    */
  var decisions: js.UndefOr[DecisionList] = js.native
  
  /**
    * User defined context to add to workflow execution.
    */
  var executionContext: js.UndefOr[Data] = js.native
  
  /**
    * The taskToken from the DecisionTask.   taskToken is generated by the service and should be treated as an opaque value. If the task is passed to another process, its taskToken must also be passed. This enables it to provide its progress and respond with results. 
    */
  var taskToken: TaskToken = js.native
}
object RespondDecisionTaskCompletedInput {
  
  @scala.inline
  def apply(taskToken: TaskToken): RespondDecisionTaskCompletedInput = {
    val __obj = js.Dynamic.literal(taskToken = taskToken.asInstanceOf[js.Any])
    __obj.asInstanceOf[RespondDecisionTaskCompletedInput]
  }
  
  @scala.inline
  implicit class RespondDecisionTaskCompletedInputMutableBuilder[Self <: RespondDecisionTaskCompletedInput] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setDecisions(value: DecisionList): Self = StObject.set(x, "decisions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDecisionsUndefined: Self = StObject.set(x, "decisions", js.undefined)
    
    @scala.inline
    def setDecisionsVarargs(value: Decision*): Self = StObject.set(x, "decisions", js.Array(value :_*))
    
    @scala.inline
    def setExecutionContext(value: Data): Self = StObject.set(x, "executionContext", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setExecutionContextUndefined: Self = StObject.set(x, "executionContext", js.undefined)
    
    @scala.inline
    def setTaskToken(value: TaskToken): Self = StObject.set(x, "taskToken", value.asInstanceOf[js.Any])
  }
}
