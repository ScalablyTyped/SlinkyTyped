package typingsSlinky.awsSdk.apigatewayMod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait PutMethodRequest extends StObject {
  
  /**
    * Specifies whether the method required a valid ApiKey.
    */
  var apiKeyRequired: js.UndefOr[Boolean] = js.native
  
  /**
    * A list of authorization scopes configured on the method. The scopes are used with a COGNITO_USER_POOLS authorizer to authorize the method invocation. The authorization works by matching the method scopes against the scopes parsed from the access token in the incoming request. The method invocation is authorized if any method scopes matches a claimed scope in the access token. Otherwise, the invocation is not authorized. When the method scope is configured, the client must provide an access token instead of an identity token for authorization purposes.
    */
  var authorizationScopes: js.UndefOr[ListOfString] = js.native
  
  /**
    * [Required] The method's authorization type. Valid values are NONE for open access, AWS_IAM for using AWS IAM permissions, CUSTOM for using a custom authorizer, or COGNITO_USER_POOLS for using a Cognito user pool.
    */
  var authorizationType: String = js.native
  
  /**
    * Specifies the identifier of an Authorizer to use on this Method, if the type is CUSTOM or COGNITO_USER_POOLS. The authorizer identifier is generated by API Gateway when you created the authorizer.
    */
  var authorizerId: js.UndefOr[String] = js.native
  
  /**
    * [Required] Specifies the method request's HTTP method type.
    */
  var httpMethod: String = js.native
  
  /**
    * A human-friendly operation identifier for the method. For example, you can assign the operationName of ListPets for the GET /pets method in the PetStore example.
    */
  var operationName: js.UndefOr[String] = js.native
  
  /**
    * Specifies the Model resources used for the request's content type. Request models are represented as a key/value map, with a content type as the key and a Model name as the value.
    */
  var requestModels: js.UndefOr[MapOfStringToString] = js.native
  
  /**
    * A key-value map defining required or optional method request parameters that can be accepted by API Gateway. A key defines a method request parameter name matching the pattern of method.request.{location}.{name}, where location is querystring, path, or header and name is a valid and unique parameter name. The value associated with the key is a Boolean flag indicating whether the parameter is required (true) or optional (false). The method request parameter names defined here are available in Integration to be mapped to integration request parameters or body-mapping templates.
    */
  var requestParameters: js.UndefOr[MapOfStringToBoolean] = js.native
  
  /**
    * The identifier of a RequestValidator for validating the method request.
    */
  var requestValidatorId: js.UndefOr[String] = js.native
  
  /**
    * [Required] The Resource identifier for the new Method resource.
    */
  var resourceId: String = js.native
  
  /**
    * [Required] The string identifier of the associated RestApi.
    */
  var restApiId: String = js.native
}
object PutMethodRequest {
  
  @scala.inline
  def apply(authorizationType: String, httpMethod: String, resourceId: String, restApiId: String): PutMethodRequest = {
    val __obj = js.Dynamic.literal(authorizationType = authorizationType.asInstanceOf[js.Any], httpMethod = httpMethod.asInstanceOf[js.Any], resourceId = resourceId.asInstanceOf[js.Any], restApiId = restApiId.asInstanceOf[js.Any])
    __obj.asInstanceOf[PutMethodRequest]
  }
  
  @scala.inline
  implicit class PutMethodRequestMutableBuilder[Self <: PutMethodRequest] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setApiKeyRequired(value: Boolean): Self = StObject.set(x, "apiKeyRequired", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setApiKeyRequiredUndefined: Self = StObject.set(x, "apiKeyRequired", js.undefined)
    
    @scala.inline
    def setAuthorizationScopes(value: ListOfString): Self = StObject.set(x, "authorizationScopes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAuthorizationScopesUndefined: Self = StObject.set(x, "authorizationScopes", js.undefined)
    
    @scala.inline
    def setAuthorizationScopesVarargs(value: String*): Self = StObject.set(x, "authorizationScopes", js.Array(value :_*))
    
    @scala.inline
    def setAuthorizationType(value: String): Self = StObject.set(x, "authorizationType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAuthorizerId(value: String): Self = StObject.set(x, "authorizerId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAuthorizerIdUndefined: Self = StObject.set(x, "authorizerId", js.undefined)
    
    @scala.inline
    def setHttpMethod(value: String): Self = StObject.set(x, "httpMethod", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setOperationName(value: String): Self = StObject.set(x, "operationName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setOperationNameUndefined: Self = StObject.set(x, "operationName", js.undefined)
    
    @scala.inline
    def setRequestModels(value: MapOfStringToString): Self = StObject.set(x, "requestModels", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRequestModelsUndefined: Self = StObject.set(x, "requestModels", js.undefined)
    
    @scala.inline
    def setRequestParameters(value: MapOfStringToBoolean): Self = StObject.set(x, "requestParameters", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRequestParametersUndefined: Self = StObject.set(x, "requestParameters", js.undefined)
    
    @scala.inline
    def setRequestValidatorId(value: String): Self = StObject.set(x, "requestValidatorId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRequestValidatorIdUndefined: Self = StObject.set(x, "requestValidatorId", js.undefined)
    
    @scala.inline
    def setResourceId(value: String): Self = StObject.set(x, "resourceId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRestApiId(value: String): Self = StObject.set(x, "restApiId", value.asInstanceOf[js.Any])
  }
}
