package typingsSlinky.awsSdk

import org.scalablytyped.runtime.StringDictionary
import typingsSlinky.awsSdk.configBaseMod.ConfigBase
import typingsSlinky.awsSdk.errorMod.AWSError
import typingsSlinky.awsSdk.requestMod.Request
import typingsSlinky.awsSdk.serviceMod.Service
import typingsSlinky.awsSdk.serviceMod.ServiceConfigurationOptions
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object forecastqueryserviceMod {
  
  @JSImport("aws-sdk/clients/forecastqueryservice", JSImport.Namespace)
  @js.native
  /**
    * Constructs a service object. This object has one method for each API operation.
    */
  class ^ () extends ForecastQueryService {
    def this(options: ClientConfiguration) = this()
  }
  
  type Arn = String
  
  type AttributeName = String
  
  type AttributeValue = String
  
  @js.native
  trait Blob extends StObject
  
  @js.native
  trait ClientApiVersions extends StObject {
    
    /**
      * A string in YYYY-MM-DD format that represents the latest possible API version that can be used in this service. Specify 'latest' to use the latest possible version.
      */
    var apiVersion: js.UndefOr[typingsSlinky.awsSdk.forecastqueryserviceMod.apiVersion] = js.native
  }
  object ClientApiVersions {
    
    @scala.inline
    def apply(): ClientApiVersions = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[ClientApiVersions]
    }
    
    @scala.inline
    implicit class ClientApiVersionsMutableBuilder[Self <: ClientApiVersions] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setApiVersion(value: apiVersion): Self = StObject.set(x, "apiVersion", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setApiVersionUndefined: Self = StObject.set(x, "apiVersion", js.undefined)
    }
  }
  
  type ClientConfiguration = ServiceConfigurationOptions with ClientApiVersions
  
  @js.native
  trait DataPoint extends StObject {
    
    /**
      * The timestamp of the specific forecast.
      */
    var Timestamp: js.UndefOr[typingsSlinky.awsSdk.forecastqueryserviceMod.Timestamp] = js.native
    
    /**
      * The forecast value.
      */
    var Value: js.UndefOr[Double] = js.native
  }
  object DataPoint {
    
    @scala.inline
    def apply(): DataPoint = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[DataPoint]
    }
    
    @scala.inline
    implicit class DataPointMutableBuilder[Self <: DataPoint] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setTimestamp(value: Timestamp): Self = StObject.set(x, "Timestamp", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setTimestampUndefined: Self = StObject.set(x, "Timestamp", js.undefined)
      
      @scala.inline
      def setValue(value: Double): Self = StObject.set(x, "Value", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setValueUndefined: Self = StObject.set(x, "Value", js.undefined)
    }
  }
  
  type DateTime = String
  
  type Double = scala.Double
  
  type Filters = StringDictionary[AttributeValue]
  
  @js.native
  trait Forecast extends StObject {
    
    /**
      * The forecast. The string of the string-to-array map is one of the following values:   p10   p50   p90  
      */
    var Predictions: js.UndefOr[typingsSlinky.awsSdk.forecastqueryserviceMod.Predictions] = js.native
  }
  object Forecast {
    
    @scala.inline
    def apply(): Forecast = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[Forecast]
    }
    
    @scala.inline
    implicit class ForecastMutableBuilder[Self <: Forecast] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setPredictions(value: Predictions): Self = StObject.set(x, "Predictions", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setPredictionsUndefined: Self = StObject.set(x, "Predictions", js.undefined)
    }
  }
  
  @js.native
  trait ForecastQueryService extends Service {
    
    @JSName("config")
    var config_ForecastQueryService: ConfigBase with ClientConfiguration = js.native
    
    /**
      * Retrieves a forecast for a single item, filtered by the supplied criteria. The criteria is a key-value pair. The key is either item_id (or the equivalent non-timestamp, non-target field) from the TARGET_TIME_SERIES dataset, or one of the forecast dimensions specified as part of the FeaturizationConfig object. By default, QueryForecast returns the complete date range for the filtered forecast. You can request a specific date range. To get the full forecast, use the CreateForecastExportJob operation.  The forecasts generated by Amazon Forecast are in the same timezone as the dataset that was used to create the predictor. 
      */
    def queryForecast(): Request[QueryForecastResponse, AWSError] = js.native
    def queryForecast(callback: js.Function2[/* err */ AWSError, /* data */ QueryForecastResponse, Unit]): Request[QueryForecastResponse, AWSError] = js.native
    /**
      * Retrieves a forecast for a single item, filtered by the supplied criteria. The criteria is a key-value pair. The key is either item_id (or the equivalent non-timestamp, non-target field) from the TARGET_TIME_SERIES dataset, or one of the forecast dimensions specified as part of the FeaturizationConfig object. By default, QueryForecast returns the complete date range for the filtered forecast. You can request a specific date range. To get the full forecast, use the CreateForecastExportJob operation.  The forecasts generated by Amazon Forecast are in the same timezone as the dataset that was used to create the predictor. 
      */
    def queryForecast(params: QueryForecastRequest): Request[QueryForecastResponse, AWSError] = js.native
    def queryForecast(
      params: QueryForecastRequest,
      callback: js.Function2[/* err */ AWSError, /* data */ QueryForecastResponse, Unit]
    ): Request[QueryForecastResponse, AWSError] = js.native
  }
  
  type NextToken = String
  
  type Predictions = StringDictionary[TimeSeries]
  
  @js.native
  trait QueryForecastRequest extends StObject {
    
    /**
      * The end date for the forecast. Specify the date using this format: yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example, 2015-01-01T20:00:00. 
      */
    var EndDate: js.UndefOr[DateTime] = js.native
    
    /**
      * The filtering criteria to apply when retrieving the forecast. For example, to get the forecast for client_21 in the electricity usage dataset, specify the following:  {"item_id" : "client_21"}  To get the full forecast, use the CreateForecastExportJob operation.
      */
    var Filters: typingsSlinky.awsSdk.forecastqueryserviceMod.Filters = js.native
    
    /**
      * The Amazon Resource Name (ARN) of the forecast to query.
      */
    var ForecastArn: Arn = js.native
    
    /**
      * If the result of the previous request was truncated, the response includes a NextToken. To retrieve the next set of results, use the token in the next request. Tokens expire after 24 hours.
      */
    var NextToken: js.UndefOr[typingsSlinky.awsSdk.forecastqueryserviceMod.NextToken] = js.native
    
    /**
      * The start date for the forecast. Specify the date using this format: yyyy-MM-dd'T'HH:mm:ss (ISO 8601 format). For example, 2015-01-01T08:00:00.
      */
    var StartDate: js.UndefOr[DateTime] = js.native
  }
  object QueryForecastRequest {
    
    @scala.inline
    def apply(Filters: Filters, ForecastArn: Arn): QueryForecastRequest = {
      val __obj = js.Dynamic.literal(Filters = Filters.asInstanceOf[js.Any], ForecastArn = ForecastArn.asInstanceOf[js.Any])
      __obj.asInstanceOf[QueryForecastRequest]
    }
    
    @scala.inline
    implicit class QueryForecastRequestMutableBuilder[Self <: QueryForecastRequest] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setEndDate(value: DateTime): Self = StObject.set(x, "EndDate", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEndDateUndefined: Self = StObject.set(x, "EndDate", js.undefined)
      
      @scala.inline
      def setFilters(value: Filters): Self = StObject.set(x, "Filters", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setForecastArn(value: Arn): Self = StObject.set(x, "ForecastArn", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setNextToken(value: NextToken): Self = StObject.set(x, "NextToken", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setNextTokenUndefined: Self = StObject.set(x, "NextToken", js.undefined)
      
      @scala.inline
      def setStartDate(value: DateTime): Self = StObject.set(x, "StartDate", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setStartDateUndefined: Self = StObject.set(x, "StartDate", js.undefined)
    }
  }
  
  @js.native
  trait QueryForecastResponse extends StObject {
    
    /**
      * The forecast.
      */
    var Forecast: js.UndefOr[typingsSlinky.awsSdk.forecastqueryserviceMod.Forecast] = js.native
  }
  object QueryForecastResponse {
    
    @scala.inline
    def apply(): QueryForecastResponse = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[QueryForecastResponse]
    }
    
    @scala.inline
    implicit class QueryForecastResponseMutableBuilder[Self <: QueryForecastResponse] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setForecast(value: Forecast): Self = StObject.set(x, "Forecast", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setForecastUndefined: Self = StObject.set(x, "Forecast", js.undefined)
    }
  }
  
  type Statistic = String
  
  type TimeSeries = js.Array[DataPoint]
  
  type Timestamp = String
  
  trait _apiVersion extends StObject
  
  /* Rewritten from type alias, can be one of: 
    - typingsSlinky.awsSdk.awsSdkStrings.`2018-06-26`
    - typingsSlinky.awsSdk.awsSdkStrings.latest_
    - java.lang.String
  */
  type apiVersion = _apiVersion | String
}
