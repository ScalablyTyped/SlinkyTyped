package typingsSlinky.awsSdk.securityhubMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait AwsSecurityFinding extends js.Object {
  
  /**
    * The AWS account ID that a finding is generated in.
    */
  var AwsAccountId: NonEmptyString = js.native
  
  /**
    * This data type is exclusive to findings that are generated as the result of a check run against a specific rule in a supported security standard, such as CIS AWS Foundations. Contains security standard-related finding details.
    */
  var Compliance: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.Compliance] = js.native
  
  /**
    * A finding's confidence. Confidence is defined as the likelihood that a finding accurately identifies the behavior or issue that it was intended to identify. Confidence is scored on a 0-100 basis using a ratio scale, where 0 means zero percent confidence and 100 means 100 percent confidence.
    */
  var Confidence: js.UndefOr[Integer] = js.native
  
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider created the potential security issue that a finding captured.
    */
  var CreatedAt: NonEmptyString = js.native
  
  /**
    * The level of importance assigned to the resources associated with the finding. A score of 0 means that the underlying resources have no criticality, and a score of 100 is reserved for the most critical resources.
    */
  var Criticality: js.UndefOr[Integer] = js.native
  
  /**
    * A finding's description.  In this release, Description is a required property. 
    */
  var Description: NonEmptyString = js.native
  
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider first observed the potential security issue that a finding captured.
    */
  var FirstObservedAt: js.UndefOr[NonEmptyString] = js.native
  
  /**
    * The identifier for the solution-specific component (a discrete unit of logic) that generated a finding. In various security-findings providers' solutions, this generator can be called a rule, a check, a detector, a plugin, etc. 
    */
  var GeneratorId: NonEmptyString = js.native
  
  /**
    * The security findings provider-specific identifier for a finding.
    */
  var Id: NonEmptyString = js.native
  
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider most recently observed the potential security issue that a finding captured.
    */
  var LastObservedAt: js.UndefOr[NonEmptyString] = js.native
  
  /**
    * A list of malware related to a finding.
    */
  var Malware: js.UndefOr[MalwareList] = js.native
  
  /**
    * The details of network-related information about a finding.
    */
  var Network: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.Network] = js.native
  
  /**
    * Provides information about a network path that is relevant to a finding. Each entry under NetworkPath represents a component of that path.
    */
  var NetworkPath: js.UndefOr[NetworkPathList] = js.native
  
  /**
    * A user-defined note added to a finding.
    */
  var Note: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.Note] = js.native
  
  /**
    * The details of process-related information about a finding.
    */
  var Process: js.UndefOr[ProcessDetails] = js.native
  
  /**
    * The ARN generated by Security Hub that uniquely identifies a product that generates findings. This can be the ARN for a third-party product that is integrated with Security Hub, or the ARN for a custom integration.
    */
  var ProductArn: NonEmptyString = js.native
  
  /**
    * A data type where security-findings providers can include additional solution-specific details that aren't part of the defined AwsSecurityFinding format.
    */
  var ProductFields: js.UndefOr[FieldMap] = js.native
  
  /**
    * The record state of a finding.
    */
  var RecordState: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.RecordState] = js.native
  
  /**
    * A list of related findings.
    */
  var RelatedFindings: js.UndefOr[RelatedFindingList] = js.native
  
  /**
    * A data type that describes the remediation options for a finding.
    */
  var Remediation: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.Remediation] = js.native
  
  /**
    * A set of resource data types that describe the resources that the finding refers to.
    */
  var Resources: ResourceList = js.native
  
  /**
    * The schema version that a finding is formatted for.
    */
  var SchemaVersion: NonEmptyString = js.native
  
  /**
    * A finding's severity.
    */
  var Severity: typingsSlinky.awsSdk.securityhubMod.Severity = js.native
  
  /**
    * A URL that links to a page about the current finding in the security-findings provider's solution.
    */
  var SourceUrl: js.UndefOr[NonEmptyString] = js.native
  
  /**
    * Threat intelligence details related to a finding.
    */
  var ThreatIntelIndicators: js.UndefOr[ThreatIntelIndicatorList] = js.native
  
  /**
    * A finding's title.  In this release, Title is a required property. 
    */
  var Title: NonEmptyString = js.native
  
  /**
    * One or more finding types in the format of namespace/category/classifier that classify a finding. Valid namespace values are: Software and Configuration Checks | TTPs | Effects | Unusual Behaviors | Sensitive Data Identifications
    */
  var Types: TypeList = js.native
  
  /**
    * An ISO8601-formatted timestamp that indicates when the security-findings provider last updated the finding record. 
    */
  var UpdatedAt: NonEmptyString = js.native
  
  /**
    * A list of name/value string pairs associated with the finding. These are custom, user-defined fields added to a finding. 
    */
  var UserDefinedFields: js.UndefOr[FieldMap] = js.native
  
  /**
    * Indicates the veracity of a finding. 
    */
  var VerificationState: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.VerificationState] = js.native
  
  /**
    * Provides a list of vulnerabilities associated with the findings.
    */
  var Vulnerabilities: js.UndefOr[VulnerabilityList] = js.native
  
  /**
    * Provides information about the status of the investigation into a finding.
    */
  var Workflow: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.Workflow] = js.native
  
  /**
    * The workflow state of a finding. 
    */
  var WorkflowState: js.UndefOr[typingsSlinky.awsSdk.securityhubMod.WorkflowState] = js.native
}
object AwsSecurityFinding {
  
  @scala.inline
  def apply(
    AwsAccountId: NonEmptyString,
    CreatedAt: NonEmptyString,
    Description: NonEmptyString,
    GeneratorId: NonEmptyString,
    Id: NonEmptyString,
    ProductArn: NonEmptyString,
    Resources: ResourceList,
    SchemaVersion: NonEmptyString,
    Severity: Severity,
    Title: NonEmptyString,
    Types: TypeList,
    UpdatedAt: NonEmptyString
  ): AwsSecurityFinding = {
    val __obj = js.Dynamic.literal(AwsAccountId = AwsAccountId.asInstanceOf[js.Any], CreatedAt = CreatedAt.asInstanceOf[js.Any], Description = Description.asInstanceOf[js.Any], GeneratorId = GeneratorId.asInstanceOf[js.Any], Id = Id.asInstanceOf[js.Any], ProductArn = ProductArn.asInstanceOf[js.Any], Resources = Resources.asInstanceOf[js.Any], SchemaVersion = SchemaVersion.asInstanceOf[js.Any], Severity = Severity.asInstanceOf[js.Any], Title = Title.asInstanceOf[js.Any], Types = Types.asInstanceOf[js.Any], UpdatedAt = UpdatedAt.asInstanceOf[js.Any])
    __obj.asInstanceOf[AwsSecurityFinding]
  }
  
  @scala.inline
  implicit class AwsSecurityFindingOps[Self <: AwsSecurityFinding] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAwsAccountId(value: NonEmptyString): Self = this.set("AwsAccountId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCreatedAt(value: NonEmptyString): Self = this.set("CreatedAt", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDescription(value: NonEmptyString): Self = this.set("Description", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setGeneratorId(value: NonEmptyString): Self = this.set("GeneratorId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setId(value: NonEmptyString): Self = this.set("Id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setProductArn(value: NonEmptyString): Self = this.set("ProductArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setResourcesVarargs(value: Resource*): Self = this.set("Resources", js.Array(value :_*))
    
    @scala.inline
    def setResources(value: ResourceList): Self = this.set("Resources", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSchemaVersion(value: NonEmptyString): Self = this.set("SchemaVersion", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSeverity(value: Severity): Self = this.set("Severity", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTitle(value: NonEmptyString): Self = this.set("Title", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTypesVarargs(value: NonEmptyString*): Self = this.set("Types", js.Array(value :_*))
    
    @scala.inline
    def setTypes(value: TypeList): Self = this.set("Types", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setUpdatedAt(value: NonEmptyString): Self = this.set("UpdatedAt", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCompliance(value: Compliance): Self = this.set("Compliance", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCompliance: Self = this.set("Compliance", js.undefined)
    
    @scala.inline
    def setConfidence(value: Integer): Self = this.set("Confidence", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteConfidence: Self = this.set("Confidence", js.undefined)
    
    @scala.inline
    def setCriticality(value: Integer): Self = this.set("Criticality", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCriticality: Self = this.set("Criticality", js.undefined)
    
    @scala.inline
    def setFirstObservedAt(value: NonEmptyString): Self = this.set("FirstObservedAt", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteFirstObservedAt: Self = this.set("FirstObservedAt", js.undefined)
    
    @scala.inline
    def setLastObservedAt(value: NonEmptyString): Self = this.set("LastObservedAt", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLastObservedAt: Self = this.set("LastObservedAt", js.undefined)
    
    @scala.inline
    def setMalwareVarargs(value: Malware*): Self = this.set("Malware", js.Array(value :_*))
    
    @scala.inline
    def setMalware(value: MalwareList): Self = this.set("Malware", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMalware: Self = this.set("Malware", js.undefined)
    
    @scala.inline
    def setNetwork(value: Network): Self = this.set("Network", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteNetwork: Self = this.set("Network", js.undefined)
    
    @scala.inline
    def setNetworkPathVarargs(value: NetworkPathComponent*): Self = this.set("NetworkPath", js.Array(value :_*))
    
    @scala.inline
    def setNetworkPath(value: NetworkPathList): Self = this.set("NetworkPath", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteNetworkPath: Self = this.set("NetworkPath", js.undefined)
    
    @scala.inline
    def setNote(value: Note): Self = this.set("Note", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteNote: Self = this.set("Note", js.undefined)
    
    @scala.inline
    def setProcess(value: ProcessDetails): Self = this.set("Process", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteProcess: Self = this.set("Process", js.undefined)
    
    @scala.inline
    def setProductFields(value: FieldMap): Self = this.set("ProductFields", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteProductFields: Self = this.set("ProductFields", js.undefined)
    
    @scala.inline
    def setRecordState(value: RecordState): Self = this.set("RecordState", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRecordState: Self = this.set("RecordState", js.undefined)
    
    @scala.inline
    def setRelatedFindingsVarargs(value: RelatedFinding*): Self = this.set("RelatedFindings", js.Array(value :_*))
    
    @scala.inline
    def setRelatedFindings(value: RelatedFindingList): Self = this.set("RelatedFindings", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRelatedFindings: Self = this.set("RelatedFindings", js.undefined)
    
    @scala.inline
    def setRemediation(value: Remediation): Self = this.set("Remediation", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemediation: Self = this.set("Remediation", js.undefined)
    
    @scala.inline
    def setSourceUrl(value: NonEmptyString): Self = this.set("SourceUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSourceUrl: Self = this.set("SourceUrl", js.undefined)
    
    @scala.inline
    def setThreatIntelIndicatorsVarargs(value: ThreatIntelIndicator*): Self = this.set("ThreatIntelIndicators", js.Array(value :_*))
    
    @scala.inline
    def setThreatIntelIndicators(value: ThreatIntelIndicatorList): Self = this.set("ThreatIntelIndicators", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteThreatIntelIndicators: Self = this.set("ThreatIntelIndicators", js.undefined)
    
    @scala.inline
    def setUserDefinedFields(value: FieldMap): Self = this.set("UserDefinedFields", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteUserDefinedFields: Self = this.set("UserDefinedFields", js.undefined)
    
    @scala.inline
    def setVerificationState(value: VerificationState): Self = this.set("VerificationState", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteVerificationState: Self = this.set("VerificationState", js.undefined)
    
    @scala.inline
    def setVulnerabilitiesVarargs(value: Vulnerability*): Self = this.set("Vulnerabilities", js.Array(value :_*))
    
    @scala.inline
    def setVulnerabilities(value: VulnerabilityList): Self = this.set("Vulnerabilities", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteVulnerabilities: Self = this.set("Vulnerabilities", js.undefined)
    
    @scala.inline
    def setWorkflow(value: Workflow): Self = this.set("Workflow", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteWorkflow: Self = this.set("Workflow", js.undefined)
    
    @scala.inline
    def setWorkflowState(value: WorkflowState): Self = this.set("WorkflowState", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteWorkflowState: Self = this.set("WorkflowState", js.undefined)
  }
}
