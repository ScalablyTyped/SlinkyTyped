package typingsSlinky.activexLibreoffice.com_.sun.star.awt

import typingsSlinky.activexLibreoffice.`type`
import typingsSlinky.activexLibreoffice.com_.sun.star.uno.XInterface
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/** provides container windows implementing the {@link com.sun.star.awt.XWindow} interface. */
@js.native
trait XContainerWindowProvider extends XInterface {
  
  /**
    * creates a window for the given URL
    * @param URL is the URL.
    * @param WindowType Type of Window to be created, for future use, not supported yet
    * @param xParent a valid {@link XWindowPeer} reference which is used as a parent. This parameter must not be null.
    * @param xHandler is the interface that will be called to handle the Events that are generated by the window (and all controls placed on it) and bound to
    * @returns a window implementing the {@link com.sun.star.awt.XWindow} interface.
    * @see com.sun.star.awt.XContainerWindowEventHandler
    * @throws com::sun::star::lang::IllegalArgumentException if no window for the given URL is found or if the URL is invalid or xParent is null.
    */
  def createContainerWindow(URL: String, WindowType: String, xParent: XWindowPeer, xHandler: XInterface): XWindow = js.native
}
object XContainerWindowProvider {
  
  @scala.inline
  def apply(
    acquire: () => Unit,
    createContainerWindow: (String, String, XWindowPeer, XInterface) => XWindow,
    queryInterface: `type` => js.Any,
    release: () => Unit
  ): XContainerWindowProvider = {
    val __obj = js.Dynamic.literal(acquire = js.Any.fromFunction0(acquire), createContainerWindow = js.Any.fromFunction4(createContainerWindow), queryInterface = js.Any.fromFunction1(queryInterface), release = js.Any.fromFunction0(release))
    __obj.asInstanceOf[XContainerWindowProvider]
  }
  
  @scala.inline
  implicit class XContainerWindowProviderOps[Self <: XContainerWindowProvider] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setCreateContainerWindow(value: (String, String, XWindowPeer, XInterface) => XWindow): Self = this.set("createContainerWindow", js.Any.fromFunction4(value))
  }
}
