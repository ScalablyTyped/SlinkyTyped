package typingsSlinky.angularCore.testingTestingMod

import typingsSlinky.angularCore.mod.Compiler
import typingsSlinky.angularCore.mod.Component
import typingsSlinky.angularCore.mod.ComponentFactory
import typingsSlinky.angularCore.mod.Directive
import typingsSlinky.angularCore.mod.Injector
import typingsSlinky.angularCore.mod.NgModule
import typingsSlinky.angularCore.mod.Pipe
import typingsSlinky.angularCore.mod.Type
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@JSImport("@angular/core/testing/testing", "\u0275TestingCompiler")
@js.native
class ÉµTestingCompiler () extends Compiler {
  
  /**
    * Gets the component factory for the given component.
    * This assumes that the component has been compiled before calling this call using
    * `compileModuleAndAllComponents*`.
    */
  def getComponentFactory[T](component: Type[T]): ComponentFactory[T] = js.native
  
  /**
    * Returns the component type that is stored in the given error.
    * This can be used for errors created by compileModule...
    */
  def getComponentFromError(error: js.Error): Type[_] | Null = js.native
  
  def injector: Injector = js.native
  
  /**
    * Allows to pass the compile summary from AOT compilation to the JIT compiler,
    * so that it can use the code generated by AOT.
    */
  def loadAotSummaries(summaries: js.Function0[js.Array[_]]): Unit = js.native
  
  def overrideComponent(component: Type[_], overrides: MetadataOverride[Component]): Unit = js.native
  
  def overrideDirective(directive: Type[_], overrides: MetadataOverride[Directive]): Unit = js.native
  
  def overrideModule(module: Type[_], overrides: MetadataOverride[NgModule]): Unit = js.native
  
  def overridePipe(directive: Type[_], overrides: MetadataOverride[Pipe]): Unit = js.native
}
