package typingsSlinky.babelTypes

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

package object indexTs37Mod {
  
  /* Rewritten from type alias, can be one of: 
    - typingsSlinky.babelTypes.indexTs37Mod.AnyTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.ArgumentPlaceholder_
    - typingsSlinky.babelTypes.indexTs37Mod.ArrayExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.ArrayPattern_
    - typingsSlinky.babelTypes.indexTs37Mod.ArrayTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_
    - typingsSlinky.babelTypes.indexTs37Mod.AwaitExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.BigIntLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.Binary
    - typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.BindExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.Block
    - typingsSlinky.babelTypes.indexTs37Mod.BlockParent
    - typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteralTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.BreakStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.CallExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.CatchClause_
    - typingsSlinky.babelTypes.indexTs37Mod.Class
    - typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
    - typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.ClassImplements_
    - typingsSlinky.babelTypes.indexTs37Mod.ClassMethod_
    - typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_
    - typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.ClassProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.CompletionStatement
    - typingsSlinky.babelTypes.indexTs37Mod.Conditional
    - typingsSlinky.babelTypes.indexTs37Mod.ConditionalExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.ContinueStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.DebuggerStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.DecimalLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.Declaration
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareExportAllDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareFunction_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareModuleExports_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareTypeAlias_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclareVariable_
    - typingsSlinky.babelTypes.indexTs37Mod.DeclaredPredicate_
    - typingsSlinky.babelTypes.indexTs37Mod.Decorator_
    - typingsSlinky.babelTypes.indexTs37Mod.Directive_
    - typingsSlinky.babelTypes.indexTs37Mod.DirectiveLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.DoExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.DoWhileStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.EmptyStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.EmptyTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumBody
    - typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanBody_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanMember_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumDefaultedMember_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumMember
    - typingsSlinky.babelTypes.indexTs37Mod.EnumNumberBody_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumNumberMember_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumStringBody_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumStringMember_
    - typingsSlinky.babelTypes.indexTs37Mod.EnumSymbolBody_
    - typingsSlinky.babelTypes.indexTs37Mod.ExistsTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.ExportAllDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.ExportDeclaration
    - typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_
    - typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
    - typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_
    - typingsSlinky.babelTypes.indexTs37Mod.Expression
    - typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.ExpressionWrapper
    - typingsSlinky.babelTypes.indexTs37Mod.File_
    - typingsSlinky.babelTypes.indexTs37Mod.Flow
    - typingsSlinky.babelTypes.indexTs37Mod.FlowBaseAnnotation
    - typingsSlinky.babelTypes.indexTs37Mod.FlowDeclaration
    - typingsSlinky.babelTypes.indexTs37Mod.FlowPredicate
    - typingsSlinky.babelTypes.indexTs37Mod.FlowType
    - typingsSlinky.babelTypes.indexTs37Mod.For
    - typingsSlinky.babelTypes.indexTs37Mod.ForInStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.ForStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.ForXStatement
    - typingsSlinky.babelTypes.indexTs37Mod.Function
    - typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.FunctionParent
    - typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_
    - typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.Identifier_
    - typingsSlinky.babelTypes.indexTs37Mod.IfStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.Immutable
    - typingsSlinky.babelTypes.indexTs37Mod.Import_
    - typingsSlinky.babelTypes.indexTs37Mod.ImportAttribute_
    - typingsSlinky.babelTypes.indexTs37Mod.ImportDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.ImportDefaultSpecifier_
    - typingsSlinky.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_
    - typingsSlinky.babelTypes.indexTs37Mod.ImportSpecifier_
    - typingsSlinky.babelTypes.indexTs37Mod.InferredPredicate_
    - typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_
    - typingsSlinky.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_
    - typingsSlinky.babelTypes.indexTs37Mod.IntersectionTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.JSX
    - typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXClosingFragment_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXElement_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXEmptyExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningFragment_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_
    - typingsSlinky.babelTypes.indexTs37Mod.JSXText_
    - typingsSlinky.babelTypes.indexTs37Mod.LVal
    - typingsSlinky.babelTypes.indexTs37Mod.LabeledStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.Literal
    - typingsSlinky.babelTypes.indexTs37Mod.LogicalExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.Loop
    - typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.MetaProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.Method
    - typingsSlinky.babelTypes.indexTs37Mod.MixedTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.ModuleDeclaration
    - typingsSlinky.babelTypes.indexTs37Mod.ModuleSpecifier
    - typingsSlinky.babelTypes.indexTs37Mod.NewExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.Noop_
    - typingsSlinky.babelTypes.indexTs37Mod.NullLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.NullLiteralTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.NullableTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.NumberLiteral
    - typingsSlinky.babelTypes.indexTs37Mod.NumberLiteralTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectMember
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectMethod_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectPattern_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeCallProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_
    - typingsSlinky.babelTypes.indexTs37Mod.OptionalCallExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.ParenthesizedExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.Pattern
    - typingsSlinky.babelTypes.indexTs37Mod.PatternLike
    - typingsSlinky.babelTypes.indexTs37Mod.PipelineBareFunction_
    - typingsSlinky.babelTypes.indexTs37Mod.PipelinePrimaryTopicReference_
    - typingsSlinky.babelTypes.indexTs37Mod.PipelineTopicExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.Placeholder_
    - typingsSlinky.babelTypes.indexTs37Mod.Private
    - typingsSlinky.babelTypes.indexTs37Mod.PrivateName_
    - typingsSlinky.babelTypes.indexTs37Mod.Program_
    - typingsSlinky.babelTypes.indexTs37Mod.Property
    - typingsSlinky.babelTypes.indexTs37Mod.Pureish
    - typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_
    - typingsSlinky.babelTypes.indexTs37Mod.RecordExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.RegexLiteral
    - typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    - typingsSlinky.babelTypes.indexTs37Mod.RestProperty
    - typingsSlinky.babelTypes.indexTs37Mod.ReturnStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.Scopable
    - typingsSlinky.babelTypes.indexTs37Mod.SequenceExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_
    - typingsSlinky.babelTypes.indexTs37Mod.SpreadProperty
    - typingsSlinky.babelTypes.indexTs37Mod.Statement
    - typingsSlinky.babelTypes.indexTs37Mod.StaticBlock_
    - typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.StringLiteralTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.Super_
    - typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_
    - typingsSlinky.babelTypes.indexTs37Mod.SwitchStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.SymbolTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.TSAnyKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSArrayType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSAsExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.TSBaseType
    - typingsSlinky.babelTypes.indexTs37Mod.TSBigIntKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSBooleanKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSConditionalType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_
    - typingsSlinky.babelTypes.indexTs37Mod.TSDeclareMethod_
    - typingsSlinky.babelTypes.indexTs37Mod.TSEntityName
    - typingsSlinky.babelTypes.indexTs37Mod.TSEnumDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_
    - typingsSlinky.babelTypes.indexTs37Mod.TSExportAssignment_
    - typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_
    - typingsSlinky.babelTypes.indexTs37Mod.TSExternalModuleReference_
    - typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSImportType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSIndexSignature_
    - typingsSlinky.babelTypes.indexTs37Mod.TSIndexedAccessType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSInferType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
    - typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSIntersectionType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSIntrinsicKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_
    - typingsSlinky.babelTypes.indexTs37Mod.TSModuleBlock_
    - typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSNamedTupleMember_
    - typingsSlinky.babelTypes.indexTs37Mod.TSNamespaceExportDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSNeverKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSNonNullExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.TSNullKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSNumberKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSObjectKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSOptionalType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    - typingsSlinky.babelTypes.indexTs37Mod.TSParenthesizedType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_
    - typingsSlinky.babelTypes.indexTs37Mod.TSQualifiedName_
    - typingsSlinky.babelTypes.indexTs37Mod.TSRestType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSStringKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSSymbolKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSThisType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTupleType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSType
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeAssertion_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeElement
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeOperator_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeQuery_
    - typingsSlinky.babelTypes.indexTs37Mod.TSTypeReference_
    - typingsSlinky.babelTypes.indexTs37Mod.TSUndefinedKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSUnionType_
    - typingsSlinky.babelTypes.indexTs37Mod.TSUnknownKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TSVoidKeyword_
    - typingsSlinky.babelTypes.indexTs37Mod.TaggedTemplateExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.TemplateElement_
    - typingsSlinky.babelTypes.indexTs37Mod.TemplateLiteral_
    - typingsSlinky.babelTypes.indexTs37Mod.Terminatorless
    - typingsSlinky.babelTypes.indexTs37Mod.ThisExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.ThisTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.ThrowStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.TryStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.TupleExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.TupleTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.TypeAlias_
    - typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.TypeCastExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_
    - typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_
    - typingsSlinky.babelTypes.indexTs37Mod.TypeofTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.UnaryLike
    - typingsSlinky.babelTypes.indexTs37Mod.UnionTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_
    - typingsSlinky.babelTypes.indexTs37Mod.UserWhitespacable
    - typingsSlinky.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_
    - typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_
    - typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_
    - typingsSlinky.babelTypes.indexTs37Mod.Variance_
    - typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_
    - typingsSlinky.babelTypes.indexTs37Mod.While
    - typingsSlinky.babelTypes.indexTs37Mod.WhileStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.WithStatement_
    - typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_
  */
  type Node = typingsSlinky.babelTypes.indexTs37Mod._Node | typingsSlinky.babelTypes.indexTs37Mod.NumberLiteral | typingsSlinky.babelTypes.indexTs37Mod.RegexLiteral | typingsSlinky.babelTypes.indexTs37Mod.RestProperty | typingsSlinky.babelTypes.indexTs37Mod.SpreadProperty
  
  type NumberLiteral = typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_
  
  type RegexLiteral = typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_
  
  type RestProperty = typingsSlinky.babelTypes.indexTs37Mod.RestElement_
  
  type SpreadProperty = typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_
  
  type TraversalAncestors = js.Array[typingsSlinky.babelTypes.anon.Index]
  
  type TraversalHandler[T] = js.ThisFunction3[
    /* this */ js.UndefOr[scala.Nothing], 
    /* node */ typingsSlinky.babelTypes.indexTs37Mod.Node, 
    /* parent */ typingsSlinky.babelTypes.indexTs37Mod.TraversalAncestors, 
    /* type */ T, 
    scala.Unit
  ]
  
  @scala.inline
  def addComment[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](
    node: T,
    `type`: typingsSlinky.babelTypes.indexTs37Mod.CommentTypeShorthand,
    content: java.lang.String
  ): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("addComment")(node.asInstanceOf[js.Any], `type`.asInstanceOf[js.Any], content.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def addComment[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](
    node: T,
    `type`: typingsSlinky.babelTypes.indexTs37Mod.CommentTypeShorthand,
    content: java.lang.String,
    line: scala.Boolean
  ): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("addComment")(node.asInstanceOf[js.Any], `type`.asInstanceOf[js.Any], content.asInstanceOf[js.Any], line.asInstanceOf[js.Any])).asInstanceOf[T]
  
  @scala.inline
  def addComments[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](
    node: T,
    `type`: typingsSlinky.babelTypes.indexTs37Mod.CommentTypeShorthand,
    comments: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Comment]
  ): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("addComments")(node.asInstanceOf[js.Any], `type`.asInstanceOf[js.Any], comments.asInstanceOf[js.Any])).asInstanceOf[T]
  
  @scala.inline
  def anyTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.AnyTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("anyTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.AnyTypeAnnotation_]
  
  @scala.inline
  def appendToMemberExpression[T /* <: typingsSlinky.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typingsSlinky.babelTypes.indexTs37Mod.Expression): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def appendToMemberExpression[T /* <: typingsSlinky.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typingsSlinky.babelTypes.indexTs37Mod.Expression, computed: scala.Boolean): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def appendToMemberExpression[T /* <: typingsSlinky.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def appendToMemberExpression[T /* <: typingsSlinky.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typingsSlinky.babelTypes.indexTs37Mod.Identifier_, computed: scala.Boolean): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def appendToMemberExpression[T /* <: typingsSlinky.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def appendToMemberExpression[T /* <: typingsSlinky.babelTypes.anon.PickMemberExpressionobjec */](member: T, append: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_, computed: scala.Boolean): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("appendToMemberExpression")(member.asInstanceOf[js.Any], append.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[T]
  
  @scala.inline
  def argumentPlaceholder(): typingsSlinky.babelTypes.indexTs37Mod.ArgumentPlaceholder_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("argumentPlaceholder")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArgumentPlaceholder_]
  
  @scala.inline
  def arrayExpression(): typingsSlinky.babelTypes.indexTs37Mod.ArrayExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayExpression")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrayExpression_]
  @scala.inline
  def arrayExpression(
    elements: js.Array[
      scala.Null | typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ArrayExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayExpression")(elements.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrayExpression_]
  
  @scala.inline
  def arrayPattern(elements: js.Array[scala.Null | typingsSlinky.babelTypes.indexTs37Mod.PatternLike]): typingsSlinky.babelTypes.indexTs37Mod.ArrayPattern_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayPattern")(elements.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrayPattern_]
  
  @scala.inline
  def arrayTypeAnnotation(elementType: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.ArrayTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrayTypeAnnotation")(elementType.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrayTypeAnnotation_]
  
  @scala.inline
  def arrowFunctionExpression(
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_]
  @scala.inline
  def arrowFunctionExpression(
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_]
  @scala.inline
  def arrowFunctionExpression(
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_]
  @scala.inline
  def arrowFunctionExpression(
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("arrowFunctionExpression")(params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrowFunctionExpression_]
  
  @scala.inline
  def assertAnyTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAnyTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAnyTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAnyTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAnyTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AnyTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertArgumentPlaceholder(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArgumentPlaceholder(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArgumentPlaceholder(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArgumentPlaceholder(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArgumentPlaceholder(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArgumentPlaceholder))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertArrayExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertArrayPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayPattern))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertArrayTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrayTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrayTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertArrowFunctionExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrowFunctionExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrowFunctionExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrowFunctionExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertArrowFunctionExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ArrowFunctionExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertAssignmentExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertAssignmentPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAssignmentPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AssignmentPattern))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertAwaitExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAwaitExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAwaitExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAwaitExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertAwaitExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(AwaitExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBigIntLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBigIntLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBigIntLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBigIntLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBigIntLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BigIntLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBinary(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinary(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinary(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinary(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinary(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Binary))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBinaryExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinaryExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinaryExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinaryExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBinaryExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BinaryExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBindExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBindExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBindExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBindExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBindExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BindExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBlock(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlock(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlock(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlock(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlock(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Block))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBlockParent(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockParent(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockParent(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockParent(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockParent(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockParent))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBlockStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBlockStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BlockStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBooleanLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBooleanLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBooleanTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBooleanTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BooleanTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertBreakStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBreakStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBreakStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBreakStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertBreakStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(BreakStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertCallExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCallExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCallExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCallExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCallExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CallExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertCatchClause(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCatchClause(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCatchClause(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCatchClause(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCatchClause(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CatchClause))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClass(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClass(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClass(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClass(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClass(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Class))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassBody))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassImplements(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassImplements(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassImplements(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassImplements(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassImplements(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassImplements))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassMethod))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassPrivateMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateMethod))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassPrivateProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassPrivateProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassPrivateProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertClassProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertClassProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ClassProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertCompletionStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCompletionStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCompletionStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCompletionStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertCompletionStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(CompletionStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertConditional(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditional(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditional(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditional(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditional(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Conditional))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertConditionalExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditionalExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditionalExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditionalExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertConditionalExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ConditionalExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertContinueStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertContinueStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertContinueStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertContinueStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertContinueStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ContinueStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDebuggerStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDebuggerStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDebuggerStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDebuggerStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDebuggerStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DebuggerStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDecimalLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecimalLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecimalLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecimalLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecimalLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DecimalLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Declaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareClass(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareClass(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareClass(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareClass(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareClass(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareClass))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareExportAllDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportAllDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportAllDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportAllDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportAllDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportAllDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareExportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareExportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareExportDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareFunction))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareInterface(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareInterface(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareInterface(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareInterface(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareInterface(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareInterface))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareModule(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModule(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModule(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModule(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModule(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModule))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareModuleExports(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModuleExports(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModuleExports(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModuleExports(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareModuleExports(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareModuleExports))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareOpaqueType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareOpaqueType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareOpaqueType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareOpaqueType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareOpaqueType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareOpaqueType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareTypeAlias(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareTypeAlias(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareTypeAlias(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareTypeAlias(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareTypeAlias(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareTypeAlias))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclareVariable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareVariable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareVariable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareVariable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclareVariable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclareVariable))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDeclaredPredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaredPredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaredPredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaredPredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDeclaredPredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DeclaredPredicate))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDecorator(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecorator(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecorator(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecorator(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDecorator(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Decorator))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDirective(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirective(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirective(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirective(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirective(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Directive))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDirectiveLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirectiveLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirectiveLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirectiveLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDirectiveLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DirectiveLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDoExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertDoWhileStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoWhileStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoWhileStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoWhileStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertDoWhileStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(DoWhileStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEmptyStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEmptyTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEmptyTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EmptyTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBody))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumBooleanBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanBody))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumBooleanMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumBooleanMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumBooleanMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumDefaultedMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDefaultedMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDefaultedMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDefaultedMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumDefaultedMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumDefaultedMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumNumberBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberBody))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumNumberMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumNumberMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumNumberMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumStringBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringBody))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumStringMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumStringMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumStringMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertEnumSymbolBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumSymbolBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumSymbolBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumSymbolBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertEnumSymbolBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(EnumSymbolBody))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExistsTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExistsTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExistsTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExistsTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExistsTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExistsTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExportAllDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportAllDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportAllDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportAllDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportAllDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportAllDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExportDefaultDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExportDefaultSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportDefaultSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportDefaultSpecifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExportNamedDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamedDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamedDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamedDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamedDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamedDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExportNamespaceSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamespaceSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamespaceSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamespaceSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExportSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExportSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExportSpecifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Expression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExpressionStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertExpressionWrapper(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionWrapper(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionWrapper(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionWrapper(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertExpressionWrapper(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ExpressionWrapper))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFile(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFile(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFile(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFile(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFile(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(File))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFlow(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlow(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlow(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlow(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlow(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Flow))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFlowBaseAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowBaseAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowBaseAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowBaseAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowBaseAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowBaseAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFlowDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFlowPredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowPredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowPredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowPredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowPredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowPredicate))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFlowType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFlowType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FlowType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFor(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFor(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFor(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFor(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFor(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(For))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertForInStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForInStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForInStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForInStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForInStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForInStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertForOfStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForOfStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForOfStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForOfStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForOfStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForOfStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertForStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertForXStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForXStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForXStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForXStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertForXStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ForXStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Function))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFunctionDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFunctionExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFunctionParent(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionParent(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionParent(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionParent(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionParent(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionParent))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFunctionTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertFunctionTypeParam(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeParam(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeParam(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeParam(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertFunctionTypeParam(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(FunctionTypeParam))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertGenericTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertGenericTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertGenericTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertGenericTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertGenericTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(GenericTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Identifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertIfStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIfStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIfStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIfStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIfStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IfStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertImmutable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImmutable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImmutable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImmutable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImmutable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Immutable))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertImport(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImport(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImport(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImport(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImport(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Import))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertImportAttribute(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportAttribute(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportAttribute(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportAttribute(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportAttribute(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportAttribute))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertImportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertImportDefaultSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDefaultSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDefaultSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDefaultSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportDefaultSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportDefaultSpecifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertImportNamespaceSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportNamespaceSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportNamespaceSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportNamespaceSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportNamespaceSpecifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertImportSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertImportSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ImportSpecifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertInferredPredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInferredPredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInferredPredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInferredPredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInferredPredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InferredPredicate))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertInterfaceDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertInterfaceExtends(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceExtends(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceExtends(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceExtends(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceExtends(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceExtends))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertInterfaceTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterfaceTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterfaceTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertInterpreterDirective(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterpreterDirective(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterpreterDirective(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterpreterDirective(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertInterpreterDirective(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(InterpreterDirective))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertIntersectionTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIntersectionTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIntersectionTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIntersectionTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertIntersectionTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(IntersectionTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSX(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSX(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSX(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSX(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSX(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSX))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXAttribute(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXAttribute(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXAttribute(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXAttribute(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXAttribute(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXAttribute))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXClosingElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXClosingFragment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingFragment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingFragment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingFragment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXClosingFragment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXClosingFragment))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXEmptyExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXEmptyExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXEmptyExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXEmptyExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXEmptyExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXEmptyExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXExpressionContainer(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXExpressionContainer(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXExpressionContainer(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXExpressionContainer(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXExpressionContainer(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXExpressionContainer))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXFragment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXFragment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXFragment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXFragment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXFragment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXFragment))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXIdentifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXMemberExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXMemberExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXMemberExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXMemberExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXMemberExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXMemberExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXNamespacedName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXNamespacedName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXNamespacedName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXNamespacedName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXNamespacedName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXNamespacedName))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXOpeningElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXOpeningFragment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningFragment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningFragment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningFragment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXOpeningFragment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXOpeningFragment))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXSpreadAttribute(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadAttribute(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadAttribute(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadAttribute(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadAttribute(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadAttribute))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXSpreadChild(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadChild(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadChild(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadChild(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXSpreadChild(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXSpreadChild))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertJSXText(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXText(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXText(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXText(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertJSXText(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(JSXText))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertLVal(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLVal(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLVal(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLVal(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLVal(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LVal))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertLabeledStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLabeledStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLabeledStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLabeledStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLabeledStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LabeledStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Literal))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertLogicalExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLogicalExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLogicalExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLogicalExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLogicalExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(LogicalExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertLoop(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLoop(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLoop(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLoop(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertLoop(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Loop))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertMemberExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMemberExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMemberExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMemberExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMemberExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MemberExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertMetaProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMetaProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMetaProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMetaProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMetaProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MetaProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Method))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertMixedTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMixedTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMixedTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMixedTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertMixedTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(MixedTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertModuleDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertModuleSpecifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleSpecifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleSpecifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertModuleSpecifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ModuleSpecifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNewExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNewExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNewExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNewExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNewExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NewExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNode(obj: js.Any): /* asserts obj is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Node))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNode")(obj.asInstanceOf[js.Any]).asInstanceOf[/* asserts obj is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Node))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNoop(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNoop(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNoop(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNoop(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNoop(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Noop))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNullLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNullLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNullableTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullableTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullableTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullableTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNullableTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NullableTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNumberLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNumberLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNumberTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumberTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumberTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertNumericLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumericLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumericLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumericLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertNumericLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(NumericLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectMethod))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectPattern))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectTypeCallProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeCallProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeCallProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeCallProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeCallProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeCallProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectTypeIndexer(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeIndexer(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeIndexer(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeIndexer(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeIndexer(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeIndexer))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectTypeInternalSlot(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeInternalSlot(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeInternalSlot(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeInternalSlot(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeInternalSlot(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeInternalSlot))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectTypeProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertObjectTypeSpreadProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeSpreadProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeSpreadProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeSpreadProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertObjectTypeSpreadProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ObjectTypeSpreadProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertOpaqueType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOpaqueType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOpaqueType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOpaqueType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOpaqueType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OpaqueType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertOptionalCallExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalCallExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalCallExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalCallExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalCallExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalCallExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertOptionalMemberExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalMemberExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalMemberExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalMemberExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertOptionalMemberExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(OptionalMemberExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertParenthesizedExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertParenthesizedExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertParenthesizedExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertParenthesizedExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertParenthesizedExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ParenthesizedExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPattern(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPattern(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPattern(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPattern(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pattern))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPatternLike(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPatternLike(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPatternLike(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPatternLike(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPatternLike(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PatternLike))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPipelineBareFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineBareFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineBareFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineBareFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineBareFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineBareFunction))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPipelinePrimaryTopicReference(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelinePrimaryTopicReference(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelinePrimaryTopicReference(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelinePrimaryTopicReference(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelinePrimaryTopicReference(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelinePrimaryTopicReference))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPipelineTopicExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineTopicExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineTopicExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineTopicExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPipelineTopicExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PipelineTopicExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPlaceholder(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPlaceholder(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPlaceholder(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPlaceholder(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPlaceholder(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Placeholder))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPrivate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Private))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPrivateName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivateName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivateName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivateName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPrivateName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(PrivateName))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertProgram(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProgram(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProgram(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProgram(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProgram(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Program))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Property))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertPureish(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPureish(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPureish(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPureish(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertPureish(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Pureish))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertQualifiedTypeIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertQualifiedTypeIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertQualifiedTypeIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertQualifiedTypeIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertQualifiedTypeIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(QualifiedTypeIdentifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertRecordExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRecordExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRecordExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRecordExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRecordExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RecordExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertRegExpLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegExpLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegExpLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegExpLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegExpLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertRegexLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegexLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegexLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegexLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRegexLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RegExpLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertRestElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertRestProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertRestProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(RestElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertReturnStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertReturnStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertReturnStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertReturnStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertReturnStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ReturnStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertScopable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertScopable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertScopable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertScopable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertScopable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Scopable))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertSequenceExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSequenceExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSequenceExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSequenceExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSequenceExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SequenceExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertSpreadElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertSpreadProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSpreadProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SpreadElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Statement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertStaticBlock(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStaticBlock(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStaticBlock(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStaticBlock(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStaticBlock(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StaticBlock))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertStringLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertStringLiteralTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteralTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringLiteralTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertStringTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertStringTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(StringTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertSuper(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSuper(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSuper(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSuper(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSuper(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Super))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertSwitchCase(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchCase(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchCase(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchCase(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchCase(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchCase))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertSwitchStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSwitchStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SwitchStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertSymbolTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSymbolTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSymbolTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSymbolTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertSymbolTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(SymbolTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSAnyKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAnyKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAnyKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAnyKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAnyKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAnyKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSArrayType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSArrayType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSArrayType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSArrayType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSArrayType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSArrayType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSAsExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAsExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAsExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAsExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSAsExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSAsExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSBaseType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBaseType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBaseType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBaseType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBaseType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBaseType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSBigIntKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBigIntKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBigIntKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBigIntKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBigIntKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBigIntKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSBooleanKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBooleanKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBooleanKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBooleanKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSBooleanKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSBooleanKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSCallSignatureDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSCallSignatureDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSCallSignatureDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSCallSignatureDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSCallSignatureDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSCallSignatureDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSConditionalType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConditionalType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConditionalType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConditionalType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConditionalType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConditionalType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSConstructSignatureDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructSignatureDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructSignatureDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructSignatureDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructSignatureDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructSignatureDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSConstructorType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructorType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructorType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructorType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSConstructorType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSConstructorType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSDeclareFunction(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareFunction(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareFunction(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareFunction(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareFunction))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSDeclareMethod(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareMethod(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareMethod(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSDeclareMethod(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSDeclareMethod))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSEntityName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEntityName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEntityName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEntityName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEntityName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEntityName))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSEnumDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSEnumMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSEnumMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSEnumMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSExportAssignment(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExportAssignment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExportAssignment(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExportAssignment(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExportAssignment(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExportAssignment))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSExpressionWithTypeArguments(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExpressionWithTypeArguments(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExpressionWithTypeArguments(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExpressionWithTypeArguments(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExpressionWithTypeArguments(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExpressionWithTypeArguments))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSExternalModuleReference(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExternalModuleReference(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExternalModuleReference(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExternalModuleReference(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSExternalModuleReference(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSExternalModuleReference))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSFunctionType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSFunctionType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSFunctionType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSFunctionType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSFunctionType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSFunctionType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSImportEqualsDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportEqualsDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportEqualsDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportEqualsDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportEqualsDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportEqualsDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSImportType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSImportType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSImportType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSIndexSignature(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexSignature(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexSignature(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexSignature(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexSignature(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexSignature))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSIndexedAccessType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexedAccessType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexedAccessType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexedAccessType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIndexedAccessType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIndexedAccessType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSInferType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInferType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInferType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInferType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInferType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInferType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSInterfaceBody(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceBody(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceBody(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceBody(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceBody))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSInterfaceDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSInterfaceDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSInterfaceDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSIntersectionType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntersectionType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntersectionType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntersectionType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntersectionType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntersectionType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSIntrinsicKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntrinsicKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntrinsicKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntrinsicKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSIntrinsicKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSIntrinsicKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSLiteralType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSLiteralType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSLiteralType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSLiteralType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSLiteralType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSLiteralType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSMappedType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMappedType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMappedType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMappedType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMappedType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMappedType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSMethodSignature(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMethodSignature(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMethodSignature(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMethodSignature(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSMethodSignature(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSMethodSignature))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSModuleBlock(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleBlock(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleBlock(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleBlock(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleBlock(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleBlock))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSModuleDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSModuleDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSModuleDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSNamedTupleMember(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamedTupleMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamedTupleMember(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamedTupleMember(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamedTupleMember(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamedTupleMember))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSNamespaceExportDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamespaceExportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamespaceExportDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamespaceExportDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNamespaceExportDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNamespaceExportDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSNeverKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNeverKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNeverKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNeverKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNeverKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNeverKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSNonNullExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNonNullExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNonNullExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNonNullExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNonNullExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNonNullExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSNullKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNullKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNullKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNullKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNullKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNullKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSNumberKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNumberKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNumberKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNumberKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSNumberKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSNumberKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSObjectKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSObjectKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSObjectKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSObjectKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSObjectKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSObjectKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSOptionalType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSOptionalType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSOptionalType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSOptionalType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSOptionalType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSOptionalType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSParameterProperty(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParameterProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParameterProperty(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParameterProperty(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParameterProperty(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParameterProperty))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSParenthesizedType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParenthesizedType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParenthesizedType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParenthesizedType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSParenthesizedType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSParenthesizedType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSPropertySignature(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSPropertySignature(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSPropertySignature(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSPropertySignature(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSPropertySignature(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSPropertySignature))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSQualifiedName(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSQualifiedName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSQualifiedName(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSQualifiedName(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSQualifiedName(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSQualifiedName))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSRestType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSRestType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSRestType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSRestType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSRestType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSRestType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSStringKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSStringKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSStringKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSStringKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSStringKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSStringKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSSymbolKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSSymbolKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSSymbolKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSSymbolKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSSymbolKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSSymbolKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSThisType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSThisType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSThisType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSThisType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSThisType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSThisType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTupleType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTupleType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTupleType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTupleType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTupleType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTupleType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeAliasDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAliasDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAliasDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAliasDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAliasDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAliasDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeAssertion(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAssertion(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAssertion(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAssertion(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeAssertion(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeAssertion))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeOperator(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeOperator(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeOperator(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeOperator(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeOperator(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeOperator))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeParameter(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameter(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameter(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameter(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameter(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameter))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeParameterDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeParameterInstantiation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterInstantiation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterInstantiation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterInstantiation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeParameterInstantiation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypePredicate(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypePredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypePredicate(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypePredicate(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypePredicate(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypePredicate))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeQuery(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeQuery(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeQuery(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeQuery(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeQuery(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeQuery))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSTypeReference(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeReference(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeReference(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeReference(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSTypeReference(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSTypeReference))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSUndefinedKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUndefinedKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUndefinedKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUndefinedKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUndefinedKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUndefinedKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSUnionType(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnionType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnionType(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnionType(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnionType(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnionType))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSUnknownKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnknownKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnknownKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnknownKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSUnknownKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSUnknownKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTSVoidKeyword(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSVoidKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSVoidKeyword(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSVoidKeyword(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTSVoidKeyword(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TSVoidKeyword))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTaggedTemplateExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTaggedTemplateExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTaggedTemplateExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTaggedTemplateExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTaggedTemplateExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TaggedTemplateExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTemplateElement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateElement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateElement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateElement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateElement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTemplateLiteral(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateLiteral(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateLiteral(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTemplateLiteral(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TemplateLiteral))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTerminatorless(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTerminatorless(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTerminatorless(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTerminatorless(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTerminatorless(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Terminatorless))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertThisExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertThisTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThisTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThisTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertThrowStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThrowStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThrowStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThrowStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertThrowStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(ThrowStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTryStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTryStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTryStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTryStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTryStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TryStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTupleExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTupleTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTupleTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TupleTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTypeAlias(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAlias(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAlias(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAlias(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAlias(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAlias))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTypeCastExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeCastExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeCastExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeCastExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeCastExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeCastExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTypeParameter(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameter(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameter(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameter(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameter(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameter))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTypeParameterDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTypeParameterInstantiation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterInstantiation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterInstantiation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterInstantiation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeParameterInstantiation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertTypeofTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeofTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeofTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeofTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertTypeofTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(TypeofTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertUnaryExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertUnaryLike(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryLike(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryLike(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryLike(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnaryLike(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnaryLike))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertUnionTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnionTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnionTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnionTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUnionTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UnionTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertUpdateExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUpdateExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUpdateExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUpdateExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUpdateExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UpdateExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertUserWhitespacable(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUserWhitespacable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUserWhitespacable(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUserWhitespacable(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertUserWhitespacable(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(UserWhitespacable))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertV8IntrinsicIdentifier(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertV8IntrinsicIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertV8IntrinsicIdentifier(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertV8IntrinsicIdentifier(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertV8IntrinsicIdentifier(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(V8IntrinsicIdentifier))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertVariableDeclaration(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclaration(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclaration(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclaration(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclaration))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertVariableDeclarator(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclarator(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclarator(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclarator(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariableDeclarator(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VariableDeclarator))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertVariance(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariance(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariance(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariance(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVariance(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(Variance))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertVoidTypeAnnotation(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVoidTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVoidTypeAnnotation(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVoidTypeAnnotation(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertVoidTypeAnnotation(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(VoidTypeAnnotation))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertWhile(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhile(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhile(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhile(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhile(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(While))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertWhileStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhileStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhileStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhileStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWhileStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WhileStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertWithStatement(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWithStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWithStatement(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWithStatement(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertWithStatement(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(WithStatement))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assertYieldExpression(): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")().asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertYieldExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertYieldExpression(node: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertYieldExpression(node: js.Object, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
  @scala.inline
  def assertYieldExpression(node: scala.Null, opts: js.Object): /* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assertYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* asserts node is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentLibraryScoped(babel,types), TsIdentModule(Some(babel),List(types, lib, index-ts3.7)), TsIdentSimple(YieldExpression))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def assignmentExpression(
    operator: java.lang.String,
    left: typingsSlinky.babelTypes.indexTs37Mod.LVal,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_]
  
  @scala.inline
  def assignmentPattern(
    left: typingsSlinky.babelTypes.indexTs37Mod.ArrayPattern_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_]
  @scala.inline
  def assignmentPattern(
    left: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_]
  @scala.inline
  def assignmentPattern(
    left: typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_]
  @scala.inline
  def assignmentPattern(
    left: typingsSlinky.babelTypes.indexTs37Mod.ObjectPattern_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("assignmentPattern")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_]
  
  @scala.inline
  def awaitExpression(argument: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.AwaitExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("awaitExpression")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.AwaitExpression_]
  
  @scala.inline
  def bigIntLiteral(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.BigIntLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("bigIntLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BigIntLiteral_]
  
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Ampersand,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Ampersand,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.AsteriskAsterisk,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.AsteriskAsterisk,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Asterisk,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Asterisk,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.EqualssignEqualssignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.EqualssignEqualssignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.EqualssignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.EqualssignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.ExclamationmarkEqualssignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.ExclamationmarkEqualssignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.ExclamationmarkEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.ExclamationmarkEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.GreaterthansignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.GreaterthansignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.GreaterthansignGreaterthansignGreaterthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.GreaterthansignGreaterthansignGreaterthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.GreaterthansignGreaterthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.GreaterthansignGreaterthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Greaterthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Greaterthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.LessthansignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.LessthansignEqualssign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.LessthansignLessthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.LessthansignLessthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Lessthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Lessthansign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Percentsign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Percentsign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Plussign,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Plussign,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Slash,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Slash,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Verticalline,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Verticalline,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.^,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.^,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`-_`,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`-_`,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  
  @scala.inline
  def binaryExpression_in(
    operator: typingsSlinky.babelTypes.babelTypesStrings.in,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression_in(
    operator: typingsSlinky.babelTypes.babelTypesStrings.in,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  
  @scala.inline
  def binaryExpression_instanceof(
    operator: typingsSlinky.babelTypes.babelTypesStrings.instanceof,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  @scala.inline
  def binaryExpression_instanceof(
    operator: typingsSlinky.babelTypes.babelTypesStrings.instanceof,
    left: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("binaryExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_]
  
  @scala.inline
  def bindExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    callee: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.BindExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("bindExpression")(`object`.asInstanceOf[js.Any], callee.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BindExpression_]
  
  @scala.inline
  def blockStatement(body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement]): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("blockStatement")(body.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  @scala.inline
  def blockStatement(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Directive_]
  ): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("blockStatement")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  
  @scala.inline
  def booleanLiteral(value: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("booleanLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteral_]
  
  @scala.inline
  def booleanLiteralTypeAnnotation(value: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteralTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("booleanLiteralTypeAnnotation")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteralTypeAnnotation_]
  
  @scala.inline
  def booleanTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("booleanTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_]
  
  @scala.inline
  def breakStatement(): typingsSlinky.babelTypes.indexTs37Mod.BreakStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("breakStatement")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BreakStatement_]
  @scala.inline
  def breakStatement(label: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.BreakStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("breakStatement")(label.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BreakStatement_]
  
  @scala.inline
  def buildChildren(node: typingsSlinky.babelTypes.anon.Children): js.Array[
    typingsSlinky.babelTypes.indexTs37Mod.JSXText_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
  ] = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("buildChildren")(node.asInstanceOf[js.Any]).asInstanceOf[js.Array[
    typingsSlinky.babelTypes.indexTs37Mod.JSXText_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
  ]]
  
  @scala.inline
  def buildMatchMemberExpression(`match`: java.lang.String): js.Function1[
    /* node */ js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node | scala.Null], 
    /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean
  ] = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("buildMatchMemberExpression")(`match`.asInstanceOf[js.Any]).asInstanceOf[js.Function1[
    /* node */ js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node | scala.Null], 
    /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean
  ]]
  @scala.inline
  def buildMatchMemberExpression(`match`: java.lang.String, allowPartial: scala.Boolean): js.Function1[
    /* node */ js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node | scala.Null], 
    /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean
  ] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("buildMatchMemberExpression")(`match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[js.Function1[
    /* node */ js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node | scala.Null], 
    /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean
  ]]
  
  @scala.inline
  def callExpression(
    callee: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    _arguments: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_ | typingsSlinky.babelTypes.indexTs37Mod.ArgumentPlaceholder_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.CallExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("callExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.CallExpression_]
  @scala.inline
  def callExpression(
    callee: typingsSlinky.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_,
    _arguments: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_ | typingsSlinky.babelTypes.indexTs37Mod.ArgumentPlaceholder_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.CallExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("callExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.CallExpression_]
  
  @scala.inline
  def catchClause(param: js.UndefOr[scala.Nothing], body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_): typingsSlinky.babelTypes.indexTs37Mod.CatchClause_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.CatchClause_]
  @scala.inline
  def catchClause(param: scala.Null, body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_): typingsSlinky.babelTypes.indexTs37Mod.CatchClause_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.CatchClause_]
  @scala.inline
  def catchClause(
    param: typingsSlinky.babelTypes.indexTs37Mod.ArrayPattern_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.CatchClause_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.CatchClause_]
  @scala.inline
  def catchClause(
    param: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.CatchClause_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.CatchClause_]
  @scala.inline
  def catchClause(
    param: typingsSlinky.babelTypes.indexTs37Mod.ObjectPattern_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.CatchClause_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("catchClause")(param.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.CatchClause_]
  
  @scala.inline
  def classBody(
    body: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ClassMethod_ | typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ | typingsSlinky.babelTypes.indexTs37Mod.ClassProperty_ | typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ | typingsSlinky.babelTypes.indexTs37Mod.TSDeclareMethod_ | typingsSlinky.babelTypes.indexTs37Mod.TSIndexSignature_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassBody_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classBody")(body.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassBody_]
  
  @scala.inline
  def classDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  @scala.inline
  def classDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  @scala.inline
  def classDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  @scala.inline
  def classDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  @scala.inline
  def classDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  @scala.inline
  def classDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classDeclaration")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  
  @scala.inline
  def classExpression(
    id: js.UndefOr[scala.Nothing],
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: js.UndefOr[scala.Nothing],
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: js.UndefOr[scala.Nothing],
    superClass: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: js.UndefOr[scala.Nothing],
    superClass: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: js.UndefOr[scala.Nothing],
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: js.UndefOr[scala.Nothing],
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: scala.Null,
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: scala.Null,
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(id: scala.Null, superClass: scala.Null, body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: scala.Null,
    superClass: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: scala.Null,
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: scala.Null,
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def classExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    superClass: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.ClassBody_,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classExpression")(id.asInstanceOf[js.Any], superClass.asInstanceOf[js.Any], body.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  
  @scala.inline
  def classImplements(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.ClassImplements_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classImplements")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassImplements_]
  @scala.inline
  def classImplements(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassImplements_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classImplements")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassImplements_]
  
  @scala.inline
  def classMethod(
    kind: js.UndefOr[
      typingsSlinky.babelTypes.babelTypesStrings.get | typingsSlinky.babelTypes.babelTypesStrings.set | typingsSlinky.babelTypes.babelTypesStrings.method | typingsSlinky.babelTypes.babelTypesStrings.constructor
    ],
    key: typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.Expression,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    computed: js.UndefOr[scala.Boolean],
    _static: js.UndefOr[scala.Boolean],
    generator: js.UndefOr[scala.Boolean],
    async: js.UndefOr[scala.Boolean]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], _static.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassMethod_]
  
  @scala.inline
  def classPrivateMethod(
    kind: js.UndefOr[scala.Nothing],
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  @scala.inline
  def classPrivateMethod(
    kind: js.UndefOr[scala.Nothing],
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    _static: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  
  @scala.inline
  def classPrivateMethod_constructor(
    kind: typingsSlinky.babelTypes.babelTypesStrings.constructor,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  @scala.inline
  def classPrivateMethod_constructor(
    kind: typingsSlinky.babelTypes.babelTypesStrings.constructor,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    _static: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  
  @scala.inline
  def classPrivateMethod_get(
    kind: typingsSlinky.babelTypes.babelTypesStrings.get,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  @scala.inline
  def classPrivateMethod_get(
    kind: typingsSlinky.babelTypes.babelTypesStrings.get,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    _static: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  
  @scala.inline
  def classPrivateMethod_method(
    kind: typingsSlinky.babelTypes.babelTypesStrings.method,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  @scala.inline
  def classPrivateMethod_method(
    kind: typingsSlinky.babelTypes.babelTypesStrings.method,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    _static: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  
  @scala.inline
  def classPrivateMethod_set(
    kind: typingsSlinky.babelTypes.babelTypesStrings.set,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  @scala.inline
  def classPrivateMethod_set(
    kind: typingsSlinky.babelTypes.babelTypesStrings.set,
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    _static: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateMethod_]
  
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: js.UndefOr[scala.Nothing],
    decorators: js.UndefOr[scala.Nothing],
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: js.UndefOr[scala.Nothing],
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_],
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: js.UndefOr[scala.Nothing],
    decorators: scala.Null,
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: scala.Null,
    decorators: js.UndefOr[scala.Nothing],
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: scala.Null,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_],
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: scala.Null,
    decorators: scala.Null,
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    decorators: js.UndefOr[scala.Nothing],
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    decorators: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_],
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  @scala.inline
  def classPrivateProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    value: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    decorators: scala.Null,
    _static: js.Any
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classPrivateProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassPrivateProperty_]
  
  @scala.inline
  def classProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.Expression,
    value: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Expression | scala.Null],
    typeAnnotation: js.UndefOr[
      typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.Noop_ | scala.Null
    ],
    decorators: js.UndefOr[js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_] | scala.Null],
    computed: js.UndefOr[scala.Boolean],
    _static: js.UndefOr[scala.Boolean]
  ): typingsSlinky.babelTypes.indexTs37Mod.ClassProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("classProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], _static.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassProperty_]
  
  @scala.inline
  def cloneDeep[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneDeep")(n.asInstanceOf[js.Any]).asInstanceOf[T]
  
  @scala.inline
  def cloneDeepWithoutLoc[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneDeepWithoutLoc")(n.asInstanceOf[js.Any]).asInstanceOf[T]
  
  @scala.inline
  def cloneNode[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any]).asInstanceOf[T]
  @scala.inline
  def cloneNode[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T, deep: js.UndefOr[scala.Nothing], withoutLoc: scala.Boolean): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any], deep.asInstanceOf[js.Any], withoutLoc.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def cloneNode[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T, deep: scala.Boolean): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any], deep.asInstanceOf[js.Any])).asInstanceOf[T]
  @scala.inline
  def cloneNode[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T, deep: scala.Boolean, withoutLoc: scala.Boolean): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneNode")(n.asInstanceOf[js.Any], deep.asInstanceOf[js.Any], withoutLoc.asInstanceOf[js.Any])).asInstanceOf[T]
  
  @scala.inline
  def cloneWithoutLoc[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("cloneWithoutLoc")(n.asInstanceOf[js.Any]).asInstanceOf[T]
  
  @scala.inline
  def clone_[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("clone")(n.asInstanceOf[js.Any]).asInstanceOf[T]
  
  @scala.inline
  def conditionalExpression(
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    consequent: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    alternate: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.ConditionalExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("conditionalExpression")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any], alternate.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ConditionalExpression_]
  
  @scala.inline
  def continueStatement(): typingsSlinky.babelTypes.indexTs37Mod.ContinueStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("continueStatement")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ContinueStatement_]
  @scala.inline
  def continueStatement(label: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.ContinueStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("continueStatement")(label.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ContinueStatement_]
  
  @scala.inline
  def createFlowUnionType(types: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType]): typingsSlinky.babelTypes.indexTs37Mod.UnionTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createFlowUnionType")(types.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnionTypeAnnotation_]
  
  @scala.inline
  def createFlowUnionType_T_FlowType_T[T /* <: typingsSlinky.babelTypes.indexTs37Mod.FlowType */](types: js.Array[T]): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createFlowUnionType")(types.asInstanceOf[js.Any]).asInstanceOf[T]
  
  @scala.inline
  def createTypeAnnotationBasedOnTypeof_boolean(`type`: typingsSlinky.babelTypes.babelTypesStrings.boolean): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def createTypeAnnotationBasedOnTypeof_function(`type`: typingsSlinky.babelTypes.babelTypesStrings.function): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def createTypeAnnotationBasedOnTypeof_number(`type`: typingsSlinky.babelTypes.babelTypesStrings.number): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def createTypeAnnotationBasedOnTypeof_object(`type`: typingsSlinky.babelTypes.babelTypesStrings.`object`): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def createTypeAnnotationBasedOnTypeof_string(`type`: typingsSlinky.babelTypes.babelTypesStrings.string): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def createTypeAnnotationBasedOnTypeof_symbol(`type`: typingsSlinky.babelTypes.babelTypesStrings.symbol): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def createTypeAnnotationBasedOnTypeof_undefined(`type`: typingsSlinky.babelTypes.babelTypesStrings.undefined): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createTypeAnnotationBasedOnTypeof")(`type`.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.BooleanTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def createUnionTypeAnnotation(types: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType]): typingsSlinky.babelTypes.indexTs37Mod.UnionTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createUnionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnionTypeAnnotation_]
  
  @scala.inline
  def createUnionTypeAnnotation_T_FlowType_T[T /* <: typingsSlinky.babelTypes.indexTs37Mod.FlowType */](types: js.Array[T]): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("createUnionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[T]
  
  @scala.inline
  def debuggerStatement(): typingsSlinky.babelTypes.indexTs37Mod.DebuggerStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("debuggerStatement")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DebuggerStatement_]
  
  @scala.inline
  def decimalLiteral(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.DecimalLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("decimalLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DecimalLiteral_]
  
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  @scala.inline
  def declareClass(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareClass")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareClass_]
  
  @scala.inline
  def declareExportAllDeclaration(source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportAllDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportAllDeclaration")(source.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportAllDeclaration_]
  
  @scala.inline
  def declareExportDeclaration(): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: js.UndefOr[scala.Nothing],
    specifiers: js.UndefOr[scala.Nothing],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: js.UndefOr[scala.Nothing],
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: js.UndefOr[scala.Nothing],
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
    ],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: js.UndefOr[scala.Nothing],
    specifiers: scala.Null,
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: scala.Null,
    specifiers: js.UndefOr[scala.Nothing],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: scala.Null,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: scala.Null,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
    ],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: scala.Null,
    specifiers: scala.Null,
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(declaration: typingsSlinky.babelTypes.indexTs37Mod.Flow): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: typingsSlinky.babelTypes.indexTs37Mod.Flow,
    specifiers: js.UndefOr[scala.Nothing],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: typingsSlinky.babelTypes.indexTs37Mod.Flow,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: typingsSlinky.babelTypes.indexTs37Mod.Flow,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
    ],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  @scala.inline
  def declareExportDeclaration(
    declaration: typingsSlinky.babelTypes.indexTs37Mod.Flow,
    specifiers: scala.Null,
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareExportDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareExportDeclaration_]
  
  @scala.inline
  def declareFunction(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.DeclareFunction_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareFunction")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareFunction_]
  
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  @scala.inline
  def declareInterface(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareInterface")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareInterface_]
  
  @scala.inline
  def declareModule(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_]
  @scala.inline
  def declareModule(
    id: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_]
  
  @scala.inline
  def declareModuleExports(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_): typingsSlinky.babelTypes.indexTs37Mod.DeclareModuleExports_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModuleExports")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareModuleExports_]
  
  @scala.inline
  def declareModule_CommonJS(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    kind: typingsSlinky.babelTypes.babelTypesStrings.CommonJS
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_]
  @scala.inline
  def declareModule_CommonJS(
    id: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    kind: typingsSlinky.babelTypes.babelTypesStrings.CommonJS
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_]
  
  @scala.inline
  def declareModule_ES(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    kind: typingsSlinky.babelTypes.babelTypesStrings.ES
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_]
  @scala.inline
  def declareModule_ES(
    id: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    kind: typingsSlinky.babelTypes.babelTypesStrings.ES
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareModule")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any], kind.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareModule_]
  
  @scala.inline
  def declareOpaqueType(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_]
  @scala.inline
  def declareOpaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    supertype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_]
  @scala.inline
  def declareOpaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    supertype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_]
  @scala.inline
  def declareOpaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_]
  @scala.inline
  def declareOpaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    supertype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareOpaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareOpaqueType_]
  
  @scala.inline
  def declareTypeAlias(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    right: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareTypeAlias_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareTypeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareTypeAlias_]
  @scala.inline
  def declareTypeAlias(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    right: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareTypeAlias_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareTypeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareTypeAlias_]
  @scala.inline
  def declareTypeAlias(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    right: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.DeclareTypeAlias_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareTypeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareTypeAlias_]
  
  @scala.inline
  def declareVariable(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.DeclareVariable_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declareVariable")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclareVariable_]
  
  @scala.inline
  def declaredPredicate(value: typingsSlinky.babelTypes.indexTs37Mod.Flow): typingsSlinky.babelTypes.indexTs37Mod.DeclaredPredicate_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("declaredPredicate")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DeclaredPredicate_]
  
  @scala.inline
  def decorator(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.Decorator_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("decorator")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Decorator_]
  
  @scala.inline
  def directive(value: typingsSlinky.babelTypes.indexTs37Mod.DirectiveLiteral_): typingsSlinky.babelTypes.indexTs37Mod.Directive_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("directive")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Directive_]
  
  @scala.inline
  def directiveLiteral(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.DirectiveLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("directiveLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DirectiveLiteral_]
  
  @scala.inline
  def doExpression(body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_): typingsSlinky.babelTypes.indexTs37Mod.DoExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("doExpression")(body.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DoExpression_]
  
  @scala.inline
  def doWhileStatement(
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.DoWhileStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("doWhileStatement")(test.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.DoWhileStatement_]
  
  @scala.inline
  def emptyStatement(): typingsSlinky.babelTypes.indexTs37Mod.EmptyStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("emptyStatement")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EmptyStatement_]
  
  @scala.inline
  def emptyTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.EmptyTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("emptyTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EmptyTypeAnnotation_]
  
  @scala.inline
  def ensureBlock(
    node: typingsSlinky.std.Extract[typingsSlinky.babelTypes.indexTs37Mod.Node, typingsSlinky.babelTypes.anon.Body]
  ): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ensureBlock")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  @scala.inline
  def ensureBlock[K /* <: /* keyof std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Body> */ java.lang.String */](
    node: typingsSlinky.std.Extract[
      typingsSlinky.babelTypes.indexTs37Mod.Node, 
      typingsSlinky.std.Record[
        K, 
        typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ | typingsSlinky.babelTypes.indexTs37Mod.Statement | typingsSlinky.babelTypes.indexTs37Mod.Expression
      ]
    ],
    key: K
  ): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ensureBlock")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  
  @scala.inline
  def enumBooleanBody(members: js.Array[typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanMember_]): typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanBody_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumBooleanBody")(members.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanBody_]
  
  @scala.inline
  def enumBooleanMember(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanMember_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumBooleanMember")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanMember_]
  
  @scala.inline
  def enumDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.EnumBooleanBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_]
  @scala.inline
  def enumDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.EnumNumberBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_]
  @scala.inline
  def enumDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.EnumStringBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_]
  @scala.inline
  def enumDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.EnumSymbolBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumDeclaration_]
  
  @scala.inline
  def enumDefaultedMember(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.EnumDefaultedMember_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumDefaultedMember")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumDefaultedMember_]
  
  @scala.inline
  def enumNumberBody(members: js.Array[typingsSlinky.babelTypes.indexTs37Mod.EnumNumberMember_]): typingsSlinky.babelTypes.indexTs37Mod.EnumNumberBody_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumNumberBody")(members.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumNumberBody_]
  
  @scala.inline
  def enumNumberMember(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    init: typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.EnumNumberMember_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumNumberMember")(id.asInstanceOf[js.Any], init.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumNumberMember_]
  
  @scala.inline
  def enumStringBody(
    members: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.EnumStringMember_ | typingsSlinky.babelTypes.indexTs37Mod.EnumDefaultedMember_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.EnumStringBody_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumStringBody")(members.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumStringBody_]
  
  @scala.inline
  def enumStringMember(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    init: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.EnumStringMember_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumStringMember")(id.asInstanceOf[js.Any], init.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumStringMember_]
  
  @scala.inline
  def enumSymbolBody(members: js.Array[typingsSlinky.babelTypes.indexTs37Mod.EnumDefaultedMember_]): typingsSlinky.babelTypes.indexTs37Mod.EnumSymbolBody_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("enumSymbolBody")(members.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.EnumSymbolBody_]
  
  @scala.inline
  def existsTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.ExistsTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("existsTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExistsTypeAnnotation_]
  
  @scala.inline
  def exportAllDeclaration(source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_): typingsSlinky.babelTypes.indexTs37Mod.ExportAllDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportAllDeclaration")(source.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportAllDeclaration_]
  
  @scala.inline
  def exportDefaultDeclaration(declaration: typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_): typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]
  @scala.inline
  def exportDefaultDeclaration(declaration: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]
  @scala.inline
  def exportDefaultDeclaration(declaration: typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_): typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]
  @scala.inline
  def exportDefaultDeclaration(declaration: typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_): typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultDeclaration_]
  
  @scala.inline
  def exportDefaultSpecifier(exported: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportDefaultSpecifier")(exported.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_]
  
  @scala.inline
  def exportNamedDeclaration(): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: js.UndefOr[scala.Nothing],
    specifiers: js.UndefOr[scala.Nothing],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: js.UndefOr[scala.Nothing],
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: js.UndefOr[scala.Nothing],
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
    ],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: scala.Null,
    specifiers: js.UndefOr[scala.Nothing],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: scala.Null,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: scala.Null,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
    ],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(declaration: typingsSlinky.babelTypes.indexTs37Mod.Declaration): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: typingsSlinky.babelTypes.indexTs37Mod.Declaration,
    specifiers: js.UndefOr[scala.Nothing],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: typingsSlinky.babelTypes.indexTs37Mod.Declaration,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  @scala.inline
  def exportNamedDeclaration(
    declaration: typingsSlinky.babelTypes.indexTs37Mod.Declaration,
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportDefaultSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_
    ],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamedDeclaration")(declaration.asInstanceOf[js.Any], specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamedDeclaration_]
  
  @scala.inline
  def exportNamespaceSpecifier(exported: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportNamespaceSpecifier")(exported.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportNamespaceSpecifier_]
  
  @scala.inline
  def exportSpecifier(
    local: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    exported: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportSpecifier")(local.asInstanceOf[js.Any], exported.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_]
  @scala.inline
  def exportSpecifier(
    local: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    exported: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("exportSpecifier")(local.asInstanceOf[js.Any], exported.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExportSpecifier_]
  
  @scala.inline
  def expressionStatement(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("expressionStatement")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_]
  
  @scala.inline
  def file(program: typingsSlinky.babelTypes.indexTs37Mod.Program_): typingsSlinky.babelTypes.indexTs37Mod.File_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.File_]
  @scala.inline
  def file(
    program: typingsSlinky.babelTypes.indexTs37Mod.Program_,
    comments: js.UndefOr[scala.Nothing],
    tokens: js.Array[_]
  ): typingsSlinky.babelTypes.indexTs37Mod.File_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any], tokens.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.File_]
  @scala.inline
  def file(
    program: typingsSlinky.babelTypes.indexTs37Mod.Program_,
    comments: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.CommentBlock | typingsSlinky.babelTypes.indexTs37Mod.CommentLine
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.File_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.File_]
  @scala.inline
  def file(
    program: typingsSlinky.babelTypes.indexTs37Mod.Program_,
    comments: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.CommentBlock | typingsSlinky.babelTypes.indexTs37Mod.CommentLine
    ],
    tokens: js.Array[_]
  ): typingsSlinky.babelTypes.indexTs37Mod.File_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any], tokens.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.File_]
  @scala.inline
  def file(program: typingsSlinky.babelTypes.indexTs37Mod.Program_, comments: scala.Null, tokens: js.Array[_]): typingsSlinky.babelTypes.indexTs37Mod.File_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("file")(program.asInstanceOf[js.Any], comments.asInstanceOf[js.Any], tokens.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.File_]
  
  @scala.inline
  def forInStatement(
    left: typingsSlinky.babelTypes.indexTs37Mod.LVal,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForInStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forInStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForInStatement_]
  @scala.inline
  def forInStatement(
    left: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForInStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forInStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForInStatement_]
  
  @scala.inline
  def forOfStatement(
    left: typingsSlinky.babelTypes.indexTs37Mod.LVal,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_]
  @scala.inline
  def forOfStatement(
    left: typingsSlinky.babelTypes.indexTs37Mod.LVal,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement,
    _await: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _await.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_]
  @scala.inline
  def forOfStatement(
    left: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_]
  @scala.inline
  def forOfStatement(
    left: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement,
    _await: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forOfStatement")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any], body.asInstanceOf[js.Any], _await.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForOfStatement_]
  
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: js.UndefOr[scala.Nothing],
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: js.UndefOr[scala.Nothing],
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: js.UndefOr[scala.Nothing],
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: scala.Null,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: scala.Null,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: scala.Null,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: js.UndefOr[scala.Nothing],
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: js.UndefOr[scala.Nothing],
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: js.UndefOr[scala.Nothing],
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: js.UndefOr[scala.Nothing],
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: scala.Null,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: scala.Null,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: scala.Null,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: scala.Null,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: js.UndefOr[scala.Nothing],
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: js.UndefOr[scala.Nothing],
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: js.UndefOr[scala.Nothing],
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: scala.Null,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: scala.Null,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: scala.Null,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: js.UndefOr[scala.Nothing],
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: js.UndefOr[scala.Nothing],
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: js.UndefOr[scala.Nothing],
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: scala.Null,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: scala.Null,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: scala.Null,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  @scala.inline
  def forStatement(
    init: typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_,
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    update: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.ForStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("forStatement")(init.asInstanceOf[js.Any], test.asInstanceOf[js.Any], update.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ForStatement_]
  
  @scala.inline
  def functionDeclaration(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: js.UndefOr[scala.Nothing],
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: js.UndefOr[scala.Nothing],
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: js.UndefOr[scala.Nothing],
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def functionDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionDeclaration")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  
  @scala.inline
  def functionExpression(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: js.UndefOr[scala.Nothing],
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: js.UndefOr[scala.Nothing],
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: js.UndefOr[scala.Nothing],
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  @scala.inline
  def functionExpression(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    generator: scala.Boolean,
    async: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionExpression")(id.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: js.UndefOr[scala.Nothing],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: scala.Null,
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_,
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: scala.Null,
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: js.UndefOr[scala.Nothing],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: scala.Null,
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: scala.Null,
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: scala.Null,
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_,
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: js.UndefOr[scala.Nothing],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: scala.Null,
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  @scala.inline
  def functionTypeAnnotation(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_],
    rest: typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_,
    returnType: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeAnnotation")(typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], rest.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeAnnotation_]
  
  @scala.inline
  def functionTypeParam(name: js.UndefOr[scala.Nothing], typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeParam")(name.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_]
  @scala.inline
  def functionTypeParam(name: scala.Null, typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeParam")(name.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_]
  @scala.inline
  def functionTypeParam(
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("functionTypeParam")(name.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionTypeParam_]
  
  @scala.inline
  def genericTypeAnnotation(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  @scala.inline
  def genericTypeAnnotation(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  @scala.inline
  def genericTypeAnnotation(id: typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_): typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  @scala.inline
  def genericTypeAnnotation(
    id: typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("genericTypeAnnotation")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.GenericTypeAnnotation_]
  
  @scala.inline
  def getBindingIdentifiers(node: typingsSlinky.babelTypes.indexTs37Mod.Node): typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_] = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]
  @scala.inline
  def getBindingIdentifiers(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: js.UndefOr[scala.Nothing],
    outerOnly: scala.Boolean
  ): typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]
  @scala.inline
  def getBindingIdentifiers(node: typingsSlinky.babelTypes.indexTs37Mod.Node, duplicates: scala.Boolean): typingsSlinky.std.Record[
    java.lang.String, 
    typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  ] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[
    java.lang.String, 
    typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  ]]
  @scala.inline
  def getBindingIdentifiers(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: scala.Boolean,
    outerOnly: scala.Boolean
  ): typingsSlinky.std.Record[
    java.lang.String, 
    typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  ] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[
    java.lang.String, 
    typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  ]]
  
  @scala.inline
  def getBindingIdentifiers_false(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]
  @scala.inline
  def getBindingIdentifiers_false(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: typingsSlinky.babelTypes.babelTypesBooleans.`false`,
    outerOnly: scala.Boolean
  ): typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]
  
  @scala.inline
  def getBindingIdentifiers_true(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.std.Record[java.lang.String, js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[java.lang.String, js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]]
  @scala.inline
  def getBindingIdentifiers_true(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: typingsSlinky.babelTypes.babelTypesBooleans.`true`,
    outerOnly: scala.Boolean
  ): typingsSlinky.std.Record[java.lang.String, js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any], outerOnly.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[java.lang.String, js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]]
  
  @scala.inline
  def getOuterBindingIdentifiers(node: typingsSlinky.babelTypes.indexTs37Mod.Node): typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_] = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]
  @scala.inline
  def getOuterBindingIdentifiers(node: typingsSlinky.babelTypes.indexTs37Mod.Node, duplicates: scala.Boolean): typingsSlinky.std.Record[
    java.lang.String, 
    typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  ] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[
    java.lang.String, 
    typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  ]]
  
  @scala.inline
  def getOuterBindingIdentifiers_false(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[java.lang.String, typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]
  
  @scala.inline
  def getOuterBindingIdentifiers_true(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    duplicates: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.std.Record[java.lang.String, js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("getOuterBindingIdentifiers")(node.asInstanceOf[js.Any], duplicates.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.std.Record[java.lang.String, js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]]]
  
  @scala.inline
  def identifier(name: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.Identifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("identifier")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  
  @scala.inline
  def ifStatement(
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    consequent: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.IfStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ifStatement")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.IfStatement_]
  @scala.inline
  def ifStatement(
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    consequent: typingsSlinky.babelTypes.indexTs37Mod.Statement,
    alternate: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.IfStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("ifStatement")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any], alternate.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.IfStatement_]
  
  @scala.inline
  def `import`(): typingsSlinky.babelTypes.indexTs37Mod.Import_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("import")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Import_]
  
  @scala.inline
  def importAttribute(
    key: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ImportAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importAttribute")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ImportAttribute_]
  @scala.inline
  def importAttribute(
    key: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    value: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ImportAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importAttribute")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ImportAttribute_]
  
  @scala.inline
  def importDeclaration(
    specifiers: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ImportSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ImportDefaultSpecifier_ | typingsSlinky.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_
    ],
    source: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ImportDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importDeclaration")(specifiers.asInstanceOf[js.Any], source.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ImportDeclaration_]
  
  @scala.inline
  def importDefaultSpecifier(local: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.ImportDefaultSpecifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importDefaultSpecifier")(local.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ImportDefaultSpecifier_]
  
  @scala.inline
  def importNamespaceSpecifier(local: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importNamespaceSpecifier")(local.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ImportNamespaceSpecifier_]
  
  @scala.inline
  def importSpecifier(
    local: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    imported: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.ImportSpecifier_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importSpecifier")(local.asInstanceOf[js.Any], imported.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ImportSpecifier_]
  @scala.inline
  def importSpecifier(
    local: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    imported: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.ImportSpecifier_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("importSpecifier")(local.asInstanceOf[js.Any], imported.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ImportSpecifier_]
  
  @scala.inline
  def inferredPredicate(): typingsSlinky.babelTypes.indexTs37Mod.InferredPredicate_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inferredPredicate")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InferredPredicate_]
  
  @scala.inline
  def inheritInnerComments(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritInnerComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  
  @scala.inline
  def inheritLeadingComments(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritLeadingComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  
  @scala.inline
  def inheritTrailingComments(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritTrailingComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  
  @scala.inline
  def inherits[T /* <: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node | scala.Null] */](child: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inherits")(child.asInstanceOf[js.Any]).asInstanceOf[T]
  @scala.inline
  def inherits[T /* <: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node | scala.Null] */](child: T, parent: typingsSlinky.babelTypes.indexTs37Mod.Node): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inherits")(child.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[T]
  
  @scala.inline
  def inheritsComments[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](node: T, parent: typingsSlinky.babelTypes.indexTs37Mod.Node): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("inheritsComments")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  @scala.inline
  def interfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceDeclaration_]
  
  @scala.inline
  def interfaceExtends(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_]
  @scala.inline
  def interfaceExtends(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_]
  @scala.inline
  def interfaceExtends(id: typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_): typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_]
  @scala.inline
  def interfaceExtends(
    id: typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceExtends")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_]
  
  @scala.inline
  def interfaceTypeAnnotation(
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceTypeAnnotation")(_extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_]
  @scala.inline
  def interfaceTypeAnnotation(
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.InterfaceExtends_],
    body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceTypeAnnotation")(_extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_]
  @scala.inline
  def interfaceTypeAnnotation(_extends: scala.Null, body: typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_): typingsSlinky.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interfaceTypeAnnotation")(_extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterfaceTypeAnnotation_]
  
  @scala.inline
  def interpreterDirective(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("interpreterDirective")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_]
  
  @scala.inline
  def intersectionTypeAnnotation(types: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType]): typingsSlinky.babelTypes.indexTs37Mod.IntersectionTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("intersectionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.IntersectionTypeAnnotation_]
  
  @scala.inline
  def is(`type`: java.lang.String): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
  @scala.inline
  def is(
    `type`: java.lang.String,
    n: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node],
    required: typingsSlinky.std.Partial[typingsSlinky.babelTypes.indexTs37Mod.Node]
  ): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
  @scala.inline
  def is(
    `type`: java.lang.String,
    n: scala.Null,
    required: typingsSlinky.std.Partial[typingsSlinky.babelTypes.indexTs37Mod.Node]
  ): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
  @scala.inline
  def is(`type`: java.lang.String, n: typingsSlinky.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
  @scala.inline
  def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */](`type`: T): /* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any]).asInstanceOf[/* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean]
  @scala.inline
  def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */](`type`: T, n: typingsSlinky.babelTypes.indexTs37Mod.Node): /* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any])).asInstanceOf[/* is std.Extract<@babel/types.@babel/types/lib/index-ts3.7.Node, @babel/types.anon.Type<T>> */ scala.Boolean]
  @scala.inline
  def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */, P /* <: typingsSlinky.std.Extract[typingsSlinky.babelTypes.indexTs37Mod.Node, typingsSlinky.babelTypes.anon.Type[T]] */](
    `type`: T,
    n: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node],
    required: typingsSlinky.std.Partial[P]
  ): /* is P */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
  @scala.inline
  def is[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */, P /* <: typingsSlinky.std.Extract[typingsSlinky.babelTypes.indexTs37Mod.Node, typingsSlinky.babelTypes.anon.Type[T]] */](`type`: T, n: scala.Null, required: typingsSlinky.std.Partial[P]): /* is P */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
  
  @scala.inline
  def isAnyTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isAnyTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isAnyTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isAnyTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isAnyTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAnyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AnyTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isArgumentPlaceholder(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
  @scala.inline
  def isArgumentPlaceholder(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
  @scala.inline
  def isArgumentPlaceholder(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
  @scala.inline
  def isArgumentPlaceholder(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
  @scala.inline
  def isArgumentPlaceholder(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArgumentPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArgumentPlaceholder */ scala.Boolean]
  
  @scala.inline
  def isArrayExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
  @scala.inline
  def isArrayExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
  @scala.inline
  def isArrayExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
  @scala.inline
  def isArrayExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
  @scala.inline
  def isArrayExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayExpression */ scala.Boolean]
  
  @scala.inline
  def isArrayPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
  @scala.inline
  def isArrayPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
  @scala.inline
  def isArrayPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
  @scala.inline
  def isArrayPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
  @scala.inline
  def isArrayPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayPattern */ scala.Boolean]
  
  @scala.inline
  def isArrayTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isArrayTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isArrayTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isArrayTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isArrayTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrayTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrayTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isArrowFunctionExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
  @scala.inline
  def isArrowFunctionExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
  @scala.inline
  def isArrowFunctionExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
  @scala.inline
  def isArrowFunctionExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
  @scala.inline
  def isArrowFunctionExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isArrowFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ArrowFunctionExpression */ scala.Boolean]
  
  @scala.inline
  def isAssignmentExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
  @scala.inline
  def isAssignmentExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
  @scala.inline
  def isAssignmentExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
  @scala.inline
  def isAssignmentExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
  @scala.inline
  def isAssignmentExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentExpression */ scala.Boolean]
  
  @scala.inline
  def isAssignmentPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
  @scala.inline
  def isAssignmentPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
  @scala.inline
  def isAssignmentPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
  @scala.inline
  def isAssignmentPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
  @scala.inline
  def isAssignmentPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAssignmentPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AssignmentPattern */ scala.Boolean]
  
  @scala.inline
  def isAwaitExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
  @scala.inline
  def isAwaitExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
  @scala.inline
  def isAwaitExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
  @scala.inline
  def isAwaitExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
  @scala.inline
  def isAwaitExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isAwaitExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.AwaitExpression */ scala.Boolean]
  
  @scala.inline
  def isBigIntLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
  @scala.inline
  def isBigIntLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
  @scala.inline
  def isBigIntLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
  @scala.inline
  def isBigIntLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
  @scala.inline
  def isBigIntLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBigIntLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BigIntLiteral */ scala.Boolean]
  
  @scala.inline
  def isBinary(): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
  @scala.inline
  def isBinary(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
  @scala.inline
  def isBinary(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
  @scala.inline
  def isBinary(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
  @scala.inline
  def isBinary(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinary")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Binary */ scala.Boolean]
  
  @scala.inline
  def isBinaryExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
  @scala.inline
  def isBinaryExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
  @scala.inline
  def isBinaryExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
  @scala.inline
  def isBinaryExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
  @scala.inline
  def isBinaryExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BinaryExpression */ scala.Boolean]
  
  @scala.inline
  def isBindExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
  @scala.inline
  def isBindExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
  @scala.inline
  def isBindExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
  @scala.inline
  def isBindExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
  @scala.inline
  def isBindExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBindExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BindExpression */ scala.Boolean]
  
  @scala.inline
  def isBinding(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinding")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  @scala.inline
  def isBinding(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node,
    grandparent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBinding")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any], grandparent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  
  @scala.inline
  def isBlock(): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
  @scala.inline
  def isBlock(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
  @scala.inline
  def isBlock(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
  @scala.inline
  def isBlock(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
  @scala.inline
  def isBlock(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Block */ scala.Boolean]
  
  @scala.inline
  def isBlockParent(): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
  @scala.inline
  def isBlockParent(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
  @scala.inline
  def isBlockParent(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
  @scala.inline
  def isBlockParent(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
  @scala.inline
  def isBlockParent(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockParent */ scala.Boolean]
  
  @scala.inline
  def isBlockScoped(node: typingsSlinky.babelTypes.indexTs37Mod.Node): scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockScoped")(node.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]
  
  @scala.inline
  def isBlockStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
  @scala.inline
  def isBlockStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
  @scala.inline
  def isBlockStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
  @scala.inline
  def isBlockStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
  @scala.inline
  def isBlockStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBlockStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BlockStatement */ scala.Boolean]
  
  @scala.inline
  def isBooleanLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
  @scala.inline
  def isBooleanLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
  @scala.inline
  def isBooleanLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
  @scala.inline
  def isBooleanLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
  @scala.inline
  def isBooleanLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteral */ scala.Boolean]
  
  @scala.inline
  def isBooleanLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanLiteralTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isBooleanTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isBooleanTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBooleanTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BooleanTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isBreakStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
  @scala.inline
  def isBreakStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
  @scala.inline
  def isBreakStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
  @scala.inline
  def isBreakStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
  @scala.inline
  def isBreakStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isBreakStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.BreakStatement */ scala.Boolean]
  
  @scala.inline
  def isCallExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
  @scala.inline
  def isCallExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
  @scala.inline
  def isCallExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
  @scala.inline
  def isCallExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
  @scala.inline
  def isCallExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CallExpression */ scala.Boolean]
  
  @scala.inline
  def isCatchClause(): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
  @scala.inline
  def isCatchClause(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
  @scala.inline
  def isCatchClause(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
  @scala.inline
  def isCatchClause(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
  @scala.inline
  def isCatchClause(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCatchClause")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CatchClause */ scala.Boolean]
  
  @scala.inline
  def isClass(): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
  @scala.inline
  def isClass(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
  @scala.inline
  def isClass(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
  @scala.inline
  def isClass(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
  @scala.inline
  def isClass(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Class */ scala.Boolean]
  
  @scala.inline
  def isClassBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
  @scala.inline
  def isClassBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
  @scala.inline
  def isClassBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
  @scala.inline
  def isClassBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
  @scala.inline
  def isClassBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassBody */ scala.Boolean]
  
  @scala.inline
  def isClassDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
  @scala.inline
  def isClassDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
  @scala.inline
  def isClassDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
  @scala.inline
  def isClassDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
  @scala.inline
  def isClassDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassDeclaration */ scala.Boolean]
  
  @scala.inline
  def isClassExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
  @scala.inline
  def isClassExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
  @scala.inline
  def isClassExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
  @scala.inline
  def isClassExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
  @scala.inline
  def isClassExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassExpression */ scala.Boolean]
  
  @scala.inline
  def isClassImplements(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
  @scala.inline
  def isClassImplements(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
  @scala.inline
  def isClassImplements(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
  @scala.inline
  def isClassImplements(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
  @scala.inline
  def isClassImplements(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassImplements")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassImplements */ scala.Boolean]
  
  @scala.inline
  def isClassMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
  @scala.inline
  def isClassMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
  @scala.inline
  def isClassMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
  @scala.inline
  def isClassMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
  @scala.inline
  def isClassMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassMethod */ scala.Boolean]
  
  @scala.inline
  def isClassPrivateMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
  @scala.inline
  def isClassPrivateMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
  @scala.inline
  def isClassPrivateMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
  @scala.inline
  def isClassPrivateMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
  @scala.inline
  def isClassPrivateMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateMethod */ scala.Boolean]
  
  @scala.inline
  def isClassPrivateProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
  @scala.inline
  def isClassPrivateProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
  @scala.inline
  def isClassPrivateProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
  @scala.inline
  def isClassPrivateProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
  @scala.inline
  def isClassPrivateProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassPrivateProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassPrivateProperty */ scala.Boolean]
  
  @scala.inline
  def isClassProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
  @scala.inline
  def isClassProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
  @scala.inline
  def isClassProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
  @scala.inline
  def isClassProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
  @scala.inline
  def isClassProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isClassProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ClassProperty */ scala.Boolean]
  
  @scala.inline
  def isCompletionStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
  @scala.inline
  def isCompletionStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
  @scala.inline
  def isCompletionStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
  @scala.inline
  def isCompletionStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
  @scala.inline
  def isCompletionStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isCompletionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.CompletionStatement */ scala.Boolean]
  
  @scala.inline
  def isConditional(): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
  @scala.inline
  def isConditional(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
  @scala.inline
  def isConditional(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
  @scala.inline
  def isConditional(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
  @scala.inline
  def isConditional(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditional")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Conditional */ scala.Boolean]
  
  @scala.inline
  def isConditionalExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
  @scala.inline
  def isConditionalExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
  @scala.inline
  def isConditionalExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
  @scala.inline
  def isConditionalExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
  @scala.inline
  def isConditionalExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isConditionalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ConditionalExpression */ scala.Boolean]
  
  @scala.inline
  def isContinueStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
  @scala.inline
  def isContinueStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
  @scala.inline
  def isContinueStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
  @scala.inline
  def isContinueStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
  @scala.inline
  def isContinueStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isContinueStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ContinueStatement */ scala.Boolean]
  
  @scala.inline
  def isDebuggerStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
  @scala.inline
  def isDebuggerStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
  @scala.inline
  def isDebuggerStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
  @scala.inline
  def isDebuggerStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
  @scala.inline
  def isDebuggerStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDebuggerStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DebuggerStatement */ scala.Boolean]
  
  @scala.inline
  def isDecimalLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
  @scala.inline
  def isDecimalLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
  @scala.inline
  def isDecimalLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
  @scala.inline
  def isDecimalLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
  @scala.inline
  def isDecimalLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecimalLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DecimalLiteral */ scala.Boolean]
  
  @scala.inline
  def isDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
  @scala.inline
  def isDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
  @scala.inline
  def isDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
  @scala.inline
  def isDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
  @scala.inline
  def isDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Declaration */ scala.Boolean]
  
  @scala.inline
  def isDeclareClass(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
  @scala.inline
  def isDeclareClass(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
  @scala.inline
  def isDeclareClass(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
  @scala.inline
  def isDeclareClass(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
  @scala.inline
  def isDeclareClass(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareClass")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareClass */ scala.Boolean]
  
  @scala.inline
  def isDeclareExportAllDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportAllDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportAllDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportAllDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportAllDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportAllDeclaration */ scala.Boolean]
  
  @scala.inline
  def isDeclareExportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
  @scala.inline
  def isDeclareExportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareExportDeclaration */ scala.Boolean]
  
  @scala.inline
  def isDeclareFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
  @scala.inline
  def isDeclareFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
  @scala.inline
  def isDeclareFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
  @scala.inline
  def isDeclareFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
  @scala.inline
  def isDeclareFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareFunction */ scala.Boolean]
  
  @scala.inline
  def isDeclareInterface(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
  @scala.inline
  def isDeclareInterface(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
  @scala.inline
  def isDeclareInterface(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
  @scala.inline
  def isDeclareInterface(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
  @scala.inline
  def isDeclareInterface(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareInterface")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareInterface */ scala.Boolean]
  
  @scala.inline
  def isDeclareModule(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
  @scala.inline
  def isDeclareModule(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
  @scala.inline
  def isDeclareModule(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
  @scala.inline
  def isDeclareModule(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
  @scala.inline
  def isDeclareModule(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModule")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModule */ scala.Boolean]
  
  @scala.inline
  def isDeclareModuleExports(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
  @scala.inline
  def isDeclareModuleExports(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
  @scala.inline
  def isDeclareModuleExports(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
  @scala.inline
  def isDeclareModuleExports(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
  @scala.inline
  def isDeclareModuleExports(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareModuleExports")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareModuleExports */ scala.Boolean]
  
  @scala.inline
  def isDeclareOpaqueType(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
  @scala.inline
  def isDeclareOpaqueType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
  @scala.inline
  def isDeclareOpaqueType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
  @scala.inline
  def isDeclareOpaqueType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
  @scala.inline
  def isDeclareOpaqueType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareOpaqueType */ scala.Boolean]
  
  @scala.inline
  def isDeclareTypeAlias(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
  @scala.inline
  def isDeclareTypeAlias(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
  @scala.inline
  def isDeclareTypeAlias(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
  @scala.inline
  def isDeclareTypeAlias(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
  @scala.inline
  def isDeclareTypeAlias(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareTypeAlias */ scala.Boolean]
  
  @scala.inline
  def isDeclareVariable(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
  @scala.inline
  def isDeclareVariable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
  @scala.inline
  def isDeclareVariable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
  @scala.inline
  def isDeclareVariable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
  @scala.inline
  def isDeclareVariable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclareVariable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclareVariable */ scala.Boolean]
  
  @scala.inline
  def isDeclaredPredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
  @scala.inline
  def isDeclaredPredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
  @scala.inline
  def isDeclaredPredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
  @scala.inline
  def isDeclaredPredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
  @scala.inline
  def isDeclaredPredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDeclaredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DeclaredPredicate */ scala.Boolean]
  
  @scala.inline
  def isDecorator(): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
  @scala.inline
  def isDecorator(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
  @scala.inline
  def isDecorator(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
  @scala.inline
  def isDecorator(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
  @scala.inline
  def isDecorator(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDecorator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Decorator */ scala.Boolean]
  
  @scala.inline
  def isDirective(): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
  @scala.inline
  def isDirective(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
  @scala.inline
  def isDirective(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
  @scala.inline
  def isDirective(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
  @scala.inline
  def isDirective(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Directive */ scala.Boolean]
  
  @scala.inline
  def isDirectiveLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
  @scala.inline
  def isDirectiveLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
  @scala.inline
  def isDirectiveLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
  @scala.inline
  def isDirectiveLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
  @scala.inline
  def isDirectiveLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDirectiveLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DirectiveLiteral */ scala.Boolean]
  
  @scala.inline
  def isDoExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
  @scala.inline
  def isDoExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
  @scala.inline
  def isDoExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
  @scala.inline
  def isDoExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
  @scala.inline
  def isDoExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoExpression */ scala.Boolean]
  
  @scala.inline
  def isDoWhileStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
  @scala.inline
  def isDoWhileStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
  @scala.inline
  def isDoWhileStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
  @scala.inline
  def isDoWhileStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
  @scala.inline
  def isDoWhileStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isDoWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.DoWhileStatement */ scala.Boolean]
  
  @scala.inline
  def isEmptyStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
  @scala.inline
  def isEmptyStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
  @scala.inline
  def isEmptyStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
  @scala.inline
  def isEmptyStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
  @scala.inline
  def isEmptyStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyStatement */ scala.Boolean]
  
  @scala.inline
  def isEmptyTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isEmptyTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isEmptyTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isEmptyTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isEmptyTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEmptyTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EmptyTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isEnumBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
  @scala.inline
  def isEnumBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
  @scala.inline
  def isEnumBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
  @scala.inline
  def isEnumBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
  @scala.inline
  def isEnumBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBody */ scala.Boolean]
  
  @scala.inline
  def isEnumBooleanBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
  @scala.inline
  def isEnumBooleanBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
  @scala.inline
  def isEnumBooleanBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
  @scala.inline
  def isEnumBooleanBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
  @scala.inline
  def isEnumBooleanBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanBody */ scala.Boolean]
  
  @scala.inline
  def isEnumBooleanMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
  @scala.inline
  def isEnumBooleanMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
  @scala.inline
  def isEnumBooleanMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
  @scala.inline
  def isEnumBooleanMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
  @scala.inline
  def isEnumBooleanMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumBooleanMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumBooleanMember */ scala.Boolean]
  
  @scala.inline
  def isEnumDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
  @scala.inline
  def isEnumDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
  @scala.inline
  def isEnumDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
  @scala.inline
  def isEnumDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
  @scala.inline
  def isEnumDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDeclaration */ scala.Boolean]
  
  @scala.inline
  def isEnumDefaultedMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
  @scala.inline
  def isEnumDefaultedMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
  @scala.inline
  def isEnumDefaultedMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
  @scala.inline
  def isEnumDefaultedMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
  @scala.inline
  def isEnumDefaultedMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumDefaultedMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumDefaultedMember */ scala.Boolean]
  
  @scala.inline
  def isEnumMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
  @scala.inline
  def isEnumMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
  @scala.inline
  def isEnumMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
  @scala.inline
  def isEnumMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
  @scala.inline
  def isEnumMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumMember */ scala.Boolean]
  
  @scala.inline
  def isEnumNumberBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
  @scala.inline
  def isEnumNumberBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
  @scala.inline
  def isEnumNumberBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
  @scala.inline
  def isEnumNumberBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
  @scala.inline
  def isEnumNumberBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberBody */ scala.Boolean]
  
  @scala.inline
  def isEnumNumberMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
  @scala.inline
  def isEnumNumberMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
  @scala.inline
  def isEnumNumberMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
  @scala.inline
  def isEnumNumberMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
  @scala.inline
  def isEnumNumberMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumNumberMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumNumberMember */ scala.Boolean]
  
  @scala.inline
  def isEnumStringBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
  @scala.inline
  def isEnumStringBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
  @scala.inline
  def isEnumStringBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
  @scala.inline
  def isEnumStringBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
  @scala.inline
  def isEnumStringBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringBody */ scala.Boolean]
  
  @scala.inline
  def isEnumStringMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
  @scala.inline
  def isEnumStringMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
  @scala.inline
  def isEnumStringMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
  @scala.inline
  def isEnumStringMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
  @scala.inline
  def isEnumStringMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumStringMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumStringMember */ scala.Boolean]
  
  @scala.inline
  def isEnumSymbolBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
  @scala.inline
  def isEnumSymbolBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
  @scala.inline
  def isEnumSymbolBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
  @scala.inline
  def isEnumSymbolBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
  @scala.inline
  def isEnumSymbolBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isEnumSymbolBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.EnumSymbolBody */ scala.Boolean]
  
  @scala.inline
  def isExistsTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isExistsTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isExistsTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isExistsTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isExistsTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExistsTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExistsTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isExportAllDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isExportAllDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isExportAllDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isExportAllDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
  @scala.inline
  def isExportAllDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportAllDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportAllDeclaration */ scala.Boolean]
  
  @scala.inline
  def isExportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDeclaration */ scala.Boolean]
  
  @scala.inline
  def isExportDefaultDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDefaultDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDefaultDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDefaultDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
  @scala.inline
  def isExportDefaultDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultDeclaration */ scala.Boolean]
  
  @scala.inline
  def isExportDefaultSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isExportDefaultSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isExportDefaultSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isExportDefaultSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isExportDefaultSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportDefaultSpecifier */ scala.Boolean]
  
  @scala.inline
  def isExportNamedDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
  @scala.inline
  def isExportNamedDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
  @scala.inline
  def isExportNamedDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
  @scala.inline
  def isExportNamedDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
  @scala.inline
  def isExportNamedDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamedDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamedDeclaration */ scala.Boolean]
  
  @scala.inline
  def isExportNamespaceSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isExportNamespaceSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isExportNamespaceSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isExportNamespaceSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isExportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportNamespaceSpecifier */ scala.Boolean]
  
  @scala.inline
  def isExportSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
  @scala.inline
  def isExportSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
  @scala.inline
  def isExportSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
  @scala.inline
  def isExportSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
  @scala.inline
  def isExportSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExportSpecifier */ scala.Boolean]
  
  @scala.inline
  def isExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
  @scala.inline
  def isExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
  @scala.inline
  def isExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
  @scala.inline
  def isExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
  @scala.inline
  def isExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Expression */ scala.Boolean]
  
  @scala.inline
  def isExpressionStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
  @scala.inline
  def isExpressionStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
  @scala.inline
  def isExpressionStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
  @scala.inline
  def isExpressionStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
  @scala.inline
  def isExpressionStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionStatement */ scala.Boolean]
  
  @scala.inline
  def isExpressionWrapper(): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
  @scala.inline
  def isExpressionWrapper(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
  @scala.inline
  def isExpressionWrapper(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
  @scala.inline
  def isExpressionWrapper(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
  @scala.inline
  def isExpressionWrapper(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isExpressionWrapper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ExpressionWrapper */ scala.Boolean]
  
  @scala.inline
  def isFile(): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
  @scala.inline
  def isFile(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
  @scala.inline
  def isFile(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
  @scala.inline
  def isFile(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
  @scala.inline
  def isFile(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.File */ scala.Boolean]
  
  @scala.inline
  def isFlow(): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
  @scala.inline
  def isFlow(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
  @scala.inline
  def isFlow(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
  @scala.inline
  def isFlow(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
  @scala.inline
  def isFlow(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlow")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Flow */ scala.Boolean]
  
  @scala.inline
  def isFlowBaseAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
  @scala.inline
  def isFlowBaseAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
  @scala.inline
  def isFlowBaseAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
  @scala.inline
  def isFlowBaseAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
  @scala.inline
  def isFlowBaseAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowBaseAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowBaseAnnotation */ scala.Boolean]
  
  @scala.inline
  def isFlowDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
  @scala.inline
  def isFlowDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
  @scala.inline
  def isFlowDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
  @scala.inline
  def isFlowDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
  @scala.inline
  def isFlowDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowDeclaration */ scala.Boolean]
  
  @scala.inline
  def isFlowPredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
  @scala.inline
  def isFlowPredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
  @scala.inline
  def isFlowPredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
  @scala.inline
  def isFlowPredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
  @scala.inline
  def isFlowPredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowPredicate */ scala.Boolean]
  
  @scala.inline
  def isFlowType(): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
  @scala.inline
  def isFlowType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
  @scala.inline
  def isFlowType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
  @scala.inline
  def isFlowType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
  @scala.inline
  def isFlowType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFlowType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FlowType */ scala.Boolean]
  
  @scala.inline
  def isFor(): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
  @scala.inline
  def isFor(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
  @scala.inline
  def isFor(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
  @scala.inline
  def isFor(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
  @scala.inline
  def isFor(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFor")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.For */ scala.Boolean]
  
  @scala.inline
  def isForInStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
  @scala.inline
  def isForInStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
  @scala.inline
  def isForInStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
  @scala.inline
  def isForInStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
  @scala.inline
  def isForInStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForInStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForInStatement */ scala.Boolean]
  
  @scala.inline
  def isForOfStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
  @scala.inline
  def isForOfStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
  @scala.inline
  def isForOfStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
  @scala.inline
  def isForOfStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
  @scala.inline
  def isForOfStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForOfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForOfStatement */ scala.Boolean]
  
  @scala.inline
  def isForStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
  @scala.inline
  def isForStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
  @scala.inline
  def isForStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
  @scala.inline
  def isForStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
  @scala.inline
  def isForStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForStatement */ scala.Boolean]
  
  @scala.inline
  def isForXStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
  @scala.inline
  def isForXStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
  @scala.inline
  def isForXStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
  @scala.inline
  def isForXStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
  @scala.inline
  def isForXStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isForXStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ForXStatement */ scala.Boolean]
  
  @scala.inline
  def isFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
  @scala.inline
  def isFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
  @scala.inline
  def isFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
  @scala.inline
  def isFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
  @scala.inline
  def isFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Function */ scala.Boolean]
  
  @scala.inline
  def isFunctionDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
  @scala.inline
  def isFunctionDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
  @scala.inline
  def isFunctionDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
  @scala.inline
  def isFunctionDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
  @scala.inline
  def isFunctionDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionDeclaration */ scala.Boolean]
  
  @scala.inline
  def isFunctionExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
  @scala.inline
  def isFunctionExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
  @scala.inline
  def isFunctionExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
  @scala.inline
  def isFunctionExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
  @scala.inline
  def isFunctionExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionExpression */ scala.Boolean]
  
  @scala.inline
  def isFunctionParent(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
  @scala.inline
  def isFunctionParent(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
  @scala.inline
  def isFunctionParent(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
  @scala.inline
  def isFunctionParent(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
  @scala.inline
  def isFunctionParent(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionParent")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionParent */ scala.Boolean]
  
  @scala.inline
  def isFunctionTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isFunctionTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isFunctionTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isFunctionTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isFunctionTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isFunctionTypeParam(): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
  @scala.inline
  def isFunctionTypeParam(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
  @scala.inline
  def isFunctionTypeParam(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
  @scala.inline
  def isFunctionTypeParam(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
  @scala.inline
  def isFunctionTypeParam(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isFunctionTypeParam")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.FunctionTypeParam */ scala.Boolean]
  
  @scala.inline
  def isGenericTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isGenericTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isGenericTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isGenericTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isGenericTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isGenericTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.GenericTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
  @scala.inline
  def isIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
  @scala.inline
  def isIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
  @scala.inline
  def isIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
  @scala.inline
  def isIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Identifier */ scala.Boolean]
  
  @scala.inline
  def isIfStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
  @scala.inline
  def isIfStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
  @scala.inline
  def isIfStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
  @scala.inline
  def isIfStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
  @scala.inline
  def isIfStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIfStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IfStatement */ scala.Boolean]
  
  @scala.inline
  def isImmutable(): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
  @scala.inline
  def isImmutable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
  @scala.inline
  def isImmutable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
  @scala.inline
  def isImmutable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
  @scala.inline
  def isImmutable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
  @scala.inline
  def isImmutable(node: typingsSlinky.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImmutable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Immutable */ scala.Boolean]
  
  @scala.inline
  def isImport(): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
  @scala.inline
  def isImport(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
  @scala.inline
  def isImport(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
  @scala.inline
  def isImport(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
  @scala.inline
  def isImport(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImport")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Import */ scala.Boolean]
  
  @scala.inline
  def isImportAttribute(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
  @scala.inline
  def isImportAttribute(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
  @scala.inline
  def isImportAttribute(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
  @scala.inline
  def isImportAttribute(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
  @scala.inline
  def isImportAttribute(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportAttribute */ scala.Boolean]
  
  @scala.inline
  def isImportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
  @scala.inline
  def isImportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
  @scala.inline
  def isImportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
  @scala.inline
  def isImportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
  @scala.inline
  def isImportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDeclaration */ scala.Boolean]
  
  @scala.inline
  def isImportDefaultSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isImportDefaultSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isImportDefaultSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isImportDefaultSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
  @scala.inline
  def isImportDefaultSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportDefaultSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportDefaultSpecifier */ scala.Boolean]
  
  @scala.inline
  def isImportNamespaceSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isImportNamespaceSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isImportNamespaceSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isImportNamespaceSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
  @scala.inline
  def isImportNamespaceSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportNamespaceSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportNamespaceSpecifier */ scala.Boolean]
  
  @scala.inline
  def isImportSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
  @scala.inline
  def isImportSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
  @scala.inline
  def isImportSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
  @scala.inline
  def isImportSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
  @scala.inline
  def isImportSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isImportSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ImportSpecifier */ scala.Boolean]
  
  @scala.inline
  def isInferredPredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
  @scala.inline
  def isInferredPredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
  @scala.inline
  def isInferredPredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
  @scala.inline
  def isInferredPredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
  @scala.inline
  def isInferredPredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInferredPredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InferredPredicate */ scala.Boolean]
  
  @scala.inline
  def isInterfaceDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isInterfaceDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isInterfaceDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isInterfaceDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isInterfaceDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceDeclaration */ scala.Boolean]
  
  @scala.inline
  def isInterfaceExtends(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
  @scala.inline
  def isInterfaceExtends(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
  @scala.inline
  def isInterfaceExtends(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
  @scala.inline
  def isInterfaceExtends(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
  @scala.inline
  def isInterfaceExtends(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceExtends")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceExtends */ scala.Boolean]
  
  @scala.inline
  def isInterfaceTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isInterfaceTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isInterfaceTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isInterfaceTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isInterfaceTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterfaceTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterfaceTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isInterpreterDirective(): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
  @scala.inline
  def isInterpreterDirective(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
  @scala.inline
  def isInterpreterDirective(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
  @scala.inline
  def isInterpreterDirective(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
  @scala.inline
  def isInterpreterDirective(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isInterpreterDirective")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.InterpreterDirective */ scala.Boolean]
  
  @scala.inline
  def isIntersectionTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isIntersectionTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isIntersectionTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isIntersectionTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isIntersectionTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isIntersectionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.IntersectionTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isJSX(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
  @scala.inline
  def isJSX(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
  @scala.inline
  def isJSX(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
  @scala.inline
  def isJSX(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
  @scala.inline
  def isJSX(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSX")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSX */ scala.Boolean]
  
  @scala.inline
  def isJSXAttribute(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
  @scala.inline
  def isJSXAttribute(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
  @scala.inline
  def isJSXAttribute(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
  @scala.inline
  def isJSXAttribute(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
  @scala.inline
  def isJSXAttribute(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXAttribute */ scala.Boolean]
  
  @scala.inline
  def isJSXClosingElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
  @scala.inline
  def isJSXClosingElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
  @scala.inline
  def isJSXClosingElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
  @scala.inline
  def isJSXClosingElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
  @scala.inline
  def isJSXClosingElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingElement */ scala.Boolean]
  
  @scala.inline
  def isJSXClosingFragment(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
  @scala.inline
  def isJSXClosingFragment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
  @scala.inline
  def isJSXClosingFragment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
  @scala.inline
  def isJSXClosingFragment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
  @scala.inline
  def isJSXClosingFragment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXClosingFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXClosingFragment */ scala.Boolean]
  
  @scala.inline
  def isJSXElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
  @scala.inline
  def isJSXElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
  @scala.inline
  def isJSXElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
  @scala.inline
  def isJSXElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
  @scala.inline
  def isJSXElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXElement */ scala.Boolean]
  
  @scala.inline
  def isJSXEmptyExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
  @scala.inline
  def isJSXEmptyExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
  @scala.inline
  def isJSXEmptyExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
  @scala.inline
  def isJSXEmptyExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
  @scala.inline
  def isJSXEmptyExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXEmptyExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXEmptyExpression */ scala.Boolean]
  
  @scala.inline
  def isJSXExpressionContainer(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
  @scala.inline
  def isJSXExpressionContainer(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
  @scala.inline
  def isJSXExpressionContainer(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
  @scala.inline
  def isJSXExpressionContainer(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
  @scala.inline
  def isJSXExpressionContainer(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXExpressionContainer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXExpressionContainer */ scala.Boolean]
  
  @scala.inline
  def isJSXFragment(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
  @scala.inline
  def isJSXFragment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
  @scala.inline
  def isJSXFragment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
  @scala.inline
  def isJSXFragment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
  @scala.inline
  def isJSXFragment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXFragment */ scala.Boolean]
  
  @scala.inline
  def isJSXIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
  @scala.inline
  def isJSXIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
  @scala.inline
  def isJSXIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
  @scala.inline
  def isJSXIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
  @scala.inline
  def isJSXIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXIdentifier */ scala.Boolean]
  
  @scala.inline
  def isJSXMemberExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
  @scala.inline
  def isJSXMemberExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
  @scala.inline
  def isJSXMemberExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
  @scala.inline
  def isJSXMemberExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
  @scala.inline
  def isJSXMemberExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXMemberExpression */ scala.Boolean]
  
  @scala.inline
  def isJSXNamespacedName(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
  @scala.inline
  def isJSXNamespacedName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
  @scala.inline
  def isJSXNamespacedName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
  @scala.inline
  def isJSXNamespacedName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
  @scala.inline
  def isJSXNamespacedName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXNamespacedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXNamespacedName */ scala.Boolean]
  
  @scala.inline
  def isJSXOpeningElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
  @scala.inline
  def isJSXOpeningElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
  @scala.inline
  def isJSXOpeningElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
  @scala.inline
  def isJSXOpeningElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
  @scala.inline
  def isJSXOpeningElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningElement */ scala.Boolean]
  
  @scala.inline
  def isJSXOpeningFragment(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
  @scala.inline
  def isJSXOpeningFragment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
  @scala.inline
  def isJSXOpeningFragment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
  @scala.inline
  def isJSXOpeningFragment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
  @scala.inline
  def isJSXOpeningFragment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXOpeningFragment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXOpeningFragment */ scala.Boolean]
  
  @scala.inline
  def isJSXSpreadAttribute(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
  @scala.inline
  def isJSXSpreadAttribute(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
  @scala.inline
  def isJSXSpreadAttribute(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
  @scala.inline
  def isJSXSpreadAttribute(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
  @scala.inline
  def isJSXSpreadAttribute(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadAttribute")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadAttribute */ scala.Boolean]
  
  @scala.inline
  def isJSXSpreadChild(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
  @scala.inline
  def isJSXSpreadChild(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
  @scala.inline
  def isJSXSpreadChild(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
  @scala.inline
  def isJSXSpreadChild(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
  @scala.inline
  def isJSXSpreadChild(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXSpreadChild")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXSpreadChild */ scala.Boolean]
  
  @scala.inline
  def isJSXText(): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
  @scala.inline
  def isJSXText(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
  @scala.inline
  def isJSXText(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
  @scala.inline
  def isJSXText(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
  @scala.inline
  def isJSXText(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isJSXText")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.JSXText */ scala.Boolean]
  
  @scala.inline
  def isLVal(): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
  @scala.inline
  def isLVal(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
  @scala.inline
  def isLVal(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
  @scala.inline
  def isLVal(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
  @scala.inline
  def isLVal(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLVal")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LVal */ scala.Boolean]
  
  @scala.inline
  def isLabeledStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
  @scala.inline
  def isLabeledStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
  @scala.inline
  def isLabeledStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
  @scala.inline
  def isLabeledStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
  @scala.inline
  def isLabeledStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLabeledStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LabeledStatement */ scala.Boolean]
  
  @scala.inline
  def isLet(node: typingsSlinky.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLet")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
  
  @scala.inline
  def isLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
  @scala.inline
  def isLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
  @scala.inline
  def isLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
  @scala.inline
  def isLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
  @scala.inline
  def isLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Literal */ scala.Boolean]
  
  @scala.inline
  def isLogicalExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
  @scala.inline
  def isLogicalExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
  @scala.inline
  def isLogicalExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
  @scala.inline
  def isLogicalExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
  @scala.inline
  def isLogicalExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLogicalExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.LogicalExpression */ scala.Boolean]
  
  @scala.inline
  def isLoop(): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
  @scala.inline
  def isLoop(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
  @scala.inline
  def isLoop(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
  @scala.inline
  def isLoop(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
  @scala.inline
  def isLoop(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isLoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Loop */ scala.Boolean]
  
  @scala.inline
  def isMemberExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def isMemberExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def isMemberExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def isMemberExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def isMemberExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  
  @scala.inline
  def isMetaProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
  @scala.inline
  def isMetaProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
  @scala.inline
  def isMetaProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
  @scala.inline
  def isMetaProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
  @scala.inline
  def isMetaProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMetaProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MetaProperty */ scala.Boolean]
  
  @scala.inline
  def isMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
  @scala.inline
  def isMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
  @scala.inline
  def isMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
  @scala.inline
  def isMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
  @scala.inline
  def isMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Method */ scala.Boolean]
  
  @scala.inline
  def isMixedTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isMixedTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isMixedTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isMixedTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isMixedTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isMixedTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MixedTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isModuleDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isModuleDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isModuleDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isModuleDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isModuleDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleDeclaration */ scala.Boolean]
  
  @scala.inline
  def isModuleSpecifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
  @scala.inline
  def isModuleSpecifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
  @scala.inline
  def isModuleSpecifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
  @scala.inline
  def isModuleSpecifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
  @scala.inline
  def isModuleSpecifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isModuleSpecifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ModuleSpecifier */ scala.Boolean]
  
  @scala.inline
  def isNewExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
  @scala.inline
  def isNewExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
  @scala.inline
  def isNewExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
  @scala.inline
  def isNewExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
  @scala.inline
  def isNewExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNewExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NewExpression */ scala.Boolean]
  
  @scala.inline
  def isNode(): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNode")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
  @scala.inline
  def isNode(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNode")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Node */ scala.Boolean]
  
  @scala.inline
  def isNodesEquivalent(a: js.Any, b: js.Any): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNodesEquivalent")(a.asInstanceOf[js.Any], b.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  @scala.inline
  def isNodesEquivalent[T /* <: typingsSlinky.std.Partial[typingsSlinky.babelTypes.indexTs37Mod.Node] */](a: T, b: js.Any): /* is T */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNodesEquivalent")(a.asInstanceOf[js.Any], b.asInstanceOf[js.Any])).asInstanceOf[/* is T */ scala.Boolean]
  
  @scala.inline
  def isNoop(): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
  @scala.inline
  def isNoop(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
  @scala.inline
  def isNoop(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
  @scala.inline
  def isNoop(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
  @scala.inline
  def isNoop(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNoop")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Noop */ scala.Boolean]
  
  @scala.inline
  def isNullLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
  @scala.inline
  def isNullLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
  @scala.inline
  def isNullLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
  @scala.inline
  def isNullLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
  @scala.inline
  def isNullLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteral */ scala.Boolean]
  
  @scala.inline
  def isNullLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullLiteralTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isNullableTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullableTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullableTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullableTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNullableTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNullableTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NullableTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isNumberLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumberLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumberLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumberLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumberLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  
  @scala.inline
  def isNumberLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberLiteralTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isNumberTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isNumberTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumberTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumberTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isNumericLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumericLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumericLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumericLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  @scala.inline
  def isNumericLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isNumericLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.NumericLiteral */ scala.Boolean]
  
  @scala.inline
  def isObjectExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
  @scala.inline
  def isObjectExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
  @scala.inline
  def isObjectExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
  @scala.inline
  def isObjectExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
  @scala.inline
  def isObjectExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectExpression */ scala.Boolean]
  
  @scala.inline
  def isObjectMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
  @scala.inline
  def isObjectMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
  @scala.inline
  def isObjectMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
  @scala.inline
  def isObjectMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
  @scala.inline
  def isObjectMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMember */ scala.Boolean]
  
  @scala.inline
  def isObjectMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
  @scala.inline
  def isObjectMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
  @scala.inline
  def isObjectMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
  @scala.inline
  def isObjectMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
  @scala.inline
  def isObjectMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectMethod */ scala.Boolean]
  
  @scala.inline
  def isObjectPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
  @scala.inline
  def isObjectPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
  @scala.inline
  def isObjectPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
  @scala.inline
  def isObjectPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
  @scala.inline
  def isObjectPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectPattern */ scala.Boolean]
  
  @scala.inline
  def isObjectProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
  @scala.inline
  def isObjectProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
  @scala.inline
  def isObjectProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
  @scala.inline
  def isObjectProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
  @scala.inline
  def isObjectProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectProperty */ scala.Boolean]
  
  @scala.inline
  def isObjectTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isObjectTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isObjectTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isObjectTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isObjectTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isObjectTypeCallProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeCallProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeCallProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeCallProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeCallProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeCallProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeCallProperty */ scala.Boolean]
  
  @scala.inline
  def isObjectTypeIndexer(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
  @scala.inline
  def isObjectTypeIndexer(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
  @scala.inline
  def isObjectTypeIndexer(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
  @scala.inline
  def isObjectTypeIndexer(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
  @scala.inline
  def isObjectTypeIndexer(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeIndexer")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeIndexer */ scala.Boolean]
  
  @scala.inline
  def isObjectTypeInternalSlot(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
  @scala.inline
  def isObjectTypeInternalSlot(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
  @scala.inline
  def isObjectTypeInternalSlot(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
  @scala.inline
  def isObjectTypeInternalSlot(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
  @scala.inline
  def isObjectTypeInternalSlot(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeInternalSlot")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeInternalSlot */ scala.Boolean]
  
  @scala.inline
  def isObjectTypeProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeProperty */ scala.Boolean]
  
  @scala.inline
  def isObjectTypeSpreadProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeSpreadProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeSpreadProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeSpreadProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
  @scala.inline
  def isObjectTypeSpreadProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isObjectTypeSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ObjectTypeSpreadProperty */ scala.Boolean]
  
  @scala.inline
  def isOpaqueType(): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
  @scala.inline
  def isOpaqueType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
  @scala.inline
  def isOpaqueType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
  @scala.inline
  def isOpaqueType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
  @scala.inline
  def isOpaqueType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOpaqueType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OpaqueType */ scala.Boolean]
  
  @scala.inline
  def isOptionalCallExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
  @scala.inline
  def isOptionalCallExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
  @scala.inline
  def isOptionalCallExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
  @scala.inline
  def isOptionalCallExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
  @scala.inline
  def isOptionalCallExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalCallExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalCallExpression */ scala.Boolean]
  
  @scala.inline
  def isOptionalMemberExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
  @scala.inline
  def isOptionalMemberExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
  @scala.inline
  def isOptionalMemberExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
  @scala.inline
  def isOptionalMemberExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
  @scala.inline
  def isOptionalMemberExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isOptionalMemberExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.OptionalMemberExpression */ scala.Boolean]
  
  @scala.inline
  def isParenthesizedExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
  @scala.inline
  def isParenthesizedExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
  @scala.inline
  def isParenthesizedExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
  @scala.inline
  def isParenthesizedExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
  @scala.inline
  def isParenthesizedExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isParenthesizedExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ParenthesizedExpression */ scala.Boolean]
  
  @scala.inline
  def isPattern(): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
  @scala.inline
  def isPattern(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
  @scala.inline
  def isPattern(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
  @scala.inline
  def isPattern(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
  @scala.inline
  def isPattern(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPattern")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pattern */ scala.Boolean]
  
  @scala.inline
  def isPatternLike(): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
  @scala.inline
  def isPatternLike(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
  @scala.inline
  def isPatternLike(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
  @scala.inline
  def isPatternLike(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
  @scala.inline
  def isPatternLike(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPatternLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PatternLike */ scala.Boolean]
  
  @scala.inline
  def isPipelineBareFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
  @scala.inline
  def isPipelineBareFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
  @scala.inline
  def isPipelineBareFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
  @scala.inline
  def isPipelineBareFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
  @scala.inline
  def isPipelineBareFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineBareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineBareFunction */ scala.Boolean]
  
  @scala.inline
  def isPipelinePrimaryTopicReference(): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
  @scala.inline
  def isPipelinePrimaryTopicReference(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
  @scala.inline
  def isPipelinePrimaryTopicReference(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
  @scala.inline
  def isPipelinePrimaryTopicReference(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
  @scala.inline
  def isPipelinePrimaryTopicReference(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelinePrimaryTopicReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelinePrimaryTopicReference */ scala.Boolean]
  
  @scala.inline
  def isPipelineTopicExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
  @scala.inline
  def isPipelineTopicExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
  @scala.inline
  def isPipelineTopicExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
  @scala.inline
  def isPipelineTopicExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
  @scala.inline
  def isPipelineTopicExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPipelineTopicExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PipelineTopicExpression */ scala.Boolean]
  
  @scala.inline
  def isPlaceholder(): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
  @scala.inline
  def isPlaceholder(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
  @scala.inline
  def isPlaceholder(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
  @scala.inline
  def isPlaceholder(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
  @scala.inline
  def isPlaceholder(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholder")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Placeholder */ scala.Boolean]
  
  @scala.inline
  def isPlaceholderType(
    placeholderType: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any,
    targetType: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any
  ): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPlaceholderType")(placeholderType.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  
  @scala.inline
  def isPrivate(): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
  @scala.inline
  def isPrivate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
  @scala.inline
  def isPrivate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
  @scala.inline
  def isPrivate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
  @scala.inline
  def isPrivate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Private */ scala.Boolean]
  
  @scala.inline
  def isPrivateName(): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
  @scala.inline
  def isPrivateName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
  @scala.inline
  def isPrivateName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
  @scala.inline
  def isPrivateName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
  @scala.inline
  def isPrivateName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPrivateName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.PrivateName */ scala.Boolean]
  
  @scala.inline
  def isProgram(): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
  @scala.inline
  def isProgram(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
  @scala.inline
  def isProgram(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
  @scala.inline
  def isProgram(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
  @scala.inline
  def isProgram(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProgram")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Program */ scala.Boolean]
  
  @scala.inline
  def isProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
  @scala.inline
  def isProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
  @scala.inline
  def isProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
  @scala.inline
  def isProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
  @scala.inline
  def isProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Property */ scala.Boolean]
  
  @scala.inline
  def isPureish(): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
  @scala.inline
  def isPureish(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
  @scala.inline
  def isPureish(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
  @scala.inline
  def isPureish(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
  @scala.inline
  def isPureish(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isPureish")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Pureish */ scala.Boolean]
  
  @scala.inline
  def isQualifiedTypeIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
  @scala.inline
  def isQualifiedTypeIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
  @scala.inline
  def isQualifiedTypeIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
  @scala.inline
  def isQualifiedTypeIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
  @scala.inline
  def isQualifiedTypeIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isQualifiedTypeIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.QualifiedTypeIdentifier */ scala.Boolean]
  
  @scala.inline
  def isRecordExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
  @scala.inline
  def isRecordExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
  @scala.inline
  def isRecordExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
  @scala.inline
  def isRecordExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
  @scala.inline
  def isRecordExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRecordExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RecordExpression */ scala.Boolean]
  
  @scala.inline
  def isReferenced(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReferenced")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  @scala.inline
  def isReferenced(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node,
    grandparent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReferenced")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any], grandparent.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  
  @scala.inline
  def isRegExpLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegExpLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegExpLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegExpLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegExpLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegExpLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  
  @scala.inline
  def isRegexLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegexLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegexLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegexLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  @scala.inline
  def isRegexLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRegexLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RegExpLiteral */ scala.Boolean]
  
  @scala.inline
  def isRestElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  
  @scala.inline
  def isRestProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  @scala.inline
  def isRestProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isRestProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.RestElement */ scala.Boolean]
  
  @scala.inline
  def isReturnStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
  @scala.inline
  def isReturnStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
  @scala.inline
  def isReturnStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
  @scala.inline
  def isReturnStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
  @scala.inline
  def isReturnStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isReturnStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ReturnStatement */ scala.Boolean]
  
  @scala.inline
  def isScopable(): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
  @scala.inline
  def isScopable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
  @scala.inline
  def isScopable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
  @scala.inline
  def isScopable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
  @scala.inline
  def isScopable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScopable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
  
  @scala.inline
  def isScope(
    node: typingsSlinky.babelTypes.indexTs37Mod.Node,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): /* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isScope")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Scopable */ scala.Boolean]
  
  @scala.inline
  def isSequenceExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
  @scala.inline
  def isSequenceExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
  @scala.inline
  def isSequenceExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
  @scala.inline
  def isSequenceExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
  @scala.inline
  def isSequenceExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSequenceExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SequenceExpression */ scala.Boolean]
  
  @scala.inline
  def isSpecifierDefault(specifier: typingsSlinky.babelTypes.indexTs37Mod.ModuleSpecifier): scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpecifierDefault")(specifier.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]
  
  @scala.inline
  def isSpreadElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  
  @scala.inline
  def isSpreadProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  @scala.inline
  def isSpreadProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSpreadProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SpreadElement */ scala.Boolean]
  
  @scala.inline
  def isStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
  @scala.inline
  def isStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
  @scala.inline
  def isStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
  @scala.inline
  def isStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
  @scala.inline
  def isStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Statement */ scala.Boolean]
  
  @scala.inline
  def isStaticBlock(): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
  @scala.inline
  def isStaticBlock(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
  @scala.inline
  def isStaticBlock(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
  @scala.inline
  def isStaticBlock(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
  @scala.inline
  def isStaticBlock(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStaticBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StaticBlock */ scala.Boolean]
  
  @scala.inline
  def isStringLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
  @scala.inline
  def isStringLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
  @scala.inline
  def isStringLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
  @scala.inline
  def isStringLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
  @scala.inline
  def isStringLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteral */ scala.Boolean]
  
  @scala.inline
  def isStringLiteralTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringLiteralTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringLiteralTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringLiteralTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringLiteralTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringLiteralTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringLiteralTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isStringTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isStringTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isStringTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.StringTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isSuper(): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
  @scala.inline
  def isSuper(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
  @scala.inline
  def isSuper(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
  @scala.inline
  def isSuper(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
  @scala.inline
  def isSuper(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSuper")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Super */ scala.Boolean]
  
  @scala.inline
  def isSwitchCase(): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
  @scala.inline
  def isSwitchCase(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
  @scala.inline
  def isSwitchCase(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
  @scala.inline
  def isSwitchCase(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
  @scala.inline
  def isSwitchCase(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchCase")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchCase */ scala.Boolean]
  
  @scala.inline
  def isSwitchStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
  @scala.inline
  def isSwitchStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
  @scala.inline
  def isSwitchStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
  @scala.inline
  def isSwitchStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
  @scala.inline
  def isSwitchStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSwitchStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SwitchStatement */ scala.Boolean]
  
  @scala.inline
  def isSymbolTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isSymbolTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isSymbolTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isSymbolTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isSymbolTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isSymbolTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.SymbolTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isTSAnyKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
  @scala.inline
  def isTSAnyKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
  @scala.inline
  def isTSAnyKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
  @scala.inline
  def isTSAnyKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
  @scala.inline
  def isTSAnyKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAnyKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAnyKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSArrayType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
  @scala.inline
  def isTSArrayType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
  @scala.inline
  def isTSArrayType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
  @scala.inline
  def isTSArrayType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
  @scala.inline
  def isTSArrayType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSArrayType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSArrayType */ scala.Boolean]
  
  @scala.inline
  def isTSAsExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
  @scala.inline
  def isTSAsExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
  @scala.inline
  def isTSAsExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
  @scala.inline
  def isTSAsExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
  @scala.inline
  def isTSAsExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSAsExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSAsExpression */ scala.Boolean]
  
  @scala.inline
  def isTSBaseType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
  @scala.inline
  def isTSBaseType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
  @scala.inline
  def isTSBaseType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
  @scala.inline
  def isTSBaseType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
  @scala.inline
  def isTSBaseType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBaseType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBaseType */ scala.Boolean]
  
  @scala.inline
  def isTSBigIntKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
  @scala.inline
  def isTSBigIntKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
  @scala.inline
  def isTSBigIntKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
  @scala.inline
  def isTSBigIntKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
  @scala.inline
  def isTSBigIntKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBigIntKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBigIntKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSBooleanKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
  @scala.inline
  def isTSBooleanKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
  @scala.inline
  def isTSBooleanKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
  @scala.inline
  def isTSBooleanKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
  @scala.inline
  def isTSBooleanKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSBooleanKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSBooleanKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSCallSignatureDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSCallSignatureDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSCallSignatureDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSCallSignatureDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSCallSignatureDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSCallSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSCallSignatureDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSConditionalType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
  @scala.inline
  def isTSConditionalType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
  @scala.inline
  def isTSConditionalType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
  @scala.inline
  def isTSConditionalType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
  @scala.inline
  def isTSConditionalType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConditionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConditionalType */ scala.Boolean]
  
  @scala.inline
  def isTSConstructSignatureDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSConstructSignatureDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSConstructSignatureDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSConstructSignatureDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
  @scala.inline
  def isTSConstructSignatureDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructSignatureDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructSignatureDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSConstructorType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
  @scala.inline
  def isTSConstructorType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
  @scala.inline
  def isTSConstructorType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
  @scala.inline
  def isTSConstructorType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
  @scala.inline
  def isTSConstructorType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSConstructorType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSConstructorType */ scala.Boolean]
  
  @scala.inline
  def isTSDeclareFunction(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
  @scala.inline
  def isTSDeclareFunction(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
  @scala.inline
  def isTSDeclareFunction(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
  @scala.inline
  def isTSDeclareFunction(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
  @scala.inline
  def isTSDeclareFunction(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareFunction")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareFunction */ scala.Boolean]
  
  @scala.inline
  def isTSDeclareMethod(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
  @scala.inline
  def isTSDeclareMethod(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
  @scala.inline
  def isTSDeclareMethod(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
  @scala.inline
  def isTSDeclareMethod(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
  @scala.inline
  def isTSDeclareMethod(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSDeclareMethod")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSDeclareMethod */ scala.Boolean]
  
  @scala.inline
  def isTSEntityName(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
  @scala.inline
  def isTSEntityName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
  @scala.inline
  def isTSEntityName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
  @scala.inline
  def isTSEntityName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
  @scala.inline
  def isTSEntityName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEntityName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEntityName */ scala.Boolean]
  
  @scala.inline
  def isTSEnumDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
  @scala.inline
  def isTSEnumDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
  @scala.inline
  def isTSEnumDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
  @scala.inline
  def isTSEnumDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
  @scala.inline
  def isTSEnumDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSEnumMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
  @scala.inline
  def isTSEnumMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
  @scala.inline
  def isTSEnumMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
  @scala.inline
  def isTSEnumMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
  @scala.inline
  def isTSEnumMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSEnumMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSEnumMember */ scala.Boolean]
  
  @scala.inline
  def isTSExportAssignment(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
  @scala.inline
  def isTSExportAssignment(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
  @scala.inline
  def isTSExportAssignment(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
  @scala.inline
  def isTSExportAssignment(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
  @scala.inline
  def isTSExportAssignment(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExportAssignment")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExportAssignment */ scala.Boolean]
  
  @scala.inline
  def isTSExpressionWithTypeArguments(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
  @scala.inline
  def isTSExpressionWithTypeArguments(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
  @scala.inline
  def isTSExpressionWithTypeArguments(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
  @scala.inline
  def isTSExpressionWithTypeArguments(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
  @scala.inline
  def isTSExpressionWithTypeArguments(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExpressionWithTypeArguments")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExpressionWithTypeArguments */ scala.Boolean]
  
  @scala.inline
  def isTSExternalModuleReference(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
  @scala.inline
  def isTSExternalModuleReference(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
  @scala.inline
  def isTSExternalModuleReference(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
  @scala.inline
  def isTSExternalModuleReference(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
  @scala.inline
  def isTSExternalModuleReference(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSExternalModuleReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSExternalModuleReference */ scala.Boolean]
  
  @scala.inline
  def isTSFunctionType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
  @scala.inline
  def isTSFunctionType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
  @scala.inline
  def isTSFunctionType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
  @scala.inline
  def isTSFunctionType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
  @scala.inline
  def isTSFunctionType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSFunctionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSFunctionType */ scala.Boolean]
  
  @scala.inline
  def isTSImportEqualsDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
  @scala.inline
  def isTSImportEqualsDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
  @scala.inline
  def isTSImportEqualsDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
  @scala.inline
  def isTSImportEqualsDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
  @scala.inline
  def isTSImportEqualsDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportEqualsDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportEqualsDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSImportType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
  @scala.inline
  def isTSImportType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
  @scala.inline
  def isTSImportType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
  @scala.inline
  def isTSImportType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
  @scala.inline
  def isTSImportType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSImportType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSImportType */ scala.Boolean]
  
  @scala.inline
  def isTSIndexSignature(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
  @scala.inline
  def isTSIndexSignature(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
  @scala.inline
  def isTSIndexSignature(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
  @scala.inline
  def isTSIndexSignature(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
  @scala.inline
  def isTSIndexSignature(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexSignature */ scala.Boolean]
  
  @scala.inline
  def isTSIndexedAccessType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
  @scala.inline
  def isTSIndexedAccessType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
  @scala.inline
  def isTSIndexedAccessType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
  @scala.inline
  def isTSIndexedAccessType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
  @scala.inline
  def isTSIndexedAccessType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIndexedAccessType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIndexedAccessType */ scala.Boolean]
  
  @scala.inline
  def isTSInferType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
  @scala.inline
  def isTSInferType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
  @scala.inline
  def isTSInferType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
  @scala.inline
  def isTSInferType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
  @scala.inline
  def isTSInferType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInferType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInferType */ scala.Boolean]
  
  @scala.inline
  def isTSInterfaceBody(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
  @scala.inline
  def isTSInterfaceBody(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
  @scala.inline
  def isTSInterfaceBody(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
  @scala.inline
  def isTSInterfaceBody(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
  @scala.inline
  def isTSInterfaceBody(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceBody")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceBody */ scala.Boolean]
  
  @scala.inline
  def isTSInterfaceDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isTSInterfaceDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isTSInterfaceDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isTSInterfaceDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
  @scala.inline
  def isTSInterfaceDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSInterfaceDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSInterfaceDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSIntersectionType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
  @scala.inline
  def isTSIntersectionType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
  @scala.inline
  def isTSIntersectionType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
  @scala.inline
  def isTSIntersectionType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
  @scala.inline
  def isTSIntersectionType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntersectionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntersectionType */ scala.Boolean]
  
  @scala.inline
  def isTSIntrinsicKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
  @scala.inline
  def isTSIntrinsicKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
  @scala.inline
  def isTSIntrinsicKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
  @scala.inline
  def isTSIntrinsicKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
  @scala.inline
  def isTSIntrinsicKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSIntrinsicKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSIntrinsicKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSLiteralType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
  @scala.inline
  def isTSLiteralType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
  @scala.inline
  def isTSLiteralType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
  @scala.inline
  def isTSLiteralType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
  @scala.inline
  def isTSLiteralType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSLiteralType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSLiteralType */ scala.Boolean]
  
  @scala.inline
  def isTSMappedType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
  @scala.inline
  def isTSMappedType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
  @scala.inline
  def isTSMappedType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
  @scala.inline
  def isTSMappedType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
  @scala.inline
  def isTSMappedType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMappedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMappedType */ scala.Boolean]
  
  @scala.inline
  def isTSMethodSignature(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
  @scala.inline
  def isTSMethodSignature(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
  @scala.inline
  def isTSMethodSignature(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
  @scala.inline
  def isTSMethodSignature(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
  @scala.inline
  def isTSMethodSignature(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSMethodSignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSMethodSignature */ scala.Boolean]
  
  @scala.inline
  def isTSModuleBlock(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
  @scala.inline
  def isTSModuleBlock(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
  @scala.inline
  def isTSModuleBlock(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
  @scala.inline
  def isTSModuleBlock(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
  @scala.inline
  def isTSModuleBlock(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleBlock")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleBlock */ scala.Boolean]
  
  @scala.inline
  def isTSModuleDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isTSModuleDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isTSModuleDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isTSModuleDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
  @scala.inline
  def isTSModuleDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSModuleDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSModuleDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSNamedTupleMember(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
  @scala.inline
  def isTSNamedTupleMember(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
  @scala.inline
  def isTSNamedTupleMember(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
  @scala.inline
  def isTSNamedTupleMember(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
  @scala.inline
  def isTSNamedTupleMember(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamedTupleMember")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamedTupleMember */ scala.Boolean]
  
  @scala.inline
  def isTSNamespaceExportDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
  @scala.inline
  def isTSNamespaceExportDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
  @scala.inline
  def isTSNamespaceExportDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
  @scala.inline
  def isTSNamespaceExportDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
  @scala.inline
  def isTSNamespaceExportDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNamespaceExportDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNamespaceExportDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSNeverKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
  @scala.inline
  def isTSNeverKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
  @scala.inline
  def isTSNeverKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
  @scala.inline
  def isTSNeverKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
  @scala.inline
  def isTSNeverKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNeverKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNeverKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSNonNullExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
  @scala.inline
  def isTSNonNullExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
  @scala.inline
  def isTSNonNullExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
  @scala.inline
  def isTSNonNullExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
  @scala.inline
  def isTSNonNullExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNonNullExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNonNullExpression */ scala.Boolean]
  
  @scala.inline
  def isTSNullKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
  @scala.inline
  def isTSNullKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
  @scala.inline
  def isTSNullKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
  @scala.inline
  def isTSNullKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
  @scala.inline
  def isTSNullKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNullKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNullKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSNumberKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
  @scala.inline
  def isTSNumberKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
  @scala.inline
  def isTSNumberKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
  @scala.inline
  def isTSNumberKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
  @scala.inline
  def isTSNumberKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSNumberKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSNumberKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSObjectKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
  @scala.inline
  def isTSObjectKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
  @scala.inline
  def isTSObjectKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
  @scala.inline
  def isTSObjectKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
  @scala.inline
  def isTSObjectKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSObjectKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSObjectKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSOptionalType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
  @scala.inline
  def isTSOptionalType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
  @scala.inline
  def isTSOptionalType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
  @scala.inline
  def isTSOptionalType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
  @scala.inline
  def isTSOptionalType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSOptionalType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSOptionalType */ scala.Boolean]
  
  @scala.inline
  def isTSParameterProperty(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
  @scala.inline
  def isTSParameterProperty(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
  @scala.inline
  def isTSParameterProperty(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
  @scala.inline
  def isTSParameterProperty(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
  @scala.inline
  def isTSParameterProperty(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParameterProperty")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParameterProperty */ scala.Boolean]
  
  @scala.inline
  def isTSParenthesizedType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
  @scala.inline
  def isTSParenthesizedType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
  @scala.inline
  def isTSParenthesizedType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
  @scala.inline
  def isTSParenthesizedType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
  @scala.inline
  def isTSParenthesizedType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSParenthesizedType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSParenthesizedType */ scala.Boolean]
  
  @scala.inline
  def isTSPropertySignature(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
  @scala.inline
  def isTSPropertySignature(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
  @scala.inline
  def isTSPropertySignature(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
  @scala.inline
  def isTSPropertySignature(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
  @scala.inline
  def isTSPropertySignature(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSPropertySignature")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSPropertySignature */ scala.Boolean]
  
  @scala.inline
  def isTSQualifiedName(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
  @scala.inline
  def isTSQualifiedName(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
  @scala.inline
  def isTSQualifiedName(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
  @scala.inline
  def isTSQualifiedName(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
  @scala.inline
  def isTSQualifiedName(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSQualifiedName")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSQualifiedName */ scala.Boolean]
  
  @scala.inline
  def isTSRestType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
  @scala.inline
  def isTSRestType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
  @scala.inline
  def isTSRestType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
  @scala.inline
  def isTSRestType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
  @scala.inline
  def isTSRestType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSRestType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSRestType */ scala.Boolean]
  
  @scala.inline
  def isTSStringKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
  @scala.inline
  def isTSStringKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
  @scala.inline
  def isTSStringKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
  @scala.inline
  def isTSStringKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
  @scala.inline
  def isTSStringKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSStringKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSStringKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSSymbolKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
  @scala.inline
  def isTSSymbolKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
  @scala.inline
  def isTSSymbolKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
  @scala.inline
  def isTSSymbolKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
  @scala.inline
  def isTSSymbolKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSSymbolKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSSymbolKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSThisType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
  @scala.inline
  def isTSThisType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
  @scala.inline
  def isTSThisType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
  @scala.inline
  def isTSThisType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
  @scala.inline
  def isTSThisType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSThisType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSThisType */ scala.Boolean]
  
  @scala.inline
  def isTSTupleType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
  @scala.inline
  def isTSTupleType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
  @scala.inline
  def isTSTupleType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
  @scala.inline
  def isTSTupleType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
  @scala.inline
  def isTSTupleType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTupleType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTupleType */ scala.Boolean]
  
  @scala.inline
  def isTSType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
  @scala.inline
  def isTSType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
  @scala.inline
  def isTSType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
  @scala.inline
  def isTSType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
  @scala.inline
  def isTSType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSType */ scala.Boolean]
  
  @scala.inline
  def isTSTypeAliasDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeAliasDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeAliasDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeAliasDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeAliasDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAliasDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAliasDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTSTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTSTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTSTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTSTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isTSTypeAssertion(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
  @scala.inline
  def isTSTypeAssertion(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
  @scala.inline
  def isTSTypeAssertion(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
  @scala.inline
  def isTSTypeAssertion(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
  @scala.inline
  def isTSTypeAssertion(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeAssertion")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeAssertion */ scala.Boolean]
  
  @scala.inline
  def isTSTypeElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
  @scala.inline
  def isTSTypeElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
  @scala.inline
  def isTSTypeElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
  @scala.inline
  def isTSTypeElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
  @scala.inline
  def isTSTypeElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeElement */ scala.Boolean]
  
  @scala.inline
  def isTSTypeLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
  @scala.inline
  def isTSTypeLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
  @scala.inline
  def isTSTypeLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
  @scala.inline
  def isTSTypeLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
  @scala.inline
  def isTSTypeLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeLiteral */ scala.Boolean]
  
  @scala.inline
  def isTSTypeOperator(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
  @scala.inline
  def isTSTypeOperator(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
  @scala.inline
  def isTSTypeOperator(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
  @scala.inline
  def isTSTypeOperator(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
  @scala.inline
  def isTSTypeOperator(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeOperator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeOperator */ scala.Boolean]
  
  @scala.inline
  def isTSTypeParameter(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
  @scala.inline
  def isTSTypeParameter(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
  @scala.inline
  def isTSTypeParameter(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
  @scala.inline
  def isTSTypeParameter(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
  @scala.inline
  def isTSTypeParameter(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameter */ scala.Boolean]
  
  @scala.inline
  def isTSTypeParameterDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTSTypeParameterInstantiation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterInstantiation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterInstantiation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterInstantiation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTSTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeParameterInstantiation */ scala.Boolean]
  
  @scala.inline
  def isTSTypePredicate(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
  @scala.inline
  def isTSTypePredicate(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
  @scala.inline
  def isTSTypePredicate(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
  @scala.inline
  def isTSTypePredicate(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
  @scala.inline
  def isTSTypePredicate(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypePredicate")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypePredicate */ scala.Boolean]
  
  @scala.inline
  def isTSTypeQuery(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
  @scala.inline
  def isTSTypeQuery(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
  @scala.inline
  def isTSTypeQuery(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
  @scala.inline
  def isTSTypeQuery(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
  @scala.inline
  def isTSTypeQuery(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeQuery")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeQuery */ scala.Boolean]
  
  @scala.inline
  def isTSTypeReference(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
  @scala.inline
  def isTSTypeReference(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
  @scala.inline
  def isTSTypeReference(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
  @scala.inline
  def isTSTypeReference(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
  @scala.inline
  def isTSTypeReference(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSTypeReference")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSTypeReference */ scala.Boolean]
  
  @scala.inline
  def isTSUndefinedKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
  @scala.inline
  def isTSUndefinedKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
  @scala.inline
  def isTSUndefinedKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
  @scala.inline
  def isTSUndefinedKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
  @scala.inline
  def isTSUndefinedKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUndefinedKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUndefinedKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSUnionType(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
  @scala.inline
  def isTSUnionType(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
  @scala.inline
  def isTSUnionType(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
  @scala.inline
  def isTSUnionType(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
  @scala.inline
  def isTSUnionType(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnionType")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnionType */ scala.Boolean]
  
  @scala.inline
  def isTSUnknownKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
  @scala.inline
  def isTSUnknownKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
  @scala.inline
  def isTSUnknownKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
  @scala.inline
  def isTSUnknownKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
  @scala.inline
  def isTSUnknownKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSUnknownKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSUnknownKeyword */ scala.Boolean]
  
  @scala.inline
  def isTSVoidKeyword(): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
  @scala.inline
  def isTSVoidKeyword(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
  @scala.inline
  def isTSVoidKeyword(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
  @scala.inline
  def isTSVoidKeyword(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
  @scala.inline
  def isTSVoidKeyword(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTSVoidKeyword")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TSVoidKeyword */ scala.Boolean]
  
  @scala.inline
  def isTaggedTemplateExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
  @scala.inline
  def isTaggedTemplateExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
  @scala.inline
  def isTaggedTemplateExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
  @scala.inline
  def isTaggedTemplateExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
  @scala.inline
  def isTaggedTemplateExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTaggedTemplateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TaggedTemplateExpression */ scala.Boolean]
  
  @scala.inline
  def isTemplateElement(): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
  @scala.inline
  def isTemplateElement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
  @scala.inline
  def isTemplateElement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
  @scala.inline
  def isTemplateElement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
  @scala.inline
  def isTemplateElement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateElement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateElement */ scala.Boolean]
  
  @scala.inline
  def isTemplateLiteral(): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
  @scala.inline
  def isTemplateLiteral(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
  @scala.inline
  def isTemplateLiteral(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
  @scala.inline
  def isTemplateLiteral(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
  @scala.inline
  def isTemplateLiteral(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTemplateLiteral")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TemplateLiteral */ scala.Boolean]
  
  @scala.inline
  def isTerminatorless(): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
  @scala.inline
  def isTerminatorless(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
  @scala.inline
  def isTerminatorless(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
  @scala.inline
  def isTerminatorless(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
  @scala.inline
  def isTerminatorless(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTerminatorless")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Terminatorless */ scala.Boolean]
  
  @scala.inline
  def isThisExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
  @scala.inline
  def isThisExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
  @scala.inline
  def isThisExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
  @scala.inline
  def isThisExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
  @scala.inline
  def isThisExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisExpression */ scala.Boolean]
  
  @scala.inline
  def isThisTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isThisTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isThisTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isThisTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isThisTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThisTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThisTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isThrowStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
  @scala.inline
  def isThrowStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
  @scala.inline
  def isThrowStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
  @scala.inline
  def isThrowStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
  @scala.inline
  def isThrowStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isThrowStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.ThrowStatement */ scala.Boolean]
  
  @scala.inline
  def isTryStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
  @scala.inline
  def isTryStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
  @scala.inline
  def isTryStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
  @scala.inline
  def isTryStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
  @scala.inline
  def isTryStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTryStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TryStatement */ scala.Boolean]
  
  @scala.inline
  def isTupleExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
  @scala.inline
  def isTupleExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
  @scala.inline
  def isTupleExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
  @scala.inline
  def isTupleExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
  @scala.inline
  def isTupleExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleExpression */ scala.Boolean]
  
  @scala.inline
  def isTupleTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTupleTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTupleTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTupleTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTupleTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTupleTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TupleTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isType(nodetype: js.UndefOr[scala.Nothing], targetType: java.lang.String): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  @scala.inline
  def isType(nodetype: java.lang.String, targetType: java.lang.String): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  @scala.inline
  def isType(nodetype: scala.Null, targetType: java.lang.String): scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[scala.Boolean]
  @scala.inline
  def isType[T /* <: /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 242 */ js.Any */](nodetype: java.lang.String, targetType: T): /* is T */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isType")(nodetype.asInstanceOf[js.Any], targetType.asInstanceOf[js.Any])).asInstanceOf[/* is T */ scala.Boolean]
  
  @scala.inline
  def isTypeAlias(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
  @scala.inline
  def isTypeAlias(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
  @scala.inline
  def isTypeAlias(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
  @scala.inline
  def isTypeAlias(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
  @scala.inline
  def isTypeAlias(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAlias")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAlias */ scala.Boolean]
  
  @scala.inline
  def isTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isTypeCastExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
  @scala.inline
  def isTypeCastExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
  @scala.inline
  def isTypeCastExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
  @scala.inline
  def isTypeCastExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
  @scala.inline
  def isTypeCastExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeCastExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeCastExpression */ scala.Boolean]
  
  @scala.inline
  def isTypeParameter(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
  @scala.inline
  def isTypeParameter(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
  @scala.inline
  def isTypeParameter(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
  @scala.inline
  def isTypeParameter(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
  @scala.inline
  def isTypeParameter(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameter")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameter */ scala.Boolean]
  
  @scala.inline
  def isTypeParameterDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTypeParameterDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTypeParameterDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTypeParameterDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
  @scala.inline
  def isTypeParameterDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterDeclaration */ scala.Boolean]
  
  @scala.inline
  def isTypeParameterInstantiation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTypeParameterInstantiation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTypeParameterInstantiation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTypeParameterInstantiation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
  @scala.inline
  def isTypeParameterInstantiation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeParameterInstantiation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeParameterInstantiation */ scala.Boolean]
  
  @scala.inline
  def isTypeofTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeofTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeofTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeofTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isTypeofTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isTypeofTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.TypeofTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isUnaryExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
  @scala.inline
  def isUnaryExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
  @scala.inline
  def isUnaryExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
  @scala.inline
  def isUnaryExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
  @scala.inline
  def isUnaryExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryExpression */ scala.Boolean]
  
  @scala.inline
  def isUnaryLike(): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
  @scala.inline
  def isUnaryLike(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
  @scala.inline
  def isUnaryLike(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
  @scala.inline
  def isUnaryLike(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
  @scala.inline
  def isUnaryLike(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnaryLike")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnaryLike */ scala.Boolean]
  
  @scala.inline
  def isUnionTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isUnionTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isUnionTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isUnionTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isUnionTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUnionTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UnionTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isUpdateExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
  @scala.inline
  def isUpdateExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
  @scala.inline
  def isUpdateExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
  @scala.inline
  def isUpdateExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
  @scala.inline
  def isUpdateExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUpdateExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UpdateExpression */ scala.Boolean]
  
  @scala.inline
  def isUserWhitespacable(): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
  @scala.inline
  def isUserWhitespacable(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
  @scala.inline
  def isUserWhitespacable(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
  @scala.inline
  def isUserWhitespacable(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
  @scala.inline
  def isUserWhitespacable(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isUserWhitespacable")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.UserWhitespacable */ scala.Boolean]
  
  @scala.inline
  def isV8IntrinsicIdentifier(): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
  @scala.inline
  def isV8IntrinsicIdentifier(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
  @scala.inline
  def isV8IntrinsicIdentifier(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
  @scala.inline
  def isV8IntrinsicIdentifier(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
  @scala.inline
  def isV8IntrinsicIdentifier(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isV8IntrinsicIdentifier")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.V8IntrinsicIdentifier */ scala.Boolean]
  
  @scala.inline
  def isValidES3Identifier(name: java.lang.String): scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isValidES3Identifier")(name.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]
  
  @scala.inline
  def isValidIdentifier(name: java.lang.String): scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isValidIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[scala.Boolean]
  
  @scala.inline
  def isVar(node: typingsSlinky.babelTypes.indexTs37Mod.Node): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVar")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
  
  @scala.inline
  def isVariableDeclaration(): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
  @scala.inline
  def isVariableDeclaration(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
  @scala.inline
  def isVariableDeclaration(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
  @scala.inline
  def isVariableDeclaration(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
  @scala.inline
  def isVariableDeclaration(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclaration")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclaration */ scala.Boolean]
  
  @scala.inline
  def isVariableDeclarator(): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
  @scala.inline
  def isVariableDeclarator(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
  @scala.inline
  def isVariableDeclarator(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
  @scala.inline
  def isVariableDeclarator(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
  @scala.inline
  def isVariableDeclarator(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariableDeclarator")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VariableDeclarator */ scala.Boolean]
  
  @scala.inline
  def isVariance(): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
  @scala.inline
  def isVariance(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
  @scala.inline
  def isVariance(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
  @scala.inline
  def isVariance(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
  @scala.inline
  def isVariance(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVariance")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.Variance */ scala.Boolean]
  
  @scala.inline
  def isVoidTypeAnnotation(): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isVoidTypeAnnotation(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isVoidTypeAnnotation(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isVoidTypeAnnotation(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
  @scala.inline
  def isVoidTypeAnnotation(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isVoidTypeAnnotation")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.VoidTypeAnnotation */ scala.Boolean]
  
  @scala.inline
  def isWhile(): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
  @scala.inline
  def isWhile(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
  @scala.inline
  def isWhile(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
  @scala.inline
  def isWhile(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
  @scala.inline
  def isWhile(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhile")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.While */ scala.Boolean]
  
  @scala.inline
  def isWhileStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
  @scala.inline
  def isWhileStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
  @scala.inline
  def isWhileStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
  @scala.inline
  def isWhileStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
  @scala.inline
  def isWhileStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWhileStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WhileStatement */ scala.Boolean]
  
  @scala.inline
  def isWithStatement(): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
  @scala.inline
  def isWithStatement(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
  @scala.inline
  def isWithStatement(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
  @scala.inline
  def isWithStatement(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
  @scala.inline
  def isWithStatement(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isWithStatement")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.WithStatement */ scala.Boolean]
  
  @scala.inline
  def isYieldExpression(): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")().asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
  @scala.inline
  def isYieldExpression(node: js.UndefOr[scala.Nothing], opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
  @scala.inline
  def isYieldExpression(node: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any]).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
  @scala.inline
  def isYieldExpression(node: js.Object, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
  @scala.inline
  def isYieldExpression(node: scala.Null, opts: js.Object): /* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("isYieldExpression")(node.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.YieldExpression */ scala.Boolean]
  
  @scala.inline
  def is_P_Node[P /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](
    `type`: java.lang.String,
    n: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node],
    required: typingsSlinky.std.Partial[P]
  ): /* is P */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
  @scala.inline
  def is_P_Node[P /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](`type`: java.lang.String, n: scala.Null, required: typingsSlinky.std.Partial[P]): /* is P */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("is")(`type`.asInstanceOf[js.Any], n.asInstanceOf[js.Any], required.asInstanceOf[js.Any])).asInstanceOf[/* is P */ scala.Boolean]
  
  @scala.inline
  def jsxAttribute(name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.JSXElement_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_,
    value: typingsSlinky.babelTypes.indexTs37Mod.JSXElement_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_,
    value: typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_,
    value: typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  @scala.inline
  def jsxAttribute(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_,
    value: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxAttribute")(name.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_]
  
  @scala.inline
  def jsxClosingElement(name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_): typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingElement")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_]
  @scala.inline
  def jsxClosingElement(name: typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_): typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingElement")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_]
  @scala.inline
  def jsxClosingElement(name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_): typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingElement")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_]
  
  @scala.inline
  def jsxClosingFragment(): typingsSlinky.babelTypes.indexTs37Mod.JSXClosingFragment_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxClosingFragment")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXClosingFragment_]
  
  @scala.inline
  def jsxElement(
    openingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_,
    closingElement: js.UndefOr[scala.Nothing],
    children: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXText_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXElement_]
  @scala.inline
  def jsxElement(
    openingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_,
    closingElement: js.UndefOr[scala.Nothing],
    children: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXText_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
    ],
    selfClosing: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXElement_]
  @scala.inline
  def jsxElement(
    openingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_,
    closingElement: scala.Null,
    children: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXText_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXElement_]
  @scala.inline
  def jsxElement(
    openingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_,
    closingElement: scala.Null,
    children: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXText_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
    ],
    selfClosing: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXElement_]
  @scala.inline
  def jsxElement(
    openingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_,
    closingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_,
    children: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXText_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXElement_]
  @scala.inline
  def jsxElement(
    openingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_,
    closingElement: typingsSlinky.babelTypes.indexTs37Mod.JSXClosingElement_,
    children: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXText_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
    ],
    selfClosing: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxElement")(openingElement.asInstanceOf[js.Any], closingElement.asInstanceOf[js.Any], children.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXElement_]
  
  @scala.inline
  def jsxEmptyExpression(): typingsSlinky.babelTypes.indexTs37Mod.JSXEmptyExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxEmptyExpression")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXEmptyExpression_]
  
  @scala.inline
  def jsxExpressionContainer(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxExpressionContainer")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_]
  @scala.inline
  def jsxExpressionContainer(expression: typingsSlinky.babelTypes.indexTs37Mod.JSXEmptyExpression_): typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxExpressionContainer")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_]
  
  @scala.inline
  def jsxFragment(
    openingFragment: typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningFragment_,
    closingFragment: typingsSlinky.babelTypes.indexTs37Mod.JSXClosingFragment_,
    children: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXText_ | typingsSlinky.babelTypes.indexTs37Mod.JSXExpressionContainer_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ | typingsSlinky.babelTypes.indexTs37Mod.JSXElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxFragment")(openingFragment.asInstanceOf[js.Any], closingFragment.asInstanceOf[js.Any], children.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXFragment_]
  
  @scala.inline
  def jsxIdentifier(name: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_]
  
  @scala.inline
  def jsxMemberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    property: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_]
  @scala.inline
  def jsxMemberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_,
    property: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_]
  
  @scala.inline
  def jsxNamespacedName(
    namespace: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxNamespacedName")(namespace.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_]
  
  @scala.inline
  def jsxOpeningElement(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    attributes: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_]
  @scala.inline
  def jsxOpeningElement(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXIdentifier_,
    attributes: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_
    ],
    selfClosing: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_]
  @scala.inline
  def jsxOpeningElement(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_,
    attributes: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_]
  @scala.inline
  def jsxOpeningElement(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXMemberExpression_,
    attributes: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_
    ],
    selfClosing: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_]
  @scala.inline
  def jsxOpeningElement(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_,
    attributes: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_]
  @scala.inline
  def jsxOpeningElement(
    name: typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_,
    attributes: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.JSXAttribute_ | typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_
    ],
    selfClosing: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningElement")(name.asInstanceOf[js.Any], attributes.asInstanceOf[js.Any], selfClosing.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningElement_]
  
  @scala.inline
  def jsxOpeningFragment(): typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningFragment_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxOpeningFragment")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXOpeningFragment_]
  
  @scala.inline
  def jsxSpreadAttribute(argument: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxSpreadAttribute")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadAttribute_]
  
  @scala.inline
  def jsxSpreadChild(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxSpreadChild")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXSpreadChild_]
  
  @scala.inline
  def jsxText(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.JSXText_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("jsxText")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.JSXText_]
  
  @scala.inline
  def labeledStatement(
    label: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.LabeledStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("labeledStatement")(label.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.LabeledStatement_]
  
  @scala.inline
  def logicalExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.AmpersandAmpersand,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.LogicalExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("logicalExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.LogicalExpression_]
  @scala.inline
  def logicalExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.QuestionmarkQuestionmark,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.LogicalExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("logicalExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.LogicalExpression_]
  @scala.inline
  def logicalExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.VerticallineVerticalline,
    left: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    right: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.LogicalExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("logicalExpression")(operator.asInstanceOf[js.Any], left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.LogicalExpression_]
  
  @scala.inline
  def matchesPattern(node: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node], `match`: java.lang.String): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def matchesPattern(
    node: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node],
    `match`: java.lang.String,
    allowPartial: scala.Boolean
  ): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def matchesPattern(node: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node], `match`: js.Array[java.lang.String]): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def matchesPattern(
    node: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node],
    `match`: js.Array[java.lang.String],
    allowPartial: scala.Boolean
  ): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def matchesPattern(node: scala.Null, `match`: java.lang.String): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def matchesPattern(node: scala.Null, `match`: java.lang.String, allowPartial: scala.Boolean): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def matchesPattern(node: scala.Null, `match`: js.Array[java.lang.String]): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  @scala.inline
  def matchesPattern(node: scala.Null, `match`: js.Array[java.lang.String], allowPartial: scala.Boolean): /* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("matchesPattern")(node.asInstanceOf[js.Any], `match`.asInstanceOf[js.Any], allowPartial.asInstanceOf[js.Any])).asInstanceOf[/* is @babel/types.@babel/types/lib/index-ts3.7.MemberExpression */ scala.Boolean]
  
  @scala.inline
  def memberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    computed: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    computed: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    computed: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  
  @scala.inline
  def memberExpression_false(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    computed: js.UndefOr[scala.Nothing],
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_false(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    computed: scala.Boolean,
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_false(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    computed: js.UndefOr[scala.Nothing],
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_false(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    computed: scala.Boolean,
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_false(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    computed: js.UndefOr[scala.Nothing],
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_false(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    computed: scala.Boolean,
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`false`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  
  @scala.inline
  def memberExpression_true(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    computed: js.UndefOr[scala.Nothing],
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_true(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    computed: scala.Boolean,
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_true(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    computed: js.UndefOr[scala.Nothing],
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_true(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    computed: scala.Boolean,
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_true(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    computed: js.UndefOr[scala.Nothing],
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  @scala.inline
  def memberExpression_true(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.PrivateName_,
    computed: scala.Boolean,
    optional: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("memberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MemberExpression_]
  
  @scala.inline
  def metaProperty(
    meta: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.MetaProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("metaProperty")(meta.asInstanceOf[js.Any], property.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MetaProperty_]
  
  @scala.inline
  def mixedTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.MixedTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("mixedTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.MixedTypeAnnotation_]
  
  @scala.inline
  def newExpression(
    callee: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    _arguments: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_ | typingsSlinky.babelTypes.indexTs37Mod.ArgumentPlaceholder_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.NewExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("newExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NewExpression_]
  @scala.inline
  def newExpression(
    callee: typingsSlinky.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_,
    _arguments: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_ | typingsSlinky.babelTypes.indexTs37Mod.ArgumentPlaceholder_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.NewExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("newExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NewExpression_]
  
  @scala.inline
  def noop(): typingsSlinky.babelTypes.indexTs37Mod.Noop_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("noop")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Noop_]
  
  @scala.inline
  def nullLiteral(): typingsSlinky.babelTypes.indexTs37Mod.NullLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("nullLiteral")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NullLiteral_]
  
  @scala.inline
  def nullLiteralTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.NullLiteralTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("nullLiteralTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NullLiteralTypeAnnotation_]
  
  @scala.inline
  def nullableTypeAnnotation(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.NullableTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("nullableTypeAnnotation")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NullableTypeAnnotation_]
  
  @scala.inline
  def numberLiteralTypeAnnotation(value: scala.Double): typingsSlinky.babelTypes.indexTs37Mod.NumberLiteralTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("numberLiteralTypeAnnotation")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NumberLiteralTypeAnnotation_]
  
  @scala.inline
  def numberTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("numberTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NumberTypeAnnotation_]
  
  @scala.inline
  def numericLiteral(value: scala.Double): typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("numericLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_]
  
  @scala.inline
  def objectExpression(
    properties: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ObjectMethod_ | typingsSlinky.babelTypes.indexTs37Mod.ObjectProperty_ | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectExpression")(properties.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectExpression_]
  
  @scala.inline
  def objectMethod(
    kind: js.UndefOr[
      typingsSlinky.babelTypes.babelTypesStrings.method | typingsSlinky.babelTypes.babelTypesStrings.get | typingsSlinky.babelTypes.babelTypesStrings.set
    ],
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    body: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    computed: js.UndefOr[scala.Boolean],
    generator: js.UndefOr[scala.Boolean],
    async: js.UndefOr[scala.Boolean]
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectMethod")(kind.asInstanceOf[js.Any], key.asInstanceOf[js.Any], params.asInstanceOf[js.Any], body.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], generator.asInstanceOf[js.Any], async.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectMethod_]
  
  @scala.inline
  def objectPattern(
    properties: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.ObjectProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectPattern_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectPattern")(properties.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectPattern_]
  
  @scala.inline
  def objectProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_,
    value: typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.PatternLike,
    computed: js.UndefOr[scala.Boolean],
    shorthand: js.UndefOr[scala.Boolean],
    decorators: js.UndefOr[js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_] | scala.Null]
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], shorthand.asInstanceOf[js.Any], decorators.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectProperty_]
  
  @scala.inline
  def objectTypeAnnotation(
    properties: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_ | typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_
    ],
    indexers: js.UndefOr[js.Array[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_] | scala.Null],
    callProperties: js.UndefOr[
      js.Array[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeCallProperty_] | scala.Null
    ],
    internalSlots: js.UndefOr[
      js.Array[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_] | scala.Null
    ],
    exact: js.UndefOr[scala.Boolean]
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeAnnotation")(properties.asInstanceOf[js.Any], indexers.asInstanceOf[js.Any], callProperties.asInstanceOf[js.Any], internalSlots.asInstanceOf[js.Any], exact.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeAnnotation_]
  
  @scala.inline
  def objectTypeCallProperty(value: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeCallProperty_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeCallProperty")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeCallProperty_]
  
  @scala.inline
  def objectTypeIndexer(
    id: js.UndefOr[scala.Nothing],
    key: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
  @scala.inline
  def objectTypeIndexer(
    id: js.UndefOr[scala.Nothing],
    key: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
  @scala.inline
  def objectTypeIndexer(
    id: scala.Null,
    key: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
  @scala.inline
  def objectTypeIndexer(
    id: scala.Null,
    key: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
  @scala.inline
  def objectTypeIndexer(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    key: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
  @scala.inline
  def objectTypeIndexer(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    key: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeIndexer")(id.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeIndexer_]
  
  @scala.inline
  def objectTypeInternalSlot(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    optional: scala.Boolean,
    _static: scala.Boolean,
    method: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeInternalSlot")(id.asInstanceOf[js.Any], value.asInstanceOf[js.Any], optional.asInstanceOf[js.Any], _static.asInstanceOf[js.Any], method.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeInternalSlot_]
  
  @scala.inline
  def objectTypeProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_]
  @scala.inline
  def objectTypeProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_]
  @scala.inline
  def objectTypeProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_]
  @scala.inline
  def objectTypeProperty(
    key: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    value: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeProperty")(key.asInstanceOf[js.Any], value.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeProperty_]
  
  @scala.inline
  def objectTypeSpreadProperty(argument: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("objectTypeSpreadProperty")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectTypeSpreadProperty_]
  
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    supertype: js.UndefOr[scala.Nothing],
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    supertype: scala.Null,
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    supertype: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    supertype: js.UndefOr[scala.Nothing],
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    supertype: scala.Null,
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    supertype: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    supertype: js.UndefOr[scala.Nothing],
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    supertype: scala.Null,
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  @scala.inline
  def opaqueType(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    supertype: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    impltype: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("opaqueType")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], supertype.asInstanceOf[js.Any], impltype.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OpaqueType_]
  
  @scala.inline
  def optionalCallExpression(
    callee: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    _arguments: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_ | typingsSlinky.babelTypes.indexTs37Mod.JSXNamespacedName_
    ],
    optional: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.OptionalCallExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalCallExpression")(callee.asInstanceOf[js.Any], _arguments.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OptionalCallExpression_]
  
  @scala.inline
  def optionalMemberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    computed: js.UndefOr[scala.Nothing],
    optional: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_]
  @scala.inline
  def optionalMemberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    computed: scala.Boolean,
    optional: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_]
  @scala.inline
  def optionalMemberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    computed: js.UndefOr[scala.Nothing],
    optional: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_]
  @scala.inline
  def optionalMemberExpression(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    property: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    computed: scala.Boolean,
    optional: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("optionalMemberExpression")(`object`.asInstanceOf[js.Any], property.asInstanceOf[js.Any], computed.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.OptionalMemberExpression_]
  
  @scala.inline
  def parenthesizedExpression(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.ParenthesizedExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("parenthesizedExpression")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ParenthesizedExpression_]
  
  @scala.inline
  def pipelineBareFunction(callee: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.PipelineBareFunction_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("pipelineBareFunction")(callee.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.PipelineBareFunction_]
  
  @scala.inline
  def pipelinePrimaryTopicReference(): typingsSlinky.babelTypes.indexTs37Mod.PipelinePrimaryTopicReference_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("pipelinePrimaryTopicReference")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.PipelinePrimaryTopicReference_]
  
  @scala.inline
  def pipelineTopicExpression(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.PipelineTopicExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("pipelineTopicExpression")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.PipelineTopicExpression_]
  
  @scala.inline
  def placeholder_BlockStatement(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.BlockStatement,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def placeholder_ClassBody(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.ClassBody,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def placeholder_Declaration(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.Declaration,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def placeholder_Expression(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.Expression,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def placeholder_Identifier(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.Identifier,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def placeholder_Pattern(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.Pattern,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def placeholder_Statement(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.Statement,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def placeholder_StringLiteral(
    expectedNode: typingsSlinky.babelTypes.babelTypesStrings.StringLiteral,
    name: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.Placeholder_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("placeholder")(expectedNode.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Placeholder_]
  
  @scala.inline
  def prependToMemberExpression[T /* <: typingsSlinky.babelTypes.anon.PickMemberExpressionobjec */](member: T, prepend: typingsSlinky.babelTypes.indexTs37Mod.Expression): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("prependToMemberExpression")(member.asInstanceOf[js.Any], prepend.asInstanceOf[js.Any])).asInstanceOf[T]
  
  @scala.inline
  def privateName(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.PrivateName_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("privateName")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.PrivateName_]
  
  @scala.inline
  def program(body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement]): typingsSlinky.babelTypes.indexTs37Mod.Program_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.UndefOr[scala.Nothing],
    sourceType: js.UndefOr[scala.Nothing],
    interpreter: typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Directive_]
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Directive_],
    sourceType: js.UndefOr[scala.Nothing],
    interpreter: typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  
  @scala.inline
  def program_module(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.UndefOr[scala.Nothing],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.module
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program_module(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.UndefOr[scala.Nothing],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.module,
    interpreter: typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program_module(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Directive_],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.module
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program_module(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Directive_],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.module,
    interpreter: typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  
  @scala.inline
  def program_script(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.UndefOr[scala.Nothing],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.script
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program_script(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.UndefOr[scala.Nothing],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.script,
    interpreter: typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program_script(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Directive_],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.script
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  @scala.inline
  def program_script(
    body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement],
    directives: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Directive_],
    sourceType: typingsSlinky.babelTypes.babelTypesStrings.script,
    interpreter: typingsSlinky.babelTypes.indexTs37Mod.InterpreterDirective_
  ): typingsSlinky.babelTypes.indexTs37Mod.Program_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("program")(body.asInstanceOf[js.Any], directives.asInstanceOf[js.Any], sourceType.asInstanceOf[js.Any], interpreter.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Program_]
  
  @scala.inline
  def qualifiedTypeIdentifier(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    qualification: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("qualifiedTypeIdentifier")(id.asInstanceOf[js.Any], qualification.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_]
  @scala.inline
  def qualifiedTypeIdentifier(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    qualification: typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("qualifiedTypeIdentifier")(id.asInstanceOf[js.Any], qualification.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.QualifiedTypeIdentifier_]
  
  @scala.inline
  def recordExpression(
    properties: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.ObjectProperty_ | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.RecordExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("recordExpression")(properties.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.RecordExpression_]
  
  @scala.inline
  def regExpLiteral(pattern: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("regExpLiteral")(pattern.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_]
  @scala.inline
  def regExpLiteral(pattern: java.lang.String, flags: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("regExpLiteral")(pattern.asInstanceOf[js.Any], flags.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_]
  
  @scala.inline
  def removeComments[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](node: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeComments")(node.asInstanceOf[js.Any]).asInstanceOf[T]
  
  @scala.inline
  def removeProperties(n: typingsSlinky.babelTypes.indexTs37Mod.Node): scala.Unit = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeProperties")(n.asInstanceOf[js.Any]).asInstanceOf[scala.Unit]
  @scala.inline
  def removeProperties(
    n: typingsSlinky.babelTypes.indexTs37Mod.Node,
    opts: typingsSlinky.babelTypes.anon.PreserveComments
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeProperties")(n.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  
  @scala.inline
  def removePropertiesDeep[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T): T = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removePropertiesDeep")(n.asInstanceOf[js.Any]).asInstanceOf[T]
  @scala.inline
  def removePropertiesDeep[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */](n: T, opts: typingsSlinky.babelTypes.anon.PreserveComments): T = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removePropertiesDeep")(n.asInstanceOf[js.Any], opts.asInstanceOf[js.Any])).asInstanceOf[T]
  
  @scala.inline
  def removeTypeDuplicates_false(
    types: js.Array[
      js.UndefOr[
        typingsSlinky.babelTypes.indexTs37Mod.FlowType | typingsSlinky.babelTypes.babelTypesBooleans.`false` | scala.Null
      ]
    ]
  ): js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType] = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("removeTypeDuplicates")(types.asInstanceOf[js.Any]).asInstanceOf[js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType]]
  
  @scala.inline
  def restElement(argument: typingsSlinky.babelTypes.indexTs37Mod.LVal): typingsSlinky.babelTypes.indexTs37Mod.RestElement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("restElement")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.RestElement_]
  
  @scala.inline
  def returnStatement(): typingsSlinky.babelTypes.indexTs37Mod.ReturnStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("returnStatement")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ReturnStatement_]
  @scala.inline
  def returnStatement(argument: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.ReturnStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("returnStatement")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ReturnStatement_]
  
  @scala.inline
  def sequenceExpression(expressions: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Expression]): typingsSlinky.babelTypes.indexTs37Mod.SequenceExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("sequenceExpression")(expressions.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.SequenceExpression_]
  
  @scala.inline
  def shallowEqual[T /* <: js.Object */](actual: js.Object, expected: T): /* is T */ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("shallowEqual")(actual.asInstanceOf[js.Any], expected.asInstanceOf[js.Any])).asInstanceOf[/* is T */ scala.Boolean]
  
  @scala.inline
  def spreadElement(argument: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("spreadElement")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_]
  
  @scala.inline
  def staticBlock(body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement]): typingsSlinky.babelTypes.indexTs37Mod.StaticBlock_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("staticBlock")(body.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StaticBlock_]
  
  @scala.inline
  def stringLiteral(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("stringLiteral")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_]
  
  @scala.inline
  def stringLiteralTypeAnnotation(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.StringLiteralTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("stringLiteralTypeAnnotation")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringLiteralTypeAnnotation_]
  
  @scala.inline
  def stringTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("stringTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringTypeAnnotation_]
  
  @scala.inline
  def `super`(): typingsSlinky.babelTypes.indexTs37Mod.Super_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("super")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Super_]
  
  @scala.inline
  def switchCase(
    test: js.UndefOr[scala.Nothing],
    consequent: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  ): typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchCase")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_]
  @scala.inline
  def switchCase(test: scala.Null, consequent: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement]): typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchCase")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_]
  @scala.inline
  def switchCase(
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    consequent: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  ): typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchCase")(test.asInstanceOf[js.Any], consequent.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_]
  
  @scala.inline
  def switchStatement(
    discriminant: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    cases: js.Array[typingsSlinky.babelTypes.indexTs37Mod.SwitchCase_]
  ): typingsSlinky.babelTypes.indexTs37Mod.SwitchStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("switchStatement")(discriminant.asInstanceOf[js.Any], cases.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.SwitchStatement_]
  
  @scala.inline
  def symbolTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.SymbolTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("symbolTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.SymbolTypeAnnotation_]
  
  @scala.inline
  def taggedTemplateExpression(
    tag: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    quasi: typingsSlinky.babelTypes.indexTs37Mod.TemplateLiteral_
  ): typingsSlinky.babelTypes.indexTs37Mod.TaggedTemplateExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("taggedTemplateExpression")(tag.asInstanceOf[js.Any], quasi.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TaggedTemplateExpression_]
  
  @scala.inline
  def templateElement(value: typingsSlinky.babelTypes.anon.Cooked): typingsSlinky.babelTypes.indexTs37Mod.TemplateElement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("templateElement")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TemplateElement_]
  @scala.inline
  def templateElement(value: typingsSlinky.babelTypes.anon.Cooked, tail: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.TemplateElement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("templateElement")(value.asInstanceOf[js.Any], tail.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TemplateElement_]
  
  @scala.inline
  def templateLiteral(
    quasis: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TemplateElement_],
    expressions: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.TSType
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TemplateLiteral_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("templateLiteral")(quasis.asInstanceOf[js.Any], expressions.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TemplateLiteral_]
  
  @scala.inline
  def thisExpression(): typingsSlinky.babelTypes.indexTs37Mod.ThisExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("thisExpression")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ThisExpression_]
  
  @scala.inline
  def thisTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.ThisTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("thisTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ThisTypeAnnotation_]
  
  @scala.inline
  def throwStatement(argument: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.ThrowStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("throwStatement")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ThrowStatement_]
  
  @scala.inline
  def toBindingIdentifierName(): java.lang.String = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBindingIdentifierName")().asInstanceOf[java.lang.String]
  @scala.inline
  def toBindingIdentifierName(name: typingsSlinky.babelTypes.anon.ToString): java.lang.String = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBindingIdentifierName")(name.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]
  
  @scala.inline
  def toBlock(node: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  @scala.inline
  def toBlock(
    node: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Function
  ): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  @scala.inline
  def toBlock(node: typingsSlinky.babelTypes.indexTs37Mod.Statement): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  @scala.inline
  def toBlock(
    node: typingsSlinky.babelTypes.indexTs37Mod.Statement,
    parent: typingsSlinky.babelTypes.indexTs37Mod.Function
  ): typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toBlock")(node.asInstanceOf[js.Any], parent.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_]
  
  @scala.inline
  def toComputedKey[T /* <: typingsSlinky.std.Extract[typingsSlinky.babelTypes.indexTs37Mod.Node, typingsSlinky.babelTypes.anon.Computed] */](node: T): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toComputedKey")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def toComputedKey[T /* <: typingsSlinky.std.Extract[typingsSlinky.babelTypes.indexTs37Mod.Node, typingsSlinky.babelTypes.anon.Computed] */](node: T, key: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.Expression = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toComputedKey")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def toComputedKey[T /* <: typingsSlinky.std.Extract[typingsSlinky.babelTypes.indexTs37Mod.Node, typingsSlinky.babelTypes.anon.Computed] */](node: T, key: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.Expression = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toComputedKey")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  
  @scala.inline
  def toExpression(node: typingsSlinky.babelTypes.indexTs37Mod.Class): typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassExpression_]
  @scala.inline
  def toExpression(node: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def toExpression(node: typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def toExpression(node: typingsSlinky.babelTypes.indexTs37Mod.Function): typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionExpression_]
  
  @scala.inline
  def toExpression_Expression(node: typingsSlinky.babelTypes.indexTs37Mod.Class): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def toExpression_Expression(node: typingsSlinky.babelTypes.indexTs37Mod.Function): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toExpression")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  
  @scala.inline
  def toIdentifier(): java.lang.String = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toIdentifier")().asInstanceOf[java.lang.String]
  @scala.inline
  def toIdentifier(name: typingsSlinky.babelTypes.anon.ToString): java.lang.String = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]
  
  @scala.inline
  def toKeyAlias(node: typingsSlinky.babelTypes.indexTs37Mod.Method): java.lang.String = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]
  @scala.inline
  def toKeyAlias(
    node: typingsSlinky.babelTypes.indexTs37Mod.Method,
    key: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): java.lang.String = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[java.lang.String]
  @scala.inline
  def toKeyAlias(node: typingsSlinky.babelTypes.indexTs37Mod.Property): java.lang.String = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any]).asInstanceOf[java.lang.String]
  @scala.inline
  def toKeyAlias(
    node: typingsSlinky.babelTypes.indexTs37Mod.Property,
    key: typingsSlinky.babelTypes.indexTs37Mod.Node
  ): java.lang.String = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toKeyAlias")(node.asInstanceOf[js.Any], key.asInstanceOf[js.Any])).asInstanceOf[java.lang.String]
  
  @scala.inline
  def toSequenceExpression(
    nodes: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Node],
    scope: typingsSlinky.babelTypes.anon.BuildUndefinedNode
  ): js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.SequenceExpression_] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toSequenceExpression")(nodes.asInstanceOf[js.Any], scope.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.SequenceExpression_]]
  
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_): typingsSlinky.babelTypes.indexTs37Mod.Statement = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_, ignore: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.Statement = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.Class): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.Class, ignore: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.Function): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.Function, ignore: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.Statement): typingsSlinky.babelTypes.indexTs37Mod.Statement = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  @scala.inline
  def toStatement(node: typingsSlinky.babelTypes.indexTs37Mod.Statement, ignore: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.Statement = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  
  @scala.inline
  def toStatement_ExpressionStatement_(node: typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_): typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_]
  @scala.inline
  def toStatement_ExpressionStatement_(node: typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_, ignore: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ExpressionStatement_]
  
  @scala.inline
  def toStatement_Statement(node: typingsSlinky.babelTypes.indexTs37Mod.Class): typingsSlinky.babelTypes.indexTs37Mod.Statement = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  @scala.inline
  def toStatement_Statement(node: typingsSlinky.babelTypes.indexTs37Mod.Class, ignore: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.Statement = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  @scala.inline
  def toStatement_Statement(node: typingsSlinky.babelTypes.indexTs37Mod.Function): typingsSlinky.babelTypes.indexTs37Mod.Statement = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  @scala.inline
  def toStatement_Statement(node: typingsSlinky.babelTypes.indexTs37Mod.Function, ignore: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.Statement = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Statement]
  
  @scala.inline
  def toStatement_true(
    node: typingsSlinky.babelTypes.indexTs37Mod.AssignmentExpression_,
    ignore: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Statement] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Statement]]
  @scala.inline
  def toStatement_true(
    node: typingsSlinky.babelTypes.indexTs37Mod.Class,
    ignore: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.ClassDeclaration_]]
  @scala.inline
  def toStatement_true(
    node: typingsSlinky.babelTypes.indexTs37Mod.Function,
    ignore: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.FunctionDeclaration_]]
  @scala.inline
  def toStatement_true(
    node: typingsSlinky.babelTypes.indexTs37Mod.Statement,
    ignore: typingsSlinky.babelTypes.babelTypesBooleans.`true`
  ): js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Statement] = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("toStatement")(node.asInstanceOf[js.Any], ignore.asInstanceOf[js.Any])).asInstanceOf[js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Statement]]
  
  @scala.inline
  def traverse[T](
    n: typingsSlinky.babelTypes.indexTs37Mod.Node,
    h: typingsSlinky.babelTypes.indexTs37Mod.TraversalHandler[T]
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  @scala.inline
  def traverse[T](
    n: typingsSlinky.babelTypes.indexTs37Mod.Node,
    h: typingsSlinky.babelTypes.indexTs37Mod.TraversalHandlers[T]
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  @scala.inline
  def traverse[T](
    n: typingsSlinky.babelTypes.indexTs37Mod.Node,
    h: typingsSlinky.babelTypes.indexTs37Mod.TraversalHandlers[T],
    state: T
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any], state.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  @scala.inline
  def traverse[T](
    n: typingsSlinky.babelTypes.indexTs37Mod.Node,
    h: typingsSlinky.babelTypes.indexTs37Mod.TraversalHandler[T],
    state: T
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverse")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any], state.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  
  @scala.inline
  def traverseFast[T](
    n: typingsSlinky.babelTypes.indexTs37Mod.Node,
    h: typingsSlinky.babelTypes.indexTs37Mod.TraversalHandler[T]
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverseFast")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  @scala.inline
  def traverseFast[T](
    n: typingsSlinky.babelTypes.indexTs37Mod.Node,
    h: typingsSlinky.babelTypes.indexTs37Mod.TraversalHandler[T],
    state: T
  ): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("traverseFast")(n.asInstanceOf[js.Any], h.asInstanceOf[js.Any], state.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  
  @scala.inline
  def tryStatement(block: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_): typingsSlinky.babelTypes.indexTs37Mod.TryStatement_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TryStatement_]
  @scala.inline
  def tryStatement(
    block: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    handler: js.UndefOr[scala.Nothing],
    finalizer: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.TryStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any], finalizer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TryStatement_]
  @scala.inline
  def tryStatement(
    block: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    handler: scala.Null,
    finalizer: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.TryStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any], finalizer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TryStatement_]
  @scala.inline
  def tryStatement(
    block: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    handler: typingsSlinky.babelTypes.indexTs37Mod.CatchClause_
  ): typingsSlinky.babelTypes.indexTs37Mod.TryStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TryStatement_]
  @scala.inline
  def tryStatement(
    block: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_,
    handler: typingsSlinky.babelTypes.indexTs37Mod.CatchClause_,
    finalizer: typingsSlinky.babelTypes.indexTs37Mod.BlockStatement_
  ): typingsSlinky.babelTypes.indexTs37Mod.TryStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tryStatement")(block.asInstanceOf[js.Any], handler.asInstanceOf[js.Any], finalizer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TryStatement_]
  
  @scala.inline
  def tsAnyKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSAnyKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsAnyKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSAnyKeyword_]
  
  @scala.inline
  def tsArrayType(elementType: typingsSlinky.babelTypes.indexTs37Mod.TSType): typingsSlinky.babelTypes.indexTs37Mod.TSArrayType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsArrayType")(elementType.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSArrayType_]
  
  @scala.inline
  def tsAsExpression(
    expression: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSAsExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsAsExpression")(expression.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSAsExpression_]
  
  @scala.inline
  def tsBigIntKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSBigIntKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsBigIntKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSBigIntKeyword_]
  
  @scala.inline
  def tsBooleanKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSBooleanKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsBooleanKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSBooleanKeyword_]
  
  @scala.inline
  def tsCallSignatureDeclaration(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
  @scala.inline
  def tsCallSignatureDeclaration(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
  @scala.inline
  def tsCallSignatureDeclaration(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
  @scala.inline
  def tsCallSignatureDeclaration(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
  @scala.inline
  def tsCallSignatureDeclaration(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
  @scala.inline
  def tsCallSignatureDeclaration(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsCallSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSCallSignatureDeclaration_]
  
  @scala.inline
  def tsConditionalType(
    checkType: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    extendsType: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    trueType: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    falseType: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConditionalType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConditionalType")(checkType.asInstanceOf[js.Any], extendsType.asInstanceOf[js.Any], trueType.asInstanceOf[js.Any], falseType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConditionalType_]
  
  @scala.inline
  def tsConstructSignatureDeclaration(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
  @scala.inline
  def tsConstructSignatureDeclaration(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
  @scala.inline
  def tsConstructSignatureDeclaration(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
  @scala.inline
  def tsConstructSignatureDeclaration(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
  @scala.inline
  def tsConstructSignatureDeclaration(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
  @scala.inline
  def tsConstructSignatureDeclaration(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructSignatureDeclaration")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructSignatureDeclaration_]
  
  @scala.inline
  def tsConstructorType(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_]
  @scala.inline
  def tsConstructorType(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_]
  @scala.inline
  def tsConstructorType(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_]
  @scala.inline
  def tsConstructorType(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_]
  @scala.inline
  def tsConstructorType(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_]
  @scala.inline
  def tsConstructorType(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsConstructorType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSConstructorType_]
  
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: js.UndefOr[scala.Nothing],
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: scala.Null,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.Noop_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.Noop_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  @scala.inline
  def tsDeclareFunction(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareFunction")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareFunction_]
  
  @scala.inline
  def tsDeclareMethod(
    decorators: js.UndefOr[js.Array[typingsSlinky.babelTypes.indexTs37Mod.Decorator_] | scala.Null],
    key: typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeParameters: js.UndefOr[
      typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_ | typingsSlinky.babelTypes.indexTs37Mod.Noop_ | scala.Null
    ],
    params: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.Pattern | typingsSlinky.babelTypes.indexTs37Mod.RestElement_ | typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_
    ],
    returnType: js.UndefOr[
      typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_ | typingsSlinky.babelTypes.indexTs37Mod.Noop_ | scala.Null
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSDeclareMethod_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsDeclareMethod")(decorators.asInstanceOf[js.Any], key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], params.asInstanceOf[js.Any], returnType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSDeclareMethod_]
  
  @scala.inline
  def tsEnumDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    members: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSEnumDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumDeclaration")(id.asInstanceOf[js.Any], members.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSEnumDeclaration_]
  
  @scala.inline
  def tsEnumMember(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_]
  @scala.inline
  def tsEnumMember(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    initializer: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_]
  @scala.inline
  def tsEnumMember(id: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_): typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_]
  @scala.inline
  def tsEnumMember(
    id: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    initializer: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsEnumMember")(id.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSEnumMember_]
  
  @scala.inline
  def tsExportAssignment(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.TSExportAssignment_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExportAssignment")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSExportAssignment_]
  
  @scala.inline
  def tsExpressionWithTypeArguments(expression: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName): typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExpressionWithTypeArguments")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_]
  @scala.inline
  def tsExpressionWithTypeArguments(
    expression: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExpressionWithTypeArguments")(expression.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_]
  
  @scala.inline
  def tsExternalModuleReference(expression: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_): typingsSlinky.babelTypes.indexTs37Mod.TSExternalModuleReference_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsExternalModuleReference")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSExternalModuleReference_]
  
  @scala.inline
  def tsFunctionType(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_]
  @scala.inline
  def tsFunctionType(
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_]
  @scala.inline
  def tsFunctionType(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_]
  @scala.inline
  def tsFunctionType(
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_]
  @scala.inline
  def tsFunctionType(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_]
  @scala.inline
  def tsFunctionType(
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsFunctionType")(typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSFunctionType_]
  
  @scala.inline
  def tsImportEqualsDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    moduleReference: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName
  ): typingsSlinky.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportEqualsDeclaration")(id.asInstanceOf[js.Any], moduleReference.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_]
  @scala.inline
  def tsImportEqualsDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    moduleReference: typingsSlinky.babelTypes.indexTs37Mod.TSExternalModuleReference_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportEqualsDeclaration")(id.asInstanceOf[js.Any], moduleReference.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSImportEqualsDeclaration_]
  
  @scala.inline
  def tsImportType(argument: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_): typingsSlinky.babelTypes.indexTs37Mod.TSImportType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSImportType_]
  @scala.inline
  def tsImportType(
    argument: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    qualifier: js.UndefOr[scala.Nothing],
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSImportType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSImportType_]
  @scala.inline
  def tsImportType(
    argument: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    qualifier: scala.Null,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSImportType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSImportType_]
  @scala.inline
  def tsImportType(
    argument: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    qualifier: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName
  ): typingsSlinky.babelTypes.indexTs37Mod.TSImportType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSImportType_]
  @scala.inline
  def tsImportType(
    argument: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    qualifier: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSImportType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsImportType")(argument.asInstanceOf[js.Any], qualifier.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSImportType_]
  
  @scala.inline
  def tsIndexSignature(parameters: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]): typingsSlinky.babelTypes.indexTs37Mod.TSIndexSignature_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIndexSignature")(parameters.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSIndexSignature_]
  @scala.inline
  def tsIndexSignature(
    parameters: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Identifier_],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSIndexSignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIndexSignature")(parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSIndexSignature_]
  
  @scala.inline
  def tsIndexedAccessType(
    objectType: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    indexType: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSIndexedAccessType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIndexedAccessType")(objectType.asInstanceOf[js.Any], indexType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSIndexedAccessType_]
  
  @scala.inline
  def tsInferType(typeParameter: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_): typingsSlinky.babelTypes.indexTs37Mod.TSInferType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInferType")(typeParameter.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInferType_]
  
  @scala.inline
  def tsInterfaceBody(body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSTypeElement]): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceBody")(body.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_]
  
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_],
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_],
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    _extends: js.UndefOr[scala.Nothing],
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    _extends: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSExpressionWithTypeArguments_],
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  @scala.inline
  def tsInterfaceDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    _extends: scala.Null,
    body: typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceBody_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsInterfaceDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], _extends.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSInterfaceDeclaration_]
  
  @scala.inline
  def tsIntersectionType(types: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSType]): typingsSlinky.babelTypes.indexTs37Mod.TSIntersectionType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIntersectionType")(types.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSIntersectionType_]
  
  @scala.inline
  def tsIntrinsicKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSIntrinsicKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsIntrinsicKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSIntrinsicKeyword_]
  
  @scala.inline
  def tsLiteralType(literal: typingsSlinky.babelTypes.indexTs37Mod.BigIntLiteral_): typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_]
  @scala.inline
  def tsLiteralType(literal: typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteral_): typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_]
  @scala.inline
  def tsLiteralType(literal: typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_): typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_]
  @scala.inline
  def tsLiteralType(literal: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_): typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsLiteralType")(literal.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSLiteralType_]
  
  @scala.inline
  def tsMappedType(typeParameter: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_): typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_]
  @scala.inline
  def tsMappedType(
    typeParameter: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_,
    typeAnnotation: js.UndefOr[scala.Nothing],
    nameType: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], nameType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_]
  @scala.inline
  def tsMappedType(
    typeParameter: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_,
    typeAnnotation: scala.Null,
    nameType: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], nameType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_]
  @scala.inline
  def tsMappedType(
    typeParameter: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_]
  @scala.inline
  def tsMappedType(
    typeParameter: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    nameType: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMappedType")(typeParameter.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], nameType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMappedType_]
  
  @scala.inline
  def tsMethodSignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_]
  @scala.inline
  def tsMethodSignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeParameters: js.UndefOr[scala.Nothing],
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_]
  @scala.inline
  def tsMethodSignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_]
  @scala.inline
  def tsMethodSignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeParameters: scala.Null,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_]
  @scala.inline
  def tsMethodSignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_]
  @scala.inline
  def tsMethodSignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    parameters: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Identifier_ | typingsSlinky.babelTypes.indexTs37Mod.RestElement_
    ],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsMethodSignature")(key.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], parameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSMethodSignature_]
  
  @scala.inline
  def tsModuleBlock(body: js.Array[typingsSlinky.babelTypes.indexTs37Mod.Statement]): typingsSlinky.babelTypes.indexTs37Mod.TSModuleBlock_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleBlock")(body.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSModuleBlock_]
  
  @scala.inline
  def tsModuleDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.TSModuleBlock_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_]
  @scala.inline
  def tsModuleDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    body: typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_]
  @scala.inline
  def tsModuleDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    body: typingsSlinky.babelTypes.indexTs37Mod.TSModuleBlock_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_]
  @scala.inline
  def tsModuleDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_,
    body: typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsModuleDeclaration")(id.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSModuleDeclaration_]
  
  @scala.inline
  def tsNamedTupleMember(
    label: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    elementType: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSNamedTupleMember_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNamedTupleMember")(label.asInstanceOf[js.Any], elementType.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSNamedTupleMember_]
  @scala.inline
  def tsNamedTupleMember(
    label: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    elementType: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    optional: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.TSNamedTupleMember_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNamedTupleMember")(label.asInstanceOf[js.Any], elementType.asInstanceOf[js.Any], optional.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSNamedTupleMember_]
  
  @scala.inline
  def tsNamespaceExportDeclaration(id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.TSNamespaceExportDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNamespaceExportDeclaration")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSNamespaceExportDeclaration_]
  
  @scala.inline
  def tsNeverKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSNeverKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNeverKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSNeverKeyword_]
  
  @scala.inline
  def tsNonNullExpression(expression: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.TSNonNullExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNonNullExpression")(expression.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSNonNullExpression_]
  
  @scala.inline
  def tsNullKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSNullKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNullKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSNullKeyword_]
  
  @scala.inline
  def tsNumberKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSNumberKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsNumberKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSNumberKeyword_]
  
  @scala.inline
  def tsObjectKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSObjectKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsObjectKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSObjectKeyword_]
  
  @scala.inline
  def tsOptionalType(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType): typingsSlinky.babelTypes.indexTs37Mod.TSOptionalType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsOptionalType")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSOptionalType_]
  
  @scala.inline
  def tsParameterProperty(parameter: typingsSlinky.babelTypes.indexTs37Mod.AssignmentPattern_): typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsParameterProperty")(parameter.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_]
  @scala.inline
  def tsParameterProperty(parameter: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsParameterProperty")(parameter.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSParameterProperty_]
  
  @scala.inline
  def tsParenthesizedType(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType): typingsSlinky.babelTypes.indexTs37Mod.TSParenthesizedType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsParenthesizedType")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSParenthesizedType_]
  
  @scala.inline
  def tsPropertySignature(key: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_]
  @scala.inline
  def tsPropertySignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeAnnotation: js.UndefOr[scala.Nothing],
    initializer: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_]
  @scala.inline
  def tsPropertySignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeAnnotation: scala.Null,
    initializer: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_]
  @scala.inline
  def tsPropertySignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_]
  @scala.inline
  def tsPropertySignature(
    key: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_,
    initializer: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsPropertySignature")(key.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], initializer.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSPropertySignature_]
  
  @scala.inline
  def tsQualifiedName(
    left: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName,
    right: typingsSlinky.babelTypes.indexTs37Mod.Identifier_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSQualifiedName_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsQualifiedName")(left.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSQualifiedName_]
  
  @scala.inline
  def tsRestType(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType): typingsSlinky.babelTypes.indexTs37Mod.TSRestType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsRestType")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSRestType_]
  
  @scala.inline
  def tsStringKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSStringKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsStringKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSStringKeyword_]
  
  @scala.inline
  def tsSymbolKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSSymbolKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsSymbolKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSSymbolKeyword_]
  
  @scala.inline
  def tsThisType(): typingsSlinky.babelTypes.indexTs37Mod.TSThisType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsThisType")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSThisType_]
  
  @scala.inline
  def tsTupleType(
    elementTypes: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.TSType | typingsSlinky.babelTypes.indexTs37Mod.TSNamedTupleMember_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTupleType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTupleType")(elementTypes.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTupleType_]
  
  @scala.inline
  def tsTypeAliasDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAliasDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_]
  @scala.inline
  def tsTypeAliasDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAliasDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_]
  @scala.inline
  def tsTypeAliasDeclaration(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAliasDeclaration")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeAliasDeclaration_]
  
  @scala.inline
  def tsTypeAnnotation(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType): typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAnnotation")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_]
  
  @scala.inline
  def tsTypeAssertion(
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    expression: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeAssertion_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeAssertion")(typeAnnotation.asInstanceOf[js.Any], expression.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeAssertion_]
  
  @scala.inline
  def tsTypeLiteral(members: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSTypeElement]): typingsSlinky.babelTypes.indexTs37Mod.TSTypeLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeLiteral")(members.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeLiteral_]
  
  @scala.inline
  def tsTypeOperator(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSType): typingsSlinky.babelTypes.indexTs37Mod.TSTypeOperator_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeOperator")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeOperator_]
  
  @scala.inline
  def tsTypeParameter(constraint: js.UndefOr[scala.Nothing], _default: js.UndefOr[scala.Nothing], name: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(constraint: js.UndefOr[scala.Nothing], _default: scala.Null, name: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(
    constraint: js.UndefOr[scala.Nothing],
    _default: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    name: java.lang.String
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(constraint: scala.Null, _default: js.UndefOr[scala.Nothing], name: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(constraint: scala.Null, _default: scala.Null, name: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(
    constraint: scala.Null,
    _default: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    name: java.lang.String
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(
    constraint: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    _default: js.UndefOr[scala.Nothing],
    name: java.lang.String
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(
    constraint: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    _default: scala.Null,
    name: java.lang.String
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  @scala.inline
  def tsTypeParameter(
    constraint: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    _default: typingsSlinky.babelTypes.indexTs37Mod.TSType,
    name: java.lang.String
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameter")(constraint.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], name.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]
  
  @scala.inline
  def tsTypeParameterDeclaration(params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameter_]): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameterDeclaration")(params.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterDeclaration_]
  
  @scala.inline
  def tsTypeParameterInstantiation(params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSType]): typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeParameterInstantiation")(params.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_]
  
  @scala.inline
  def tsTypePredicate(parameterName: typingsSlinky.babelTypes.indexTs37Mod.Identifier_): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeAnnotation: js.UndefOr[scala.Nothing],
    asserts: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeAnnotation: scala.Null,
    asserts: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_,
    asserts: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(parameterName: typingsSlinky.babelTypes.indexTs37Mod.TSThisType_): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.TSThisType_,
    typeAnnotation: js.UndefOr[scala.Nothing],
    asserts: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.TSThisType_,
    typeAnnotation: scala.Null,
    asserts: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.TSThisType_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  @scala.inline
  def tsTypePredicate(
    parameterName: typingsSlinky.babelTypes.indexTs37Mod.TSThisType_,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TSTypeAnnotation_,
    asserts: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypePredicate")(parameterName.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any], asserts.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypePredicate_]
  
  @scala.inline
  def tsTypeQuery(exprName: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName): typingsSlinky.babelTypes.indexTs37Mod.TSTypeQuery_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeQuery")(exprName.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeQuery_]
  @scala.inline
  def tsTypeQuery(exprName: typingsSlinky.babelTypes.indexTs37Mod.TSImportType_): typingsSlinky.babelTypes.indexTs37Mod.TSTypeQuery_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeQuery")(exprName.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeQuery_]
  
  @scala.inline
  def tsTypeReference(typeName: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName): typingsSlinky.babelTypes.indexTs37Mod.TSTypeReference_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeReference")(typeName.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeReference_]
  @scala.inline
  def tsTypeReference(
    typeName: typingsSlinky.babelTypes.indexTs37Mod.TSEntityName,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TSTypeParameterInstantiation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TSTypeReference_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsTypeReference")(typeName.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSTypeReference_]
  
  @scala.inline
  def tsUndefinedKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSUndefinedKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsUndefinedKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSUndefinedKeyword_]
  
  @scala.inline
  def tsUnionType(types: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TSType]): typingsSlinky.babelTypes.indexTs37Mod.TSUnionType_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsUnionType")(types.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSUnionType_]
  
  @scala.inline
  def tsUnknownKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSUnknownKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsUnknownKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSUnknownKeyword_]
  
  @scala.inline
  def tsVoidKeyword(): typingsSlinky.babelTypes.indexTs37Mod.TSVoidKeyword_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tsVoidKeyword")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TSVoidKeyword_]
  
  @scala.inline
  def tupleExpression(): typingsSlinky.babelTypes.indexTs37Mod.TupleExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tupleExpression")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TupleExpression_]
  @scala.inline
  def tupleExpression(
    elements: js.Array[
      typingsSlinky.babelTypes.indexTs37Mod.Expression | typingsSlinky.babelTypes.indexTs37Mod.SpreadElement_
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.TupleExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tupleExpression")(elements.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TupleExpression_]
  
  @scala.inline
  def tupleTypeAnnotation(types: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType]): typingsSlinky.babelTypes.indexTs37Mod.TupleTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("tupleTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TupleTypeAnnotation_]
  
  @scala.inline
  def typeAlias(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: js.UndefOr[scala.Nothing],
    right: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeAlias_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeAlias_]
  @scala.inline
  def typeAlias(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: scala.Null,
    right: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeAlias_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeAlias_]
  @scala.inline
  def typeAlias(
    id: typingsSlinky.babelTypes.indexTs37Mod.Identifier_,
    typeParameters: typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_,
    right: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeAlias_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAlias")(id.asInstanceOf[js.Any], typeParameters.asInstanceOf[js.Any], right.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeAlias_]
  
  @scala.inline
  def typeAnnotation(typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeAnnotation")(typeAnnotation.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_]
  
  @scala.inline
  def typeCastExpression(
    expression: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    typeAnnotation: typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeCastExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeCastExpression")(expression.asInstanceOf[js.Any], typeAnnotation.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeCastExpression_]
  
  @scala.inline
  def typeParameter(): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: js.UndefOr[scala.Nothing],
    _default: js.UndefOr[scala.Nothing],
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: js.UndefOr[scala.Nothing],
    _default: scala.Null,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(bound: js.UndefOr[scala.Nothing], _default: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: js.UndefOr[scala.Nothing],
    _default: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: scala.Null,
    _default: js.UndefOr[scala.Nothing],
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(bound: scala.Null, _default: scala.Null, variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(bound: scala.Null, _default: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: scala.Null,
    _default: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(bound: typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_,
    _default: js.UndefOr[scala.Nothing],
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_,
    _default: scala.Null,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_,
    _default: typingsSlinky.babelTypes.indexTs37Mod.FlowType
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  @scala.inline
  def typeParameter(
    bound: typingsSlinky.babelTypes.indexTs37Mod.TypeAnnotation_,
    _default: typingsSlinky.babelTypes.indexTs37Mod.FlowType,
    variance: typingsSlinky.babelTypes.indexTs37Mod.Variance_
  ): typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameter")(bound.asInstanceOf[js.Any], _default.asInstanceOf[js.Any], variance.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]
  
  @scala.inline
  def typeParameterDeclaration(params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.TypeParameter_]): typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameterDeclaration")(params.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameterDeclaration_]
  
  @scala.inline
  def typeParameterInstantiation(params: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType]): typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeParameterInstantiation")(params.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeParameterInstantiation_]
  
  @scala.inline
  def typeofTypeAnnotation(argument: typingsSlinky.babelTypes.indexTs37Mod.FlowType): typingsSlinky.babelTypes.indexTs37Mod.TypeofTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("typeofTypeAnnotation")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.TypeofTypeAnnotation_]
  
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Exclamationmark,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Exclamationmark,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Plussign,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Plussign,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Tilde,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.Tilde,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`-_`,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`-_`,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  
  @scala.inline
  def unaryExpression_delete(
    operator: typingsSlinky.babelTypes.babelTypesStrings.delete,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression_delete(
    operator: typingsSlinky.babelTypes.babelTypesStrings.delete,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  
  @scala.inline
  def unaryExpression_throw(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`throw`,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression_throw(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`throw`,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  
  @scala.inline
  def unaryExpression_typeof(
    operator: typingsSlinky.babelTypes.babelTypesStrings.typeof,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression_typeof(
    operator: typingsSlinky.babelTypes.babelTypesStrings.typeof,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  
  @scala.inline
  def unaryExpression_void(
    operator: typingsSlinky.babelTypes.babelTypesStrings.void,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def unaryExpression_void(
    operator: typingsSlinky.babelTypes.babelTypesStrings.void,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unaryExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  
  @scala.inline
  def unionTypeAnnotation(types: js.Array[typingsSlinky.babelTypes.indexTs37Mod.FlowType]): typingsSlinky.babelTypes.indexTs37Mod.UnionTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("unionTypeAnnotation")(types.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UnionTypeAnnotation_]
  
  @scala.inline
  def updateExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.PlussignPlussign,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_]
  @scala.inline
  def updateExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.PlussignPlussign,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_]
  @scala.inline
  def updateExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`--`,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_]
  @scala.inline
  def updateExpression(
    operator: typingsSlinky.babelTypes.babelTypesStrings.`--`,
    argument: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    prefix: scala.Boolean
  ): typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("updateExpression")(operator.asInstanceOf[js.Any], argument.asInstanceOf[js.Any], prefix.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.UpdateExpression_]
  
  @scala.inline
  def v8IntrinsicIdentifier(name: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("v8IntrinsicIdentifier")(name.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.V8IntrinsicIdentifier_]
  
  @scala.inline
  def validate(n: typingsSlinky.babelTypes.indexTs37Mod.Node, key: java.lang.String, value: js.Any): scala.Unit = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("validate")(n.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[scala.Unit]
  @scala.inline
  def validate[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */, K /* <: /* keyof T */ java.lang.String */](
    n: js.UndefOr[typingsSlinky.babelTypes.indexTs37Mod.Node],
    key: K,
    value: /* import warning: importer.ImportType#apply Failed type conversion: T[K] */ js.Any
  ): /* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("validate")(n.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[/* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean]
  @scala.inline
  def validate[T /* <: typingsSlinky.babelTypes.indexTs37Mod.Node */, K /* <: /* keyof T */ java.lang.String */](
    n: scala.Null,
    key: K,
    value: /* import warning: importer.ImportType#apply Failed type conversion: T[K] */ js.Any
  ): /* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("validate")(n.asInstanceOf[js.Any], key.asInstanceOf[js.Any], value.asInstanceOf[js.Any])).asInstanceOf[/* asserts n is TsTypeRef(NoComments,TsQIdent(IArray(TsIdentSimple(T))),IArray())*/ scala.Boolean]
  
  @scala.inline
  def valueToNode(): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def valueToNode(value: js.UndefOr[scala.Nothing]): typingsSlinky.babelTypes.indexTs37Mod.Identifier_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Identifier_]
  @scala.inline
  def valueToNode(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def valueToNode(
    value: js.Array[
      js.UndefOr[
        scala.Boolean | scala.Null | java.lang.String | scala.Double | js.RegExp | js.Object
      ]
    ]
  ): typingsSlinky.babelTypes.indexTs37Mod.ArrayExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ArrayExpression_]
  @scala.inline
  def valueToNode(value: js.Object): typingsSlinky.babelTypes.indexTs37Mod.ObjectExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.ObjectExpression_]
  @scala.inline
  def valueToNode(value: js.RegExp): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def valueToNode(value: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.BooleanLiteral_]
  @scala.inline
  def valueToNode(value: scala.Double): typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ | typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NumericLiteral_ | typingsSlinky.babelTypes.indexTs37Mod.BinaryExpression_ | typingsSlinky.babelTypes.indexTs37Mod.UnaryExpression_]
  @scala.inline
  def valueToNode(value: scala.Null): typingsSlinky.babelTypes.indexTs37Mod.NullLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.NullLiteral_]
  
  @scala.inline
  def valueToNode_Expression(value: js.Object): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def valueToNode_Expression(value: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  @scala.inline
  def valueToNode_Expression(value: scala.Double): typingsSlinky.babelTypes.indexTs37Mod.Expression = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Expression]
  
  @scala.inline
  def valueToNode_RegExpLiteral_(value: js.RegExp): typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.RegExpLiteral_]
  
  @scala.inline
  def valueToNode_StringLiteral_(value: java.lang.String): typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("valueToNode")(value.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.StringLiteral_]
  
  @scala.inline
  def variableDeclaration_const(
    kind: typingsSlinky.babelTypes.babelTypesStrings.const,
    declarations: js.Array[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclaration")(kind.asInstanceOf[js.Any], declarations.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_]
  
  @scala.inline
  def variableDeclaration_let(
    kind: typingsSlinky.babelTypes.babelTypesStrings.let,
    declarations: js.Array[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclaration")(kind.asInstanceOf[js.Any], declarations.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_]
  
  @scala.inline
  def variableDeclaration_var(
    kind: typingsSlinky.babelTypes.babelTypesStrings.`var`,
    declarations: js.Array[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_]
  ): typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclaration")(kind.asInstanceOf[js.Any], declarations.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclaration_]
  
  @scala.inline
  def variableDeclarator(id: typingsSlinky.babelTypes.indexTs37Mod.LVal): typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclarator")(id.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_]
  @scala.inline
  def variableDeclarator(
    id: typingsSlinky.babelTypes.indexTs37Mod.LVal,
    init: typingsSlinky.babelTypes.indexTs37Mod.Expression
  ): typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variableDeclarator")(id.asInstanceOf[js.Any], init.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.VariableDeclarator_]
  
  @scala.inline
  def variance_minus(kind: typingsSlinky.babelTypes.babelTypesStrings.minus): typingsSlinky.babelTypes.indexTs37Mod.Variance_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variance")(kind.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Variance_]
  
  @scala.inline
  def variance_plus(kind: typingsSlinky.babelTypes.babelTypesStrings.plus): typingsSlinky.babelTypes.indexTs37Mod.Variance_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("variance")(kind.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.Variance_]
  
  @scala.inline
  def voidTypeAnnotation(): typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("voidTypeAnnotation")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.VoidTypeAnnotation_]
  
  @scala.inline
  def whileStatement(
    test: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.WhileStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("whileStatement")(test.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.WhileStatement_]
  
  @scala.inline
  def withStatement(
    `object`: typingsSlinky.babelTypes.indexTs37Mod.Expression,
    body: typingsSlinky.babelTypes.indexTs37Mod.Statement
  ): typingsSlinky.babelTypes.indexTs37Mod.WithStatement_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("withStatement")(`object`.asInstanceOf[js.Any], body.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.WithStatement_]
  
  @scala.inline
  def yieldExpression(): typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")().asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_]
  @scala.inline
  def yieldExpression(argument: js.UndefOr[scala.Nothing], delegate: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any], delegate.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_]
  @scala.inline
  def yieldExpression(argument: scala.Null, delegate: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any], delegate.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_]
  @scala.inline
  def yieldExpression(argument: typingsSlinky.babelTypes.indexTs37Mod.Expression): typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_ = typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any]).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_]
  @scala.inline
  def yieldExpression(argument: typingsSlinky.babelTypes.indexTs37Mod.Expression, delegate: scala.Boolean): typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_ = (typingsSlinky.babelTypes.indexTs37Mod.^.asInstanceOf[js.Dynamic].applyDynamic("yieldExpression")(argument.asInstanceOf[js.Any], delegate.asInstanceOf[js.Any])).asInstanceOf[typingsSlinky.babelTypes.indexTs37Mod.YieldExpression_]
}
