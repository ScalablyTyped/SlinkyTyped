package typingsSlinky.breeze.breeze

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait EntityTypeProperties extends js.Object {
  
  var autoGeneratedKeyType: js.UndefOr[AutoGeneratedKeyType] = js.native
  
  var defaultResourceName: js.UndefOr[String] = js.native
  
  var serializerFn: js.UndefOr[js.Function2[/* dataProperty */ DataProperty, /* value */ js.Any, _]] = js.native
}
object EntityTypeProperties {
  
  @scala.inline
  def apply(): EntityTypeProperties = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[EntityTypeProperties]
  }
  
  @scala.inline
  implicit class EntityTypePropertiesOps[Self <: EntityTypeProperties] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAutoGeneratedKeyType(value: AutoGeneratedKeyType): Self = this.set("autoGeneratedKeyType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAutoGeneratedKeyType: Self = this.set("autoGeneratedKeyType", js.undefined)
    
    @scala.inline
    def setDefaultResourceName(value: String): Self = this.set("defaultResourceName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDefaultResourceName: Self = this.set("defaultResourceName", js.undefined)
    
    @scala.inline
    def setSerializerFn(value: (/* dataProperty */ DataProperty, /* value */ js.Any) => _): Self = this.set("serializerFn", js.Any.fromFunction2(value))
    
    @scala.inline
    def deleteSerializerFn: Self = this.set("serializerFn", js.undefined)
  }
}
