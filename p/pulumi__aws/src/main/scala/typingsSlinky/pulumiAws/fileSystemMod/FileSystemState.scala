package typingsSlinky.pulumiAws.fileSystemMod

import org.scalablytyped.runtime.StringDictionary
import typingsSlinky.pulumiAws.inputMod.efs.FileSystemLifecyclePolicy
import typingsSlinky.pulumiPulumi.outputMod.Input
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait FileSystemState extends js.Object {
  
  /**
    * Amazon Resource Name of the file system.
    */
  val arn: js.UndefOr[Input[String]] = js.native
  
  /**
    * A unique name (a maximum of 64 characters are allowed)
    * used as reference when creating the Elastic File System to ensure idempotent file
    * system creation. By default generated by this provider. See [Elastic File System]
    * (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
    */
  val creationToken: js.UndefOr[Input[String]] = js.native
  
  /**
    * The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
    */
  val dnsName: js.UndefOr[Input[String]] = js.native
  
  /**
    * If true, the disk will be encrypted.
    */
  val encrypted: js.UndefOr[Input[Boolean]] = js.native
  
  /**
    * The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
    */
  val kmsKeyId: js.UndefOr[Input[String]] = js.native
  
  /**
    * A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
    */
  val lifecyclePolicy: js.UndefOr[Input[FileSystemLifecyclePolicy]] = js.native
  
  /**
    * The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
    */
  val performanceMode: js.UndefOr[Input[String]] = js.native
  
  /**
    * The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
    */
  val provisionedThroughputInMibps: js.UndefOr[Input[Double]] = js.native
  
  /**
    * A map of tags to assign to the file system.
    */
  val tags: js.UndefOr[Input[StringDictionary[Input[String]]]] = js.native
  
  /**
    * Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`. When using `provisioned`, also set `provisionedThroughputInMibps`.
    */
  val throughputMode: js.UndefOr[Input[String]] = js.native
}
object FileSystemState {
  
  @scala.inline
  def apply(): FileSystemState = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[FileSystemState]
  }
  
  @scala.inline
  implicit class FileSystemStateOps[Self <: FileSystemState] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setArn(value: Input[String]): Self = this.set("arn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteArn: Self = this.set("arn", js.undefined)
    
    @scala.inline
    def setCreationToken(value: Input[String]): Self = this.set("creationToken", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreationToken: Self = this.set("creationToken", js.undefined)
    
    @scala.inline
    def setDnsName(value: Input[String]): Self = this.set("dnsName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDnsName: Self = this.set("dnsName", js.undefined)
    
    @scala.inline
    def setEncrypted(value: Input[Boolean]): Self = this.set("encrypted", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteEncrypted: Self = this.set("encrypted", js.undefined)
    
    @scala.inline
    def setKmsKeyId(value: Input[String]): Self = this.set("kmsKeyId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKmsKeyId: Self = this.set("kmsKeyId", js.undefined)
    
    @scala.inline
    def setLifecyclePolicy(value: Input[FileSystemLifecyclePolicy]): Self = this.set("lifecyclePolicy", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLifecyclePolicy: Self = this.set("lifecyclePolicy", js.undefined)
    
    @scala.inline
    def setPerformanceMode(value: Input[String]): Self = this.set("performanceMode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePerformanceMode: Self = this.set("performanceMode", js.undefined)
    
    @scala.inline
    def setProvisionedThroughputInMibps(value: Input[Double]): Self = this.set("provisionedThroughputInMibps", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteProvisionedThroughputInMibps: Self = this.set("provisionedThroughputInMibps", js.undefined)
    
    @scala.inline
    def setTags(value: Input[StringDictionary[Input[String]]]): Self = this.set("tags", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTags: Self = this.set("tags", js.undefined)
    
    @scala.inline
    def setThroughputMode(value: Input[String]): Self = this.set("throughputMode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteThroughputMode: Self = this.set("throughputMode", js.undefined)
  }
}
