package typingsSlinky.pulumiAws

import typingsSlinky.pulumiPulumi.mod.CustomResource
import typingsSlinky.pulumiPulumi.outputMod.Input
import typingsSlinky.pulumiPulumi.outputMod.Output_
import typingsSlinky.pulumiPulumi.resourceMod.CustomResourceOptions
import typingsSlinky.pulumiPulumi.resourceMod.ID
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object samlProviderMod {
  
  @JSImport("@pulumi/aws/iam/samlProvider", "SamlProvider")
  @js.native
  class SamlProvider protected () extends CustomResource {
    /**
      * Create a SamlProvider resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
    def this(name: String, args: SamlProviderArgs) = this()
    def this(name: String, args: SamlProviderArgs, opts: CustomResourceOptions) = this()
    
    /**
      * The ARN assigned by AWS for this provider.
      */
    val arn: Output_[String] = js.native
    
    /**
      * The name of the provider to create.
      */
    val name: Output_[String] = js.native
    
    /**
      * An XML document generated by an identity provider that supports SAML 2.0.
      */
    val samlMetadataDocument: Output_[String] = js.native
    
    /**
      * The expiration date and time for the SAML provider in RFC1123 format, e.g. `Mon, 02 Jan 2006 15:04:05 MST`.
      */
    val validUntil: Output_[String] = js.native
  }
  /* static members */
  object SamlProvider {
    
    /**
      * Get an existing SamlProvider resource's state with the given name, ID, and optional extra
      * properties used to qualify the lookup.
      *
      * @param name The _unique_ name of the resulting resource.
      * @param id The _unique_ provider ID of the resource to lookup.
      * @param state Any extra arguments used during the lookup.
      * @param opts Optional settings to control the behavior of the CustomResource.
      */
    @JSImport("@pulumi/aws/iam/samlProvider", "SamlProvider.get")
    @js.native
    def get(name: String, id: Input[ID]): SamlProvider = js.native
    @JSImport("@pulumi/aws/iam/samlProvider", "SamlProvider.get")
    @js.native
    def get(name: String, id: Input[ID], state: js.UndefOr[scala.Nothing], opts: CustomResourceOptions): SamlProvider = js.native
    @JSImport("@pulumi/aws/iam/samlProvider", "SamlProvider.get")
    @js.native
    def get(name: String, id: Input[ID], state: SamlProviderState): SamlProvider = js.native
    @JSImport("@pulumi/aws/iam/samlProvider", "SamlProvider.get")
    @js.native
    def get(name: String, id: Input[ID], state: SamlProviderState, opts: CustomResourceOptions): SamlProvider = js.native
    
    /**
      * Returns true if the given object is an instance of SamlProvider.  This is designed to work even
      * when multiple copies of the Pulumi SDK have been loaded into the same process.
      */
    @JSImport("@pulumi/aws/iam/samlProvider", "SamlProvider.isInstance")
    @js.native
    def isInstance(obj: js.Any): /* is @pulumi/aws.@pulumi/aws/iam/samlProvider.SamlProvider */ Boolean = js.native
  }
  
  @js.native
  trait SamlProviderArgs extends StObject {
    
    /**
      * The name of the provider to create.
      */
    val name: js.UndefOr[Input[String]] = js.native
    
    /**
      * An XML document generated by an identity provider that supports SAML 2.0.
      */
    val samlMetadataDocument: Input[String] = js.native
  }
  object SamlProviderArgs {
    
    @scala.inline
    def apply(samlMetadataDocument: Input[String]): SamlProviderArgs = {
      val __obj = js.Dynamic.literal(samlMetadataDocument = samlMetadataDocument.asInstanceOf[js.Any])
      __obj.asInstanceOf[SamlProviderArgs]
    }
    
    @scala.inline
    implicit class SamlProviderArgsMutableBuilder[Self <: SamlProviderArgs] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setName(value: Input[String]): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
      
      @scala.inline
      def setSamlMetadataDocument(value: Input[String]): Self = StObject.set(x, "samlMetadataDocument", value.asInstanceOf[js.Any])
    }
  }
  
  @js.native
  trait SamlProviderState extends StObject {
    
    /**
      * The ARN assigned by AWS for this provider.
      */
    val arn: js.UndefOr[Input[String]] = js.native
    
    /**
      * The name of the provider to create.
      */
    val name: js.UndefOr[Input[String]] = js.native
    
    /**
      * An XML document generated by an identity provider that supports SAML 2.0.
      */
    val samlMetadataDocument: js.UndefOr[Input[String]] = js.native
    
    /**
      * The expiration date and time for the SAML provider in RFC1123 format, e.g. `Mon, 02 Jan 2006 15:04:05 MST`.
      */
    val validUntil: js.UndefOr[Input[String]] = js.native
  }
  object SamlProviderState {
    
    @scala.inline
    def apply(): SamlProviderState = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[SamlProviderState]
    }
    
    @scala.inline
    implicit class SamlProviderStateMutableBuilder[Self <: SamlProviderState] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setArn(value: Input[String]): Self = StObject.set(x, "arn", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setArnUndefined: Self = StObject.set(x, "arn", js.undefined)
      
      @scala.inline
      def setName(value: Input[String]): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
      
      @scala.inline
      def setSamlMetadataDocument(value: Input[String]): Self = StObject.set(x, "samlMetadataDocument", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setSamlMetadataDocumentUndefined: Self = StObject.set(x, "samlMetadataDocument", js.undefined)
      
      @scala.inline
      def setValidUntil(value: Input[String]): Self = StObject.set(x, "validUntil", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setValidUntilUndefined: Self = StObject.set(x, "validUntil", js.undefined)
    }
  }
}
