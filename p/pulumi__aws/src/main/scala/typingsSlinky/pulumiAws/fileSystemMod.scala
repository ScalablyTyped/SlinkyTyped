package typingsSlinky.pulumiAws

import org.scalablytyped.runtime.StringDictionary
import typingsSlinky.pulumiAws.outputMod.efs.FileSystemLifecyclePolicy
import typingsSlinky.pulumiPulumi.mod.CustomResource
import typingsSlinky.pulumiPulumi.outputMod.Input
import typingsSlinky.pulumiPulumi.outputMod.Output_
import typingsSlinky.pulumiPulumi.resourceMod.CustomResourceOptions
import typingsSlinky.pulumiPulumi.resourceMod.ID
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object fileSystemMod {
  
  @JSImport("@pulumi/aws/efs/fileSystem", "FileSystem")
  @js.native
  class FileSystem protected () extends CustomResource {
    /**
      * Create a FileSystem resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
    def this(name: String) = this()
    def this(name: String, args: FileSystemArgs) = this()
    def this(name: String, args: js.UndefOr[scala.Nothing], opts: CustomResourceOptions) = this()
    def this(name: String, args: FileSystemArgs, opts: CustomResourceOptions) = this()
    
    /**
      * Amazon Resource Name of the file system.
      */
    val arn: Output_[String] = js.native
    
    /**
      * A unique name (a maximum of 64 characters are allowed)
      * used as reference when creating the Elastic File System to ensure idempotent file
      * system creation. By default generated by this provider. See [Elastic File System]
      * (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
      */
    val creationToken: Output_[String] = js.native
    
    /**
      * The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
      */
    val dnsName: Output_[String] = js.native
    
    /**
      * If true, the disk will be encrypted.
      */
    val encrypted: Output_[Boolean] = js.native
    
    /**
      * The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
      */
    val kmsKeyId: Output_[String] = js.native
    
    /**
      * A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
      */
    val lifecyclePolicy: Output_[js.UndefOr[FileSystemLifecyclePolicy]] = js.native
    
    /**
      * The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
      */
    val performanceMode: Output_[String] = js.native
    
    /**
      * The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
      */
    val provisionedThroughputInMibps: Output_[js.UndefOr[Double]] = js.native
    
    /**
      * A map of tags to assign to the file system.
      */
    val tags: Output_[js.UndefOr[StringDictionary[String]]] = js.native
    
    /**
      * Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`. When using `provisioned`, also set `provisionedThroughputInMibps`.
      */
    val throughputMode: Output_[js.UndefOr[String]] = js.native
  }
  /* static members */
  object FileSystem {
    
    /**
      * Get an existing FileSystem resource's state with the given name, ID, and optional extra
      * properties used to qualify the lookup.
      *
      * @param name The _unique_ name of the resulting resource.
      * @param id The _unique_ provider ID of the resource to lookup.
      * @param state Any extra arguments used during the lookup.
      * @param opts Optional settings to control the behavior of the CustomResource.
      */
    @JSImport("@pulumi/aws/efs/fileSystem", "FileSystem.get")
    @js.native
    def get(name: String, id: Input[ID]): FileSystem = js.native
    @JSImport("@pulumi/aws/efs/fileSystem", "FileSystem.get")
    @js.native
    def get(name: String, id: Input[ID], state: js.UndefOr[scala.Nothing], opts: CustomResourceOptions): FileSystem = js.native
    @JSImport("@pulumi/aws/efs/fileSystem", "FileSystem.get")
    @js.native
    def get(name: String, id: Input[ID], state: FileSystemState): FileSystem = js.native
    @JSImport("@pulumi/aws/efs/fileSystem", "FileSystem.get")
    @js.native
    def get(name: String, id: Input[ID], state: FileSystemState, opts: CustomResourceOptions): FileSystem = js.native
    
    /**
      * Returns true if the given object is an instance of FileSystem.  This is designed to work even
      * when multiple copies of the Pulumi SDK have been loaded into the same process.
      */
    @JSImport("@pulumi/aws/efs/fileSystem", "FileSystem.isInstance")
    @js.native
    def isInstance(obj: js.Any): /* is @pulumi/aws.@pulumi/aws/efs/fileSystem.FileSystem */ Boolean = js.native
  }
  
  @js.native
  trait FileSystemArgs extends StObject {
    
    /**
      * A unique name (a maximum of 64 characters are allowed)
      * used as reference when creating the Elastic File System to ensure idempotent file
      * system creation. By default generated by this provider. See [Elastic File System]
      * (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
      */
    val creationToken: js.UndefOr[Input[String]] = js.native
    
    /**
      * If true, the disk will be encrypted.
      */
    val encrypted: js.UndefOr[Input[Boolean]] = js.native
    
    /**
      * The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
      */
    val kmsKeyId: js.UndefOr[Input[String]] = js.native
    
    /**
      * A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
      */
    val lifecyclePolicy: js.UndefOr[Input[typingsSlinky.pulumiAws.inputMod.efs.FileSystemLifecyclePolicy]] = js.native
    
    /**
      * The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
      */
    val performanceMode: js.UndefOr[Input[String]] = js.native
    
    /**
      * The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
      */
    val provisionedThroughputInMibps: js.UndefOr[Input[Double]] = js.native
    
    /**
      * A map of tags to assign to the file system.
      */
    val tags: js.UndefOr[Input[StringDictionary[Input[String]]]] = js.native
    
    /**
      * Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`. When using `provisioned`, also set `provisionedThroughputInMibps`.
      */
    val throughputMode: js.UndefOr[Input[String]] = js.native
  }
  object FileSystemArgs {
    
    @scala.inline
    def apply(): FileSystemArgs = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[FileSystemArgs]
    }
    
    @scala.inline
    implicit class FileSystemArgsMutableBuilder[Self <: FileSystemArgs] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setCreationToken(value: Input[String]): Self = StObject.set(x, "creationToken", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setCreationTokenUndefined: Self = StObject.set(x, "creationToken", js.undefined)
      
      @scala.inline
      def setEncrypted(value: Input[Boolean]): Self = StObject.set(x, "encrypted", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEncryptedUndefined: Self = StObject.set(x, "encrypted", js.undefined)
      
      @scala.inline
      def setKmsKeyId(value: Input[String]): Self = StObject.set(x, "kmsKeyId", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setKmsKeyIdUndefined: Self = StObject.set(x, "kmsKeyId", js.undefined)
      
      @scala.inline
      def setLifecyclePolicy(value: Input[typingsSlinky.pulumiAws.inputMod.efs.FileSystemLifecyclePolicy]): Self = StObject.set(x, "lifecyclePolicy", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setLifecyclePolicyUndefined: Self = StObject.set(x, "lifecyclePolicy", js.undefined)
      
      @scala.inline
      def setPerformanceMode(value: Input[String]): Self = StObject.set(x, "performanceMode", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setPerformanceModeUndefined: Self = StObject.set(x, "performanceMode", js.undefined)
      
      @scala.inline
      def setProvisionedThroughputInMibps(value: Input[Double]): Self = StObject.set(x, "provisionedThroughputInMibps", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setProvisionedThroughputInMibpsUndefined: Self = StObject.set(x, "provisionedThroughputInMibps", js.undefined)
      
      @scala.inline
      def setTags(value: Input[StringDictionary[Input[String]]]): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
      
      @scala.inline
      def setThroughputMode(value: Input[String]): Self = StObject.set(x, "throughputMode", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setThroughputModeUndefined: Self = StObject.set(x, "throughputMode", js.undefined)
    }
  }
  
  @js.native
  trait FileSystemState extends StObject {
    
    /**
      * Amazon Resource Name of the file system.
      */
    val arn: js.UndefOr[Input[String]] = js.native
    
    /**
      * A unique name (a maximum of 64 characters are allowed)
      * used as reference when creating the Elastic File System to ensure idempotent file
      * system creation. By default generated by this provider. See [Elastic File System]
      * (http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
      */
    val creationToken: js.UndefOr[Input[String]] = js.native
    
    /**
      * The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).
      */
    val dnsName: js.UndefOr[Input[String]] = js.native
    
    /**
      * If true, the disk will be encrypted.
      */
    val encrypted: js.UndefOr[Input[Boolean]] = js.native
    
    /**
      * The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
      */
    val kmsKeyId: js.UndefOr[Input[String]] = js.native
    
    /**
      * A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
      */
    val lifecyclePolicy: js.UndefOr[Input[typingsSlinky.pulumiAws.inputMod.efs.FileSystemLifecyclePolicy]] = js.native
    
    /**
      * The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
      */
    val performanceMode: js.UndefOr[Input[String]] = js.native
    
    /**
      * The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughputMode` set to `provisioned`.
      */
    val provisionedThroughputInMibps: js.UndefOr[Input[Double]] = js.native
    
    /**
      * A map of tags to assign to the file system.
      */
    val tags: js.UndefOr[Input[StringDictionary[Input[String]]]] = js.native
    
    /**
      * Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`. When using `provisioned`, also set `provisionedThroughputInMibps`.
      */
    val throughputMode: js.UndefOr[Input[String]] = js.native
  }
  object FileSystemState {
    
    @scala.inline
    def apply(): FileSystemState = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[FileSystemState]
    }
    
    @scala.inline
    implicit class FileSystemStateMutableBuilder[Self <: FileSystemState] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setArn(value: Input[String]): Self = StObject.set(x, "arn", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setArnUndefined: Self = StObject.set(x, "arn", js.undefined)
      
      @scala.inline
      def setCreationToken(value: Input[String]): Self = StObject.set(x, "creationToken", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setCreationTokenUndefined: Self = StObject.set(x, "creationToken", js.undefined)
      
      @scala.inline
      def setDnsName(value: Input[String]): Self = StObject.set(x, "dnsName", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setDnsNameUndefined: Self = StObject.set(x, "dnsName", js.undefined)
      
      @scala.inline
      def setEncrypted(value: Input[Boolean]): Self = StObject.set(x, "encrypted", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEncryptedUndefined: Self = StObject.set(x, "encrypted", js.undefined)
      
      @scala.inline
      def setKmsKeyId(value: Input[String]): Self = StObject.set(x, "kmsKeyId", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setKmsKeyIdUndefined: Self = StObject.set(x, "kmsKeyId", js.undefined)
      
      @scala.inline
      def setLifecyclePolicy(value: Input[typingsSlinky.pulumiAws.inputMod.efs.FileSystemLifecyclePolicy]): Self = StObject.set(x, "lifecyclePolicy", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setLifecyclePolicyUndefined: Self = StObject.set(x, "lifecyclePolicy", js.undefined)
      
      @scala.inline
      def setPerformanceMode(value: Input[String]): Self = StObject.set(x, "performanceMode", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setPerformanceModeUndefined: Self = StObject.set(x, "performanceMode", js.undefined)
      
      @scala.inline
      def setProvisionedThroughputInMibps(value: Input[Double]): Self = StObject.set(x, "provisionedThroughputInMibps", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setProvisionedThroughputInMibpsUndefined: Self = StObject.set(x, "provisionedThroughputInMibps", js.undefined)
      
      @scala.inline
      def setTags(value: Input[StringDictionary[Input[String]]]): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
      
      @scala.inline
      def setThroughputMode(value: Input[String]): Self = StObject.set(x, "throughputMode", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setThroughputModeUndefined: Self = StObject.set(x, "throughputMode", js.undefined)
    }
  }
}
