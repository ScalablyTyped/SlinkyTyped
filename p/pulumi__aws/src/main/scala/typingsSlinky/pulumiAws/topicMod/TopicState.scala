package typingsSlinky.pulumiAws.topicMod

import org.scalablytyped.runtime.StringDictionary
import typingsSlinky.pulumiAws.arnMod.ARN
import typingsSlinky.pulumiPulumi.outputMod.Input
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait TopicState extends js.Object {
  
  /**
    * IAM role for failure feedback
    */
  val applicationFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val applicationSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val applicationSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  
  /**
    * The ARN of the SNS topic, as a more obvious property (clone of id)
    */
  val arn: js.UndefOr[Input[ARN]] = js.native
  
  /**
    * The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
    */
  val deliveryPolicy: js.UndefOr[Input[String]] = js.native
  
  /**
    * The display name for the SNS topic
    */
  val displayName: js.UndefOr[Input[String]] = js.native
  
  /**
    * IAM role for failure feedback
    */
  val httpFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val httpSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val httpSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  
  /**
    * The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
    */
  val kmsMasterKeyId: js.UndefOr[Input[String]] = js.native
  
  /**
    * IAM role for failure feedback
    */
  val lambdaFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val lambdaSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val lambdaSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  
  /**
    * The friendly name for the SNS topic. By default generated by this provider.
    */
  val name: js.UndefOr[Input[String]] = js.native
  
  /**
    * The friendly name for the SNS topic. Conflicts with `name`.
    */
  val namePrefix: js.UndefOr[Input[String]] = js.native
  
  /**
    * The fully-formed AWS policy as JSON.
    */
  val policy: js.UndefOr[Input[String]] = js.native
  
  /**
    * IAM role for failure feedback
    */
  val sqsFailureFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val sqsSuccessFeedbackRoleArn: js.UndefOr[Input[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val sqsSuccessFeedbackSampleRate: js.UndefOr[Input[Double]] = js.native
  
  /**
    * Key-value map of resource tags
    */
  val tags: js.UndefOr[Input[StringDictionary[Input[String]]]] = js.native
}
object TopicState {
  
  @scala.inline
  def apply(): TopicState = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[TopicState]
  }
  
  @scala.inline
  implicit class TopicStateOps[Self <: TopicState] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setApplicationFailureFeedbackRoleArn(value: Input[String]): Self = this.set("applicationFailureFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteApplicationFailureFeedbackRoleArn: Self = this.set("applicationFailureFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setApplicationSuccessFeedbackRoleArn(value: Input[String]): Self = this.set("applicationSuccessFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteApplicationSuccessFeedbackRoleArn: Self = this.set("applicationSuccessFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setApplicationSuccessFeedbackSampleRate(value: Input[Double]): Self = this.set("applicationSuccessFeedbackSampleRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteApplicationSuccessFeedbackSampleRate: Self = this.set("applicationSuccessFeedbackSampleRate", js.undefined)
    
    @scala.inline
    def setArn(value: Input[ARN]): Self = this.set("arn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteArn: Self = this.set("arn", js.undefined)
    
    @scala.inline
    def setDeliveryPolicy(value: Input[String]): Self = this.set("deliveryPolicy", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDeliveryPolicy: Self = this.set("deliveryPolicy", js.undefined)
    
    @scala.inline
    def setDisplayName(value: Input[String]): Self = this.set("displayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDisplayName: Self = this.set("displayName", js.undefined)
    
    @scala.inline
    def setHttpFailureFeedbackRoleArn(value: Input[String]): Self = this.set("httpFailureFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteHttpFailureFeedbackRoleArn: Self = this.set("httpFailureFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setHttpSuccessFeedbackRoleArn(value: Input[String]): Self = this.set("httpSuccessFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteHttpSuccessFeedbackRoleArn: Self = this.set("httpSuccessFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setHttpSuccessFeedbackSampleRate(value: Input[Double]): Self = this.set("httpSuccessFeedbackSampleRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteHttpSuccessFeedbackSampleRate: Self = this.set("httpSuccessFeedbackSampleRate", js.undefined)
    
    @scala.inline
    def setKmsMasterKeyId(value: Input[String]): Self = this.set("kmsMasterKeyId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKmsMasterKeyId: Self = this.set("kmsMasterKeyId", js.undefined)
    
    @scala.inline
    def setLambdaFailureFeedbackRoleArn(value: Input[String]): Self = this.set("lambdaFailureFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLambdaFailureFeedbackRoleArn: Self = this.set("lambdaFailureFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setLambdaSuccessFeedbackRoleArn(value: Input[String]): Self = this.set("lambdaSuccessFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLambdaSuccessFeedbackRoleArn: Self = this.set("lambdaSuccessFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setLambdaSuccessFeedbackSampleRate(value: Input[Double]): Self = this.set("lambdaSuccessFeedbackSampleRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLambdaSuccessFeedbackSampleRate: Self = this.set("lambdaSuccessFeedbackSampleRate", js.undefined)
    
    @scala.inline
    def setName(value: Input[String]): Self = this.set("name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteName: Self = this.set("name", js.undefined)
    
    @scala.inline
    def setNamePrefix(value: Input[String]): Self = this.set("namePrefix", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteNamePrefix: Self = this.set("namePrefix", js.undefined)
    
    @scala.inline
    def setPolicy(value: Input[String]): Self = this.set("policy", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePolicy: Self = this.set("policy", js.undefined)
    
    @scala.inline
    def setSqsFailureFeedbackRoleArn(value: Input[String]): Self = this.set("sqsFailureFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSqsFailureFeedbackRoleArn: Self = this.set("sqsFailureFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setSqsSuccessFeedbackRoleArn(value: Input[String]): Self = this.set("sqsSuccessFeedbackRoleArn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSqsSuccessFeedbackRoleArn: Self = this.set("sqsSuccessFeedbackRoleArn", js.undefined)
    
    @scala.inline
    def setSqsSuccessFeedbackSampleRate(value: Input[Double]): Self = this.set("sqsSuccessFeedbackSampleRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSqsSuccessFeedbackSampleRate: Self = this.set("sqsSuccessFeedbackSampleRate", js.undefined)
    
    @scala.inline
    def setTags(value: Input[StringDictionary[Input[String]]]): Self = this.set("tags", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTags: Self = this.set("tags", js.undefined)
  }
}
