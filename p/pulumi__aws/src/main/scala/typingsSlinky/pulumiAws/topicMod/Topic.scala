package typingsSlinky.pulumiAws.topicMod

import org.scalablytyped.runtime.StringDictionary
import typingsSlinky.pulumiAws.arnMod.ARN
import typingsSlinky.pulumiAws.snsMixinsMod.TopicEventHandler
import typingsSlinky.pulumiAws.snsMixinsMod.TopicEventSubscription
import typingsSlinky.pulumiAws.snsMixinsMod.TopicEventSubscriptionArgs
import typingsSlinky.pulumiPulumi.mod.CustomResource
import typingsSlinky.pulumiPulumi.outputMod.Input
import typingsSlinky.pulumiPulumi.outputMod.Output_
import typingsSlinky.pulumiPulumi.resourceMod.ComponentResourceOptions
import typingsSlinky.pulumiPulumi.resourceMod.CustomResourceOptions
import typingsSlinky.pulumiPulumi.resourceMod.ID
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@JSImport("@pulumi/aws/sns/topic", "Topic")
@js.native
class Topic protected () extends CustomResource {
  /**
    * Create a Topic resource with the given unique name, arguments, and options.
    *
    * @param name The _unique_ name of the resource.
    * @param args The arguments to use to populate this resource's properties.
    * @param opts A bag of options that control this resource's behavior.
    */
  def this(name: String) = this()
  def this(name: String, args: TopicArgs) = this()
  def this(name: String, args: js.UndefOr[scala.Nothing], opts: CustomResourceOptions) = this()
  def this(name: String, args: TopicArgs, opts: CustomResourceOptions) = this()
  
  /**
    * IAM role for failure feedback
    */
  val applicationFailureFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val applicationSuccessFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val applicationSuccessFeedbackSampleRate: Output_[js.UndefOr[Double]] = js.native
  
  /**
    * The ARN of the SNS topic, as a more obvious property (clone of id)
    */
  val arn: Output_[ARN] = js.native
  
  /**
    * The SNS delivery policy. More on [AWS documentation](https://docs.aws.amazon.com/sns/latest/dg/DeliveryPolicies.html)
    */
  val deliveryPolicy: Output_[js.UndefOr[String]] = js.native
  
  /**
    * The display name for the SNS topic
    */
  val displayName: Output_[js.UndefOr[String]] = js.native
  
  /**
    * IAM role for failure feedback
    */
  val httpFailureFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val httpSuccessFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val httpSuccessFeedbackSampleRate: Output_[js.UndefOr[Double]] = js.native
  
  /**
    * The ID of an AWS-managed customer master key (CMK) for Amazon SNS or a custom CMK. For more information, see [Key Terms](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html#sse-key-terms)
    */
  val kmsMasterKeyId: Output_[js.UndefOr[String]] = js.native
  
  /**
    * IAM role for failure feedback
    */
  val lambdaFailureFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val lambdaSuccessFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val lambdaSuccessFeedbackSampleRate: Output_[js.UndefOr[Double]] = js.native
  
  /**
    * The friendly name for the SNS topic. By default generated by this provider.
    */
  val name: Output_[String] = js.native
  
  /**
    * The friendly name for the SNS topic. Conflicts with `name`.
    */
  val namePrefix: Output_[js.UndefOr[String]] = js.native
  
  /**
    * Creates a new subscription to events fired from this Topic to the handler provided, along
    * with options to control the behavior of the subscription.
    */
  def onEvent(name: String, handler: TopicEventHandler): TopicEventSubscription = js.native
  def onEvent(
    name: String,
    handler: TopicEventHandler,
    args: js.UndefOr[scala.Nothing],
    opts: ComponentResourceOptions
  ): TopicEventSubscription = js.native
  def onEvent(name: String, handler: TopicEventHandler, args: TopicEventSubscriptionArgs): TopicEventSubscription = js.native
  def onEvent(
    name: String,
    handler: TopicEventHandler,
    args: TopicEventSubscriptionArgs,
    opts: ComponentResourceOptions
  ): TopicEventSubscription = js.native
  
  /**
    * The fully-formed AWS policy as JSON.
    */
  val policy: Output_[String] = js.native
  
  /**
    * IAM role for failure feedback
    */
  val sqsFailureFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * The IAM role permitted to receive success feedback for this topic
    */
  val sqsSuccessFeedbackRoleArn: Output_[js.UndefOr[String]] = js.native
  
  /**
    * Percentage of success to sample
    */
  val sqsSuccessFeedbackSampleRate: Output_[js.UndefOr[Double]] = js.native
  
  /**
    * Key-value map of resource tags
    */
  val tags: Output_[js.UndefOr[StringDictionary[String]]] = js.native
}
/* static members */
@JSImport("@pulumi/aws/sns/topic", "Topic")
@js.native
object Topic extends js.Object {
  
  /**
    * Get an existing Topic resource's state with the given name, ID, and optional extra
    * properties used to qualify the lookup.
    *
    * @param name The _unique_ name of the resulting resource.
    * @param id The _unique_ provider ID of the resource to lookup.
    * @param state Any extra arguments used during the lookup.
    * @param opts Optional settings to control the behavior of the CustomResource.
    */
  def get(name: String, id: Input[ID]): Topic = js.native
  def get(name: String, id: Input[ID], state: js.UndefOr[scala.Nothing], opts: CustomResourceOptions): Topic = js.native
  def get(name: String, id: Input[ID], state: TopicState): Topic = js.native
  def get(name: String, id: Input[ID], state: TopicState, opts: CustomResourceOptions): Topic = js.native
  
  /**
    * Returns true if the given object is an instance of Topic.  This is designed to work even
    * when multiple copies of the Pulumi SDK have been loaded into the same process.
    */
  def isInstance(obj: js.Any): /* is @pulumi/aws.@pulumi/aws/sns/topic.Topic */ Boolean = js.native
}
