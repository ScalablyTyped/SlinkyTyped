package typingsSlinky.pulumiAws

import org.scalablytyped.runtime.StringDictionary
import typingsSlinky.pulumiAws.outputMod.transfer.ServerEndpointDetails
import typingsSlinky.pulumiPulumi.mod.CustomResource
import typingsSlinky.pulumiPulumi.outputMod.Input
import typingsSlinky.pulumiPulumi.outputMod.Output_
import typingsSlinky.pulumiPulumi.resourceMod.CustomResourceOptions
import typingsSlinky.pulumiPulumi.resourceMod.ID
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

object serverMod {
  
  @JSImport("@pulumi/aws/transfer/server", "Server")
  @js.native
  class Server protected () extends CustomResource {
    /**
      * Create a Server resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
    def this(name: String) = this()
    def this(name: String, args: ServerArgs) = this()
    def this(name: String, args: js.UndefOr[scala.Nothing], opts: CustomResourceOptions) = this()
    def this(name: String, args: ServerArgs, opts: CustomResourceOptions) = this()
    
    /**
      * Amazon Resource Name (ARN) of Transfer Server
      */
    val arn: Output_[String] = js.native
    
    /**
      * The endpoint of the Transfer Server (e.g. `s-12345678.server.transfer.REGION.amazonaws.com`)
      */
    val endpoint: Output_[String] = js.native
    
    /**
      * The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
      */
    val endpointDetails: Output_[js.UndefOr[ServerEndpointDetails]] = js.native
    
    /**
      * The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
      */
    val endpointType: Output_[js.UndefOr[String]] = js.native
    
    /**
      * A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`.
      */
    val forceDestroy: Output_[js.UndefOr[Boolean]] = js.native
    
    /**
      * RSA private key (e.g. as generated by the `ssh-keygen -N "" -m PEM -f my-new-server-key` command).
      */
    val hostKey: Output_[js.UndefOr[String]] = js.native
    
    /**
      * This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.
      */
    val hostKeyFingerprint: Output_[String] = js.native
    
    /**
      * The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.
      */
    val identityProviderType: Output_[js.UndefOr[String]] = js.native
    
    /**
      * Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
      */
    val invocationRole: Output_[js.UndefOr[String]] = js.native
    
    /**
      * Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
      */
    val loggingRole: Output_[js.UndefOr[String]] = js.native
    
    /**
      * A map of tags to assign to the resource.
      */
    val tags: Output_[js.UndefOr[StringDictionary[String]]] = js.native
    
    /**
      * - URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
      */
    val url: Output_[js.UndefOr[String]] = js.native
  }
  /* static members */
  object Server {
    
    /**
      * Get an existing Server resource's state with the given name, ID, and optional extra
      * properties used to qualify the lookup.
      *
      * @param name The _unique_ name of the resulting resource.
      * @param id The _unique_ provider ID of the resource to lookup.
      * @param state Any extra arguments used during the lookup.
      * @param opts Optional settings to control the behavior of the CustomResource.
      */
    @JSImport("@pulumi/aws/transfer/server", "Server.get")
    @js.native
    def get(name: String, id: Input[ID]): Server = js.native
    @JSImport("@pulumi/aws/transfer/server", "Server.get")
    @js.native
    def get(name: String, id: Input[ID], state: js.UndefOr[scala.Nothing], opts: CustomResourceOptions): Server = js.native
    @JSImport("@pulumi/aws/transfer/server", "Server.get")
    @js.native
    def get(name: String, id: Input[ID], state: ServerState): Server = js.native
    @JSImport("@pulumi/aws/transfer/server", "Server.get")
    @js.native
    def get(name: String, id: Input[ID], state: ServerState, opts: CustomResourceOptions): Server = js.native
    
    /**
      * Returns true if the given object is an instance of Server.  This is designed to work even
      * when multiple copies of the Pulumi SDK have been loaded into the same process.
      */
    @JSImport("@pulumi/aws/transfer/server", "Server.isInstance")
    @js.native
    def isInstance(obj: js.Any): /* is @pulumi/aws.@pulumi/aws/transfer/server.Server */ Boolean = js.native
  }
  
  @js.native
  trait ServerArgs extends StObject {
    
    /**
      * The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
      */
    val endpointDetails: js.UndefOr[Input[typingsSlinky.pulumiAws.inputMod.transfer.ServerEndpointDetails]] = js.native
    
    /**
      * The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
      */
    val endpointType: js.UndefOr[Input[String]] = js.native
    
    /**
      * A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`.
      */
    val forceDestroy: js.UndefOr[Input[Boolean]] = js.native
    
    /**
      * RSA private key (e.g. as generated by the `ssh-keygen -N "" -m PEM -f my-new-server-key` command).
      */
    val hostKey: js.UndefOr[Input[String]] = js.native
    
    /**
      * The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.
      */
    val identityProviderType: js.UndefOr[Input[String]] = js.native
    
    /**
      * Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
      */
    val invocationRole: js.UndefOr[Input[String]] = js.native
    
    /**
      * Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
      */
    val loggingRole: js.UndefOr[Input[String]] = js.native
    
    /**
      * A map of tags to assign to the resource.
      */
    val tags: js.UndefOr[Input[StringDictionary[Input[String]]]] = js.native
    
    /**
      * - URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
      */
    val url: js.UndefOr[Input[String]] = js.native
  }
  object ServerArgs {
    
    @scala.inline
    def apply(): ServerArgs = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[ServerArgs]
    }
    
    @scala.inline
    implicit class ServerArgsMutableBuilder[Self <: ServerArgs] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setEndpointDetails(value: Input[typingsSlinky.pulumiAws.inputMod.transfer.ServerEndpointDetails]): Self = StObject.set(x, "endpointDetails", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEndpointDetailsUndefined: Self = StObject.set(x, "endpointDetails", js.undefined)
      
      @scala.inline
      def setEndpointType(value: Input[String]): Self = StObject.set(x, "endpointType", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEndpointTypeUndefined: Self = StObject.set(x, "endpointType", js.undefined)
      
      @scala.inline
      def setForceDestroy(value: Input[Boolean]): Self = StObject.set(x, "forceDestroy", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setForceDestroyUndefined: Self = StObject.set(x, "forceDestroy", js.undefined)
      
      @scala.inline
      def setHostKey(value: Input[String]): Self = StObject.set(x, "hostKey", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setHostKeyUndefined: Self = StObject.set(x, "hostKey", js.undefined)
      
      @scala.inline
      def setIdentityProviderType(value: Input[String]): Self = StObject.set(x, "identityProviderType", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setIdentityProviderTypeUndefined: Self = StObject.set(x, "identityProviderType", js.undefined)
      
      @scala.inline
      def setInvocationRole(value: Input[String]): Self = StObject.set(x, "invocationRole", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setInvocationRoleUndefined: Self = StObject.set(x, "invocationRole", js.undefined)
      
      @scala.inline
      def setLoggingRole(value: Input[String]): Self = StObject.set(x, "loggingRole", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setLoggingRoleUndefined: Self = StObject.set(x, "loggingRole", js.undefined)
      
      @scala.inline
      def setTags(value: Input[StringDictionary[Input[String]]]): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
      
      @scala.inline
      def setUrl(value: Input[String]): Self = StObject.set(x, "url", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setUrlUndefined: Self = StObject.set(x, "url", js.undefined)
    }
  }
  
  @js.native
  trait ServerState extends StObject {
    
    /**
      * Amazon Resource Name (ARN) of Transfer Server
      */
    val arn: js.UndefOr[Input[String]] = js.native
    
    /**
      * The endpoint of the Transfer Server (e.g. `s-12345678.server.transfer.REGION.amazonaws.com`)
      */
    val endpoint: js.UndefOr[Input[String]] = js.native
    
    /**
      * The virtual private cloud (VPC) endpoint settings that you want to configure for your SFTP server. Fields documented below.
      */
    val endpointDetails: js.UndefOr[Input[typingsSlinky.pulumiAws.inputMod.transfer.ServerEndpointDetails]] = js.native
    
    /**
      * The type of endpoint that you want your SFTP server connect to. If you connect to a `VPC` (or `VPC_ENDPOINT`), your SFTP server isn't accessible over the public internet. If you want to connect your SFTP server via public internet, set `PUBLIC`.  Defaults to `PUBLIC`.
      */
    val endpointType: js.UndefOr[Input[String]] = js.native
    
    /**
      * A boolean that indicates all users associated with the server should be deleted so that the Server can be destroyed without error. The default value is `false`.
      */
    val forceDestroy: js.UndefOr[Input[Boolean]] = js.native
    
    /**
      * RSA private key (e.g. as generated by the `ssh-keygen -N "" -m PEM -f my-new-server-key` command).
      */
    val hostKey: js.UndefOr[Input[String]] = js.native
    
    /**
      * This value contains the message-digest algorithm (MD5) hash of the server's host key. This value is equivalent to the output of the `ssh-keygen -l -E md5 -f my-new-server-key` command.
      */
    val hostKeyFingerprint: js.UndefOr[Input[String]] = js.native
    
    /**
      * The mode of authentication enabled for this service. The default value is `SERVICE_MANAGED`, which allows you to store and access SFTP user credentials within the service. `API_GATEWAY` indicates that user authentication requires a call to an API Gateway endpoint URL provided by you to integrate an identity provider of your choice.
      */
    val identityProviderType: js.UndefOr[Input[String]] = js.native
    
    /**
      * Amazon Resource Name (ARN) of the IAM role used to authenticate the user account with an `identityProviderType` of `API_GATEWAY`.
      */
    val invocationRole: js.UndefOr[Input[String]] = js.native
    
    /**
      * Amazon Resource Name (ARN) of an IAM role that allows the service to write your SFTP users’ activity to your Amazon CloudWatch logs for monitoring and auditing purposes.
      */
    val loggingRole: js.UndefOr[Input[String]] = js.native
    
    /**
      * A map of tags to assign to the resource.
      */
    val tags: js.UndefOr[Input[StringDictionary[Input[String]]]] = js.native
    
    /**
      * - URL of the service endpoint used to authenticate users with an `identityProviderType` of `API_GATEWAY`.
      */
    val url: js.UndefOr[Input[String]] = js.native
  }
  object ServerState {
    
    @scala.inline
    def apply(): ServerState = {
      val __obj = js.Dynamic.literal()
      __obj.asInstanceOf[ServerState]
    }
    
    @scala.inline
    implicit class ServerStateMutableBuilder[Self <: ServerState] (val x: Self) extends AnyVal {
      
      @scala.inline
      def setArn(value: Input[String]): Self = StObject.set(x, "arn", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setArnUndefined: Self = StObject.set(x, "arn", js.undefined)
      
      @scala.inline
      def setEndpoint(value: Input[String]): Self = StObject.set(x, "endpoint", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEndpointDetails(value: Input[typingsSlinky.pulumiAws.inputMod.transfer.ServerEndpointDetails]): Self = StObject.set(x, "endpointDetails", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEndpointDetailsUndefined: Self = StObject.set(x, "endpointDetails", js.undefined)
      
      @scala.inline
      def setEndpointType(value: Input[String]): Self = StObject.set(x, "endpointType", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setEndpointTypeUndefined: Self = StObject.set(x, "endpointType", js.undefined)
      
      @scala.inline
      def setEndpointUndefined: Self = StObject.set(x, "endpoint", js.undefined)
      
      @scala.inline
      def setForceDestroy(value: Input[Boolean]): Self = StObject.set(x, "forceDestroy", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setForceDestroyUndefined: Self = StObject.set(x, "forceDestroy", js.undefined)
      
      @scala.inline
      def setHostKey(value: Input[String]): Self = StObject.set(x, "hostKey", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setHostKeyFingerprint(value: Input[String]): Self = StObject.set(x, "hostKeyFingerprint", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setHostKeyFingerprintUndefined: Self = StObject.set(x, "hostKeyFingerprint", js.undefined)
      
      @scala.inline
      def setHostKeyUndefined: Self = StObject.set(x, "hostKey", js.undefined)
      
      @scala.inline
      def setIdentityProviderType(value: Input[String]): Self = StObject.set(x, "identityProviderType", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setIdentityProviderTypeUndefined: Self = StObject.set(x, "identityProviderType", js.undefined)
      
      @scala.inline
      def setInvocationRole(value: Input[String]): Self = StObject.set(x, "invocationRole", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setInvocationRoleUndefined: Self = StObject.set(x, "invocationRole", js.undefined)
      
      @scala.inline
      def setLoggingRole(value: Input[String]): Self = StObject.set(x, "loggingRole", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setLoggingRoleUndefined: Self = StObject.set(x, "loggingRole", js.undefined)
      
      @scala.inline
      def setTags(value: Input[StringDictionary[Input[String]]]): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
      
      @scala.inline
      def setUrl(value: Input[String]): Self = StObject.set(x, "url", value.asInstanceOf[js.Any])
      
      @scala.inline
      def setUrlUndefined: Self = StObject.set(x, "url", js.undefined)
    }
  }
}
