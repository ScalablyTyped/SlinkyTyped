package typingsSlinky.pulumiKubernetes.kustomizeKustomizeMod

import typingsSlinky.pulumiPulumi.resourceMod.CustomResourceOptions
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * The set of arguments for constructing a Directory resource.
  */
@js.native
trait DirectoryOpts extends js.Object {
  
  /**
    * The directory containing the kustomization to apply. The value can be a local directory or a folder in a
    * git repository.
    * Example: ./helloWorld
    * Example: https://github.com/kubernetes-sigs/kustomize/tree/master/examples/helloWorld
    */
  var directory: String = js.native
  
  /**
    * An optional prefix for the auto-generated resource names.
    * Example: A resource created with resourcePrefix="foo" would produce a resource named "foo-resourceName".
    */
  var resourcePrefix: js.UndefOr[String] = js.native
  
  /**
    * Optional array of transformations to apply to the objects generated by kustomize before they are applied to
    * the cluster. Allows further changes to the kustomization without modifying the directory itself.
    *
    * @example
    * ```typescript
    * transformations: [
    * (obj: any, opts: pulumi.CustomResourceOptions) => {
    *     if (obj.kind === "Deployment" && obj.metadata.name == "cert-manager") {
    *         opts.aliases = [{ type: "apps/v1beta1:Deployment" }]
    *     }
    *
    *     if (obj.metadata) {
    *         obj.metadata.namespace = namespaceName;
    *     } else {
    *         obj.metadata = {namespace: namespaceName};
    *     }
    * }]
    * ```
    */
  var transformations: js.UndefOr[js.Array[js.Function2[/* o */ _, /* opts */ CustomResourceOptions, Unit]]] = js.native
}
object DirectoryOpts {
  
  @scala.inline
  def apply(directory: String): DirectoryOpts = {
    val __obj = js.Dynamic.literal(directory = directory.asInstanceOf[js.Any])
    __obj.asInstanceOf[DirectoryOpts]
  }
  
  @scala.inline
  implicit class DirectoryOptsOps[Self <: DirectoryOpts] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setDirectory(value: String): Self = this.set("directory", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setResourcePrefix(value: String): Self = this.set("resourcePrefix", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteResourcePrefix: Self = this.set("resourcePrefix", js.undefined)
    
    @scala.inline
    def setTransformationsVarargs(value: (js.Function2[js.Any, /* opts */ CustomResourceOptions, Unit])*): Self = this.set("transformations", js.Array(value :_*))
    
    @scala.inline
    def setTransformations(value: js.Array[js.Function2[/* o */ _, /* opts */ CustomResourceOptions, Unit]]): Self = this.set("transformations", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTransformations: Self = this.set("transformations", js.undefined)
  }
}
