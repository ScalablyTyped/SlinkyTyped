package typingsSlinky.maximMazurokGapiClientDisplayvideo.gapi.client.displayvideo

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Creative extends js.Object {
  
  /**
    * Additional dimensions. Applicable when creative_type is one of: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` * `CREATIVE_TYPE_NATIVE` *
    * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_LIGHTBOX` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` *
    * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_PUBLISHER_HOSTED` If this field is specified, width_pixels and height_pixels are both required and must be greater than or
    * equal to 0.
    */
  var additionalDimensions: js.UndefOr[js.Array[Dimensions]] = js.native
  
  /** Output only. The unique ID of the advertiser the creative belongs to. */
  var advertiserId: js.UndefOr[String] = js.native
  
  /** Third-party HTML tracking tag to be appended to the creative tag. */
  var appendedTag: js.UndefOr[String] = js.native
  
  /**
    * Required. Assets associated to this creative. Assets can be associated to the creative in one of following roles: * `ASSET_ROLE_UNSPECIFIED` * `ASSET_ROLE_MAIN` *
    * `ASSET_ROLE_BACKUP` * `ASSET_ROLE_POLITE_LOAD`
    */
  var assets: js.UndefOr[js.Array[AssetAssociation]] = js.native
  
  /** Output only. The unique ID of the Campaign Manager 360 placement associated with the creative. This field is only applicable for creatives that are synced from Campaign Manager. */
  var cmPlacementId: js.UndefOr[String] = js.native
  
  /**
    * The Campaign Manager 360 tracking ad associated with the creative. Optional for the following creative_type when created by an advertiser that uses both Campaign Manager 360 and
    * third-party ad serving: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` Output only
    * for other cases.
    */
  var cmTrackingAd: js.UndefOr[CmTrackingAd] = js.native
  
  /**
    * The IDs of companion creatives for a video creative. You can assign existing display creatives (with image or HTML5 assets) to serve surrounding the publisher's video player.
    * Companions display around the video player while the video is playing and remain after the video has completed. Creatives contain additional dimensions can not be companion
    * creatives. This field is only supported for following creative_type: * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_VIDEO`
    */
  var companionCreativeIds: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * Counter events for a rich media creative. Counters track the number of times that a user interacts with any part of a rich media creative in a specified way (mouse-overs,
    * mouse-outs, clicks, taps, data loading, keyboard entries, etc.). Any event that can be captured in the creative can be recorded as a counter. Leave it empty or unset for creatives
    * containing image assets only.
    */
  var counterEvents: js.UndefOr[js.Array[CounterEvent]] = js.native
  
  /** Output only. The timestamp when the creative was created. Assigned by the system. */
  var createTime: js.UndefOr[String] = js.native
  
  /** Output only. A list of attributes of the creative that is generated by the system. */
  var creativeAttributes: js.UndefOr[js.Array[String]] = js.native
  
  /** Output only. The unique ID of the creative. Assigned by the system. */
  var creativeId: js.UndefOr[String] = js.native
  
  /** Required. Immutable. The type of the creative. */
  var creativeType: js.UndefOr[String] = js.native
  
  /**
    * Required. Primary dimensions of the creative. Applicable to all creative types. The value of width_pixels and height_pixels defaults to `0` when creative_type is one of: *
    * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_INTERSTITIAL` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_TEMPLATED_APP_INSTALL_VIDEO`
    */
  var dimensions: js.UndefOr[Dimensions] = js.native
  
  /** Required. The display name of the creative. Must be UTF-8 encoded with a maximum size of 240 bytes. */
  var displayName: js.UndefOr[String] = js.native
  
  /** Output only. Indicates whether the creative is dynamic. */
  var dynamic: js.UndefOr[Boolean] = js.native
  
  /** Required. Controls whether or not the creative can serve. Accepted values are: * `ENTITY_STATUS_ACTIVE` * `ENTITY_STATUS_ARCHIVED` * `ENTITY_STATUS_PAUSED` */
  var entityStatus: js.UndefOr[String] = js.native
  
  /**
    * Required. Exit events for this creative. An exit (also known as a click tag) is any area in your creative that someone can click or tap to open an advertiser's landing page. Every
    * creative must include at least one exit. You can add an exit to your creative in any of the following ways: * Use Google Web Designer's tap area. * Define a JavaScript variable
    * called "clickTag". * Use the Enabler (Enabler.exit()) to track exits in rich media formats.
    */
  var exitEvents: js.UndefOr[js.Array[ExitEvent]] = js.native
  
  /**
    * Optional. Indicates the creative will automatically expand on hover. Optional and only valid for third-party expandable creatives. Third-party expandable creatives are creatives
    * with following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`
    */
  var expandOnHover: js.UndefOr[Boolean] = js.native
  
  /**
    * Optional. Specifies the expanding direction of the creative. Required and only valid for third-party expandable creatives. Third-party expandable creatives are creatives with
    * following hosting source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_EXPANDABLE`
    */
  var expandingDirection: js.UndefOr[String] = js.native
  
  /** Required. Indicates where the creative is hosted. */
  var hostingSource: js.UndefOr[String] = js.native
  
  /**
    * Output only. Indicates the third-party VAST tag creative requires HTML5 Video support. Output only and only valid for third-party VAST tag creatives. Third-party VAST tag creatives
    * are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`
    */
  var html5Video: js.UndefOr[Boolean] = js.native
  
  /**
    * Indicates whether Integral Ad Science (IAS) campaign monitoring is enabled. To enable this for the creative, make sure the Advertiser.creative_config.ias_client_id has been set to
    * your IAS client ID.
    */
  var iasCampaignMonitoring: js.UndefOr[Boolean] = js.native
  
  /** ID information used to link this creative to an external system. Must be UTF-8 encoded with a length of no more than 10,000 characters. */
  var integrationCode: js.UndefOr[String] = js.native
  
  /**
    * JavaScript measurement URL from supported third-party verification providers (ComScore, DoubleVerify, IAS, Moat). HTML script tags are not supported. This field is only supported in
    * following creative_type: * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` *
    * `CREATIVE_TYPE_NATIVE_VIDEO`
    */
  var jsTrackerUrl: js.UndefOr[String] = js.native
  
  /** Output only. The IDs of the line items this creative is associated with. To associate a creative to a line item, use LineItem.creative_ids instead. */
  var lineItemIds: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * Output only. Media duration of the creative. Applicable when creative_type is one of: * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_AUDIO` * `CREATIVE_TYPE_NATIVE_VIDEO` *
    * `CREATIVE_TYPE_PUBLISHER_HOSTED`
    */
  var mediaDuration: js.UndefOr[String] = js.native
  
  /** Output only. The resource name of the creative. */
  var name: js.UndefOr[String] = js.native
  
  /** User notes for this creative. Must be UTF-8 encoded with a length of no more than 20,000 characters. */
  var notes: js.UndefOr[String] = js.native
  
  /** Specifies the OBA icon for a video creative. This field is only supported in following creative_type: * `CREATIVE_TYPE_VIDEO` */
  var obaIcon: js.UndefOr[ObaIcon] = js.native
  
  /**
    * Amount of time to play the video before counting a view. This field is required when skippable is true. This field is only supported for the following creative_type: *
    * `CREATIVE_TYPE_VIDEO`
    */
  var progressOffset: js.UndefOr[AudioVideoOffset] = js.native
  
  /**
    * Optional. Indicates that the creative relies on HTML5 to render properly. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with
    * following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`
    */
  var requireHtml5: js.UndefOr[Boolean] = js.native
  
  /**
    * Optional. Indicates that the creative requires MRAID (Mobile Rich Media Ad Interface Definitions system). Set this if the creative relies on mobile gestures for interactivity, such
    * as swiping or tapping. Optional and only valid for third-party tag creatives. Third-party tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY`
    * combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`
    */
  var requireMraid: js.UndefOr[Boolean] = js.native
  
  /**
    * Optional. Indicates that the creative will wait for a return ping for attribution. Only valid when using a Campaign Manager 360 tracking ad with a third-party ad server parameter
    * and the ${DC_DBM_TOKEN} macro. Optional and only valid for third-party tag creatives or third-party VAST tag creatives. Third-party tag creatives are creatives with following
    * hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE` Third-party VAST tag creatives are
    * creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`
    */
  var requirePingForAttribution: js.UndefOr[Boolean] = js.native
  
  /** Output only. The current status of the creative review process. */
  var reviewStatus: js.UndefOr[ReviewStatusInfo] = js.native
  
  /**
    * Amount of time to play the video before the skip button appears. This field is required when skippable is true. This field is only supported for the following creative_type: *
    * `CREATIVE_TYPE_VIDEO`
    */
  var skipOffset: js.UndefOr[AudioVideoOffset] = js.native
  
  /** Whether the user can choose to skip a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO` */
  var skippable: js.UndefOr[Boolean] = js.native
  
  /**
    * Optional. The original third-party tag used for the creative. Required and only valid for third-party tag creatives. Third-party tag creatives are creatives with following
    * hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_STANDARD` * `CREATIVE_TYPE_EXPANDABLE`
    */
  var thirdPartyTag: js.UndefOr[String] = js.native
  
  /**
    * Tracking URLs from third parties to track interactions with a video creative. This field is only supported for the following creative_type: * `CREATIVE_TYPE_AUDIO` *
    * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO`
    */
  var thirdPartyUrls: js.UndefOr[js.Array[ThirdPartyUrl]] = js.native
  
  /**
    * Timer custom events for a rich media creative. Timers track the time during which a user views and interacts with a specified part of a rich media creative. A creative can have
    * multiple timer events, each timed independently. Leave it empty or unset for creatives containing image assets only.
    */
  var timerEvents: js.UndefOr[js.Array[TimerEvent]] = js.native
  
  /**
    * Tracking URLs for analytics providers or third-party ad technology vendors. The URLs must start with https (except on inventory that doesn't require SSL compliance). If using macros
    * in your URL, use only macros supported by Display & Video 360. Standard URLs only, no IMG or SCRIPT tags. This field is only supported in following creative_type: *
    * `CREATIVE_TYPE_NATIVE` * `CREATIVE_TYPE_NATIVE_SITE_SQUARE` * `CREATIVE_TYPE_NATIVE_APP_INSTALL` * `CREATIVE_TYPE_NATIVE_APP_INSTALL_SQUARE` * `CREATIVE_TYPE_NATIVE_VIDEO`
    */
  var trackerUrls: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * Output only. Audio/Video transcodes. Display & Video 360 transcodes the main asset into a number of alternative versions that use different file formats or have different properties
    * (resolution, audio bit rate, and video bit rate), each designed for specific video players or bandwidths. These transcodes give a publisher's system more options to choose from for
    * each impression on your video and ensures that the appropriate file serves based on the viewer’s connection and screen size. This field is only supported in following creative_type:
    * * `CREATIVE_TYPE_VIDEO` * `CREATIVE_TYPE_NATIVE_VIDEO` * `CREATIVE_TYPE_AUDIO`
    */
  var transcodes: js.UndefOr[js.Array[Transcode]] = js.native
  
  /**
    * Optional. An optional creative identifier provided by a registry that is unique across all platforms. Universal Ad ID is part of the VAST 4.0 standard. It can be modified after the
    * creative is created. This field is only supported for the following creative_type: * `CREATIVE_TYPE_VIDEO`
    */
  var universalAdId: js.UndefOr[UniversalAdId] = js.native
  
  /** Output only. The timestamp when the creative was last updated. Assigned by the system. */
  var updateTime: js.UndefOr[String] = js.native
  
  /**
    * Optional. The URL of the VAST tag for a third-party VAST tag creative. Required and only valid for third-party VAST tag creatives. Third-party VAST tag creatives are creatives with
    * following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`
    */
  var vastTagUrl: js.UndefOr[String] = js.native
  
  /**
    * Output only. Indicates the third-party VAST tag creative requires VPAID (Digital Video Player-Ad Interface). Output only and only valid for third-party VAST tag creatives.
    * Third-party VAST tag creatives are creatives with following hosting_source: * `HOSTING_SOURCE_THIRD_PARTY` combined with following creative_type: * `CREATIVE_TYPE_VIDEO`
    */
  var vpaid: js.UndefOr[Boolean] = js.native
}
object Creative {
  
  @scala.inline
  def apply(): Creative = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Creative]
  }
  
  @scala.inline
  implicit class CreativeOps[Self <: Creative] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAdditionalDimensionsVarargs(value: Dimensions*): Self = this.set("additionalDimensions", js.Array(value :_*))
    
    @scala.inline
    def setAdditionalDimensions(value: js.Array[Dimensions]): Self = this.set("additionalDimensions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAdditionalDimensions: Self = this.set("additionalDimensions", js.undefined)
    
    @scala.inline
    def setAdvertiserId(value: String): Self = this.set("advertiserId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAdvertiserId: Self = this.set("advertiserId", js.undefined)
    
    @scala.inline
    def setAppendedTag(value: String): Self = this.set("appendedTag", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAppendedTag: Self = this.set("appendedTag", js.undefined)
    
    @scala.inline
    def setAssetsVarargs(value: AssetAssociation*): Self = this.set("assets", js.Array(value :_*))
    
    @scala.inline
    def setAssets(value: js.Array[AssetAssociation]): Self = this.set("assets", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAssets: Self = this.set("assets", js.undefined)
    
    @scala.inline
    def setCmPlacementId(value: String): Self = this.set("cmPlacementId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCmPlacementId: Self = this.set("cmPlacementId", js.undefined)
    
    @scala.inline
    def setCmTrackingAd(value: CmTrackingAd): Self = this.set("cmTrackingAd", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCmTrackingAd: Self = this.set("cmTrackingAd", js.undefined)
    
    @scala.inline
    def setCompanionCreativeIdsVarargs(value: String*): Self = this.set("companionCreativeIds", js.Array(value :_*))
    
    @scala.inline
    def setCompanionCreativeIds(value: js.Array[String]): Self = this.set("companionCreativeIds", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCompanionCreativeIds: Self = this.set("companionCreativeIds", js.undefined)
    
    @scala.inline
    def setCounterEventsVarargs(value: CounterEvent*): Self = this.set("counterEvents", js.Array(value :_*))
    
    @scala.inline
    def setCounterEvents(value: js.Array[CounterEvent]): Self = this.set("counterEvents", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCounterEvents: Self = this.set("counterEvents", js.undefined)
    
    @scala.inline
    def setCreateTime(value: String): Self = this.set("createTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreateTime: Self = this.set("createTime", js.undefined)
    
    @scala.inline
    def setCreativeAttributesVarargs(value: String*): Self = this.set("creativeAttributes", js.Array(value :_*))
    
    @scala.inline
    def setCreativeAttributes(value: js.Array[String]): Self = this.set("creativeAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreativeAttributes: Self = this.set("creativeAttributes", js.undefined)
    
    @scala.inline
    def setCreativeId(value: String): Self = this.set("creativeId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreativeId: Self = this.set("creativeId", js.undefined)
    
    @scala.inline
    def setCreativeType(value: String): Self = this.set("creativeType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreativeType: Self = this.set("creativeType", js.undefined)
    
    @scala.inline
    def setDimensions(value: Dimensions): Self = this.set("dimensions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDimensions: Self = this.set("dimensions", js.undefined)
    
    @scala.inline
    def setDisplayName(value: String): Self = this.set("displayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDisplayName: Self = this.set("displayName", js.undefined)
    
    @scala.inline
    def setDynamic(value: Boolean): Self = this.set("dynamic", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDynamic: Self = this.set("dynamic", js.undefined)
    
    @scala.inline
    def setEntityStatus(value: String): Self = this.set("entityStatus", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteEntityStatus: Self = this.set("entityStatus", js.undefined)
    
    @scala.inline
    def setExitEventsVarargs(value: ExitEvent*): Self = this.set("exitEvents", js.Array(value :_*))
    
    @scala.inline
    def setExitEvents(value: js.Array[ExitEvent]): Self = this.set("exitEvents", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteExitEvents: Self = this.set("exitEvents", js.undefined)
    
    @scala.inline
    def setExpandOnHover(value: Boolean): Self = this.set("expandOnHover", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteExpandOnHover: Self = this.set("expandOnHover", js.undefined)
    
    @scala.inline
    def setExpandingDirection(value: String): Self = this.set("expandingDirection", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteExpandingDirection: Self = this.set("expandingDirection", js.undefined)
    
    @scala.inline
    def setHostingSource(value: String): Self = this.set("hostingSource", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteHostingSource: Self = this.set("hostingSource", js.undefined)
    
    @scala.inline
    def setHtml5Video(value: Boolean): Self = this.set("html5Video", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteHtml5Video: Self = this.set("html5Video", js.undefined)
    
    @scala.inline
    def setIasCampaignMonitoring(value: Boolean): Self = this.set("iasCampaignMonitoring", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIasCampaignMonitoring: Self = this.set("iasCampaignMonitoring", js.undefined)
    
    @scala.inline
    def setIntegrationCode(value: String): Self = this.set("integrationCode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIntegrationCode: Self = this.set("integrationCode", js.undefined)
    
    @scala.inline
    def setJsTrackerUrl(value: String): Self = this.set("jsTrackerUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteJsTrackerUrl: Self = this.set("jsTrackerUrl", js.undefined)
    
    @scala.inline
    def setLineItemIdsVarargs(value: String*): Self = this.set("lineItemIds", js.Array(value :_*))
    
    @scala.inline
    def setLineItemIds(value: js.Array[String]): Self = this.set("lineItemIds", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLineItemIds: Self = this.set("lineItemIds", js.undefined)
    
    @scala.inline
    def setMediaDuration(value: String): Self = this.set("mediaDuration", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMediaDuration: Self = this.set("mediaDuration", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = this.set("name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteName: Self = this.set("name", js.undefined)
    
    @scala.inline
    def setNotes(value: String): Self = this.set("notes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteNotes: Self = this.set("notes", js.undefined)
    
    @scala.inline
    def setObaIcon(value: ObaIcon): Self = this.set("obaIcon", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteObaIcon: Self = this.set("obaIcon", js.undefined)
    
    @scala.inline
    def setProgressOffset(value: AudioVideoOffset): Self = this.set("progressOffset", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteProgressOffset: Self = this.set("progressOffset", js.undefined)
    
    @scala.inline
    def setRequireHtml5(value: Boolean): Self = this.set("requireHtml5", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequireHtml5: Self = this.set("requireHtml5", js.undefined)
    
    @scala.inline
    def setRequireMraid(value: Boolean): Self = this.set("requireMraid", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequireMraid: Self = this.set("requireMraid", js.undefined)
    
    @scala.inline
    def setRequirePingForAttribution(value: Boolean): Self = this.set("requirePingForAttribution", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequirePingForAttribution: Self = this.set("requirePingForAttribution", js.undefined)
    
    @scala.inline
    def setReviewStatus(value: ReviewStatusInfo): Self = this.set("reviewStatus", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteReviewStatus: Self = this.set("reviewStatus", js.undefined)
    
    @scala.inline
    def setSkipOffset(value: AudioVideoOffset): Self = this.set("skipOffset", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSkipOffset: Self = this.set("skipOffset", js.undefined)
    
    @scala.inline
    def setSkippable(value: Boolean): Self = this.set("skippable", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSkippable: Self = this.set("skippable", js.undefined)
    
    @scala.inline
    def setThirdPartyTag(value: String): Self = this.set("thirdPartyTag", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteThirdPartyTag: Self = this.set("thirdPartyTag", js.undefined)
    
    @scala.inline
    def setThirdPartyUrlsVarargs(value: ThirdPartyUrl*): Self = this.set("thirdPartyUrls", js.Array(value :_*))
    
    @scala.inline
    def setThirdPartyUrls(value: js.Array[ThirdPartyUrl]): Self = this.set("thirdPartyUrls", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteThirdPartyUrls: Self = this.set("thirdPartyUrls", js.undefined)
    
    @scala.inline
    def setTimerEventsVarargs(value: TimerEvent*): Self = this.set("timerEvents", js.Array(value :_*))
    
    @scala.inline
    def setTimerEvents(value: js.Array[TimerEvent]): Self = this.set("timerEvents", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTimerEvents: Self = this.set("timerEvents", js.undefined)
    
    @scala.inline
    def setTrackerUrlsVarargs(value: String*): Self = this.set("trackerUrls", js.Array(value :_*))
    
    @scala.inline
    def setTrackerUrls(value: js.Array[String]): Self = this.set("trackerUrls", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTrackerUrls: Self = this.set("trackerUrls", js.undefined)
    
    @scala.inline
    def setTranscodesVarargs(value: Transcode*): Self = this.set("transcodes", js.Array(value :_*))
    
    @scala.inline
    def setTranscodes(value: js.Array[Transcode]): Self = this.set("transcodes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTranscodes: Self = this.set("transcodes", js.undefined)
    
    @scala.inline
    def setUniversalAdId(value: UniversalAdId): Self = this.set("universalAdId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteUniversalAdId: Self = this.set("universalAdId", js.undefined)
    
    @scala.inline
    def setUpdateTime(value: String): Self = this.set("updateTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteUpdateTime: Self = this.set("updateTime", js.undefined)
    
    @scala.inline
    def setVastTagUrl(value: String): Self = this.set("vastTagUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteVastTagUrl: Self = this.set("vastTagUrl", js.undefined)
    
    @scala.inline
    def setVpaid(value: Boolean): Self = this.set("vpaid", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteVpaid: Self = this.set("vpaid", js.undefined)
  }
}
