package typingsSlinky.maximMazurokGapiClientDisplayvideo.gapi.client.displayvideo

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait LineItem extends StObject {
  
  /** Output only. The unique ID of the advertiser the line item belongs to. */
  var advertiserId: js.UndefOr[String] = js.native
  
  /** Required. The bidding strategy of the line item. */
  var bidStrategy: js.UndefOr[BiddingStrategy] = js.native
  
  /** Required. The budget allocation setting of the line item. */
  var budget: js.UndefOr[LineItemBudget] = js.native
  
  /** Output only. The unique ID of the campaign that the line item belongs to. */
  var campaignId: js.UndefOr[String] = js.native
  
  /** The conversion tracking setting of the line item. */
  var conversionCounting: js.UndefOr[ConversionCountingConfig] = js.native
  
  /** The IDs of the creatives associated with the line item. */
  var creativeIds: js.UndefOr[js.Array[String]] = js.native
  
  /** Required. The display name of the line item. Must be UTF-8 encoded with a maximum size of 240 bytes. */
  var displayName: js.UndefOr[String] = js.native
  
  /**
    * Required. Controls whether or not the line item can spend its budget and bid on inventory. * For CreateLineItem method, only `ENTITY_STATUS_DRAFT` is allowed. To activate a line
    * item, use UpdateLineItem method and update the status to `ENTITY_STATUS_ACTIVE` after creation. * A line item cannot be changed back to `ENTITY_STATUS_DRAFT` status from any other
    * status. * If the line item's parent insertion order is not active, the line item can't spend its budget even if its own status is `ENTITY_STATUS_ACTIVE`.
    */
  var entityStatus: js.UndefOr[String] = js.native
  
  /** Required. The start and end time of the line item's flight. */
  var flight: js.UndefOr[LineItemFlight] = js.native
  
  /** Required. The frequency capping setting of the line item. */
  var frequencyCap: js.UndefOr[FrequencyCap] = js.native
  
  /** Required. Immutable. The unique ID of the insertion order that the line item belongs to. */
  var insertionOrderId: js.UndefOr[String] = js.native
  
  /** Integration details of the line item. */
  var integrationDetails: js.UndefOr[IntegrationDetails] = js.native
  
  /** The IDs of the private inventory sources assigned to the line item. */
  var inventorySourceIds: js.UndefOr[js.Array[String]] = js.native
  
  /** Output only. The unique ID of the line item. Assigned by the system. */
  var lineItemId: js.UndefOr[String] = js.native
  
  /** Required. Immutable. The type of the line item. */
  var lineItemType: js.UndefOr[String] = js.native
  
  /** Output only. The resource name of the line item. */
  var name: js.UndefOr[String] = js.native
  
  /** Required. The budget spending speed setting of the line item. */
  var pacing: js.UndefOr[Pacing] = js.native
  
  /** The partner costs associated with the line item. If absent or empty in CreateLineItem method, the newly created line item will inherit partner costs from its parent insertion order. */
  var partnerCosts: js.UndefOr[js.Array[PartnerCost]] = js.native
  
  /** Required. The partner revenue model setting of the line item. */
  var partnerRevenueModel: js.UndefOr[PartnerRevenueModel] = js.native
  
  /**
    * The [targeting expansion](https://support.google.com/displayvideo/answer/10191558) settings of the line item. This config is only applicable when eligible audience list targeting is
    * assigned to the line item.
    */
  var targetingExpansion: js.UndefOr[TargetingExpansionConfig] = js.native
  
  /** Output only. The timestamp when the line item was last updated. Assigned by the system. */
  var updateTime: js.UndefOr[String] = js.native
  
  /** Output only. The warning messages generated by the line item. These warnings do not block saving the line item, but some may block the line item from running. */
  var warningMessages: js.UndefOr[js.Array[String]] = js.native
}
object LineItem {
  
  @scala.inline
  def apply(): LineItem = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[LineItem]
  }
  
  @scala.inline
  implicit class LineItemMutableBuilder[Self <: LineItem] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAdvertiserId(value: String): Self = StObject.set(x, "advertiserId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAdvertiserIdUndefined: Self = StObject.set(x, "advertiserId", js.undefined)
    
    @scala.inline
    def setBidStrategy(value: BiddingStrategy): Self = StObject.set(x, "bidStrategy", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setBidStrategyUndefined: Self = StObject.set(x, "bidStrategy", js.undefined)
    
    @scala.inline
    def setBudget(value: LineItemBudget): Self = StObject.set(x, "budget", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setBudgetUndefined: Self = StObject.set(x, "budget", js.undefined)
    
    @scala.inline
    def setCampaignId(value: String): Self = StObject.set(x, "campaignId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCampaignIdUndefined: Self = StObject.set(x, "campaignId", js.undefined)
    
    @scala.inline
    def setConversionCounting(value: ConversionCountingConfig): Self = StObject.set(x, "conversionCounting", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setConversionCountingUndefined: Self = StObject.set(x, "conversionCounting", js.undefined)
    
    @scala.inline
    def setCreativeIds(value: js.Array[String]): Self = StObject.set(x, "creativeIds", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCreativeIdsUndefined: Self = StObject.set(x, "creativeIds", js.undefined)
    
    @scala.inline
    def setCreativeIdsVarargs(value: String*): Self = StObject.set(x, "creativeIds", js.Array(value :_*))
    
    @scala.inline
    def setDisplayName(value: String): Self = StObject.set(x, "displayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDisplayNameUndefined: Self = StObject.set(x, "displayName", js.undefined)
    
    @scala.inline
    def setEntityStatus(value: String): Self = StObject.set(x, "entityStatus", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setEntityStatusUndefined: Self = StObject.set(x, "entityStatus", js.undefined)
    
    @scala.inline
    def setFlight(value: LineItemFlight): Self = StObject.set(x, "flight", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setFlightUndefined: Self = StObject.set(x, "flight", js.undefined)
    
    @scala.inline
    def setFrequencyCap(value: FrequencyCap): Self = StObject.set(x, "frequencyCap", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setFrequencyCapUndefined: Self = StObject.set(x, "frequencyCap", js.undefined)
    
    @scala.inline
    def setInsertionOrderId(value: String): Self = StObject.set(x, "insertionOrderId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setInsertionOrderIdUndefined: Self = StObject.set(x, "insertionOrderId", js.undefined)
    
    @scala.inline
    def setIntegrationDetails(value: IntegrationDetails): Self = StObject.set(x, "integrationDetails", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setIntegrationDetailsUndefined: Self = StObject.set(x, "integrationDetails", js.undefined)
    
    @scala.inline
    def setInventorySourceIds(value: js.Array[String]): Self = StObject.set(x, "inventorySourceIds", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setInventorySourceIdsUndefined: Self = StObject.set(x, "inventorySourceIds", js.undefined)
    
    @scala.inline
    def setInventorySourceIdsVarargs(value: String*): Self = StObject.set(x, "inventorySourceIds", js.Array(value :_*))
    
    @scala.inline
    def setLineItemId(value: String): Self = StObject.set(x, "lineItemId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLineItemIdUndefined: Self = StObject.set(x, "lineItemId", js.undefined)
    
    @scala.inline
    def setLineItemType(value: String): Self = StObject.set(x, "lineItemType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLineItemTypeUndefined: Self = StObject.set(x, "lineItemType", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setPacing(value: Pacing): Self = StObject.set(x, "pacing", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPacingUndefined: Self = StObject.set(x, "pacing", js.undefined)
    
    @scala.inline
    def setPartnerCosts(value: js.Array[PartnerCost]): Self = StObject.set(x, "partnerCosts", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPartnerCostsUndefined: Self = StObject.set(x, "partnerCosts", js.undefined)
    
    @scala.inline
    def setPartnerCostsVarargs(value: PartnerCost*): Self = StObject.set(x, "partnerCosts", js.Array(value :_*))
    
    @scala.inline
    def setPartnerRevenueModel(value: PartnerRevenueModel): Self = StObject.set(x, "partnerRevenueModel", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPartnerRevenueModelUndefined: Self = StObject.set(x, "partnerRevenueModel", js.undefined)
    
    @scala.inline
    def setTargetingExpansion(value: TargetingExpansionConfig): Self = StObject.set(x, "targetingExpansion", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTargetingExpansionUndefined: Self = StObject.set(x, "targetingExpansion", js.undefined)
    
    @scala.inline
    def setUpdateTime(value: String): Self = StObject.set(x, "updateTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setUpdateTimeUndefined: Self = StObject.set(x, "updateTime", js.undefined)
    
    @scala.inline
    def setWarningMessages(value: js.Array[String]): Self = StObject.set(x, "warningMessages", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setWarningMessagesUndefined: Self = StObject.set(x, "warningMessages", js.undefined)
    
    @scala.inline
    def setWarningMessagesVarargs(value: String*): Self = StObject.set(x, "warningMessages", js.Array(value :_*))
  }
}
