package typingsSlinky.maximMazurokGapiClientAndroidmanagement.gapi.client.androidmanagement

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait WebToken extends StObject {
  
  /**
    * The features to enable. Use this if you want to control exactly which feature(s) will be activated; leave empty to allow all features.Restrictions / things to note: - If no features
    * are listed here, all features are enabled â€” this is the default behavior where you give access to all features to your admins. - This must not contain any FEATURE_UNSPECIFIED
    * values. - Repeated values are ignored
    */
  var enabledFeatures: js.UndefOr[js.Array[String]] = js.native
  
  /** The name of the web token, which is generated by the server during creation in the form enterprises/{enterpriseId}/webTokens/{webTokenId}. */
  var name: js.UndefOr[String] = js.native
  
  /** The URL of the parent frame hosting the iframe with the embedded UI. To prevent XSS, the iframe may not be hosted at other URLs. The URL must use the https scheme. */
  var parentFrameUrl: js.UndefOr[String] = js.native
  
  /** Permissions available to an admin in the embedded UI. An admin must have all of these permissions in order to view the UI. This field is deprecated. */
  var permissions: js.UndefOr[js.Array[String]] = js.native
  
  /** The token value which is used in the hosting page to generate the iframe with the embedded UI. This is a read-only field generated by the server. */
  var value: js.UndefOr[String] = js.native
}
object WebToken {
  
  @scala.inline
  def apply(): WebToken = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[WebToken]
  }
  
  @scala.inline
  implicit class WebTokenMutableBuilder[Self <: WebToken] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setEnabledFeatures(value: js.Array[String]): Self = StObject.set(x, "enabledFeatures", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setEnabledFeaturesUndefined: Self = StObject.set(x, "enabledFeatures", js.undefined)
    
    @scala.inline
    def setEnabledFeaturesVarargs(value: String*): Self = StObject.set(x, "enabledFeatures", js.Array(value :_*))
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setParentFrameUrl(value: String): Self = StObject.set(x, "parentFrameUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setParentFrameUrlUndefined: Self = StObject.set(x, "parentFrameUrl", js.undefined)
    
    @scala.inline
    def setPermissions(value: js.Array[String]): Self = StObject.set(x, "permissions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPermissionsUndefined: Self = StObject.set(x, "permissions", js.undefined)
    
    @scala.inline
    def setPermissionsVarargs(value: String*): Self = StObject.set(x, "permissions", js.Array(value :_*))
    
    @scala.inline
    def setValue(value: String): Self = StObject.set(x, "value", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setValueUndefined: Self = StObject.set(x, "value", js.undefined)
  }
}
