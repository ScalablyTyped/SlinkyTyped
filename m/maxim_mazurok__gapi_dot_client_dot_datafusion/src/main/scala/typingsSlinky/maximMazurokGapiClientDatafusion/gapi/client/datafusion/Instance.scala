package typingsSlinky.maximMazurokGapiClientDatafusion.gapi.client.datafusion

import org.scalablytyped.runtime.TopLevel
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Instance extends StObject {
  
  /** List of accelerators enabled for this CDF instance. */
  var accelerators: js.UndefOr[js.Array[Accelerator]] = js.native
  
  /** Output only. Endpoint on which the REST APIs is accessible. */
  var apiEndpoint: js.UndefOr[String] = js.native
  
  /** Available versions that the instance can be upgraded to using UpdateInstanceRequest. */
  var availableVersion: js.UndefOr[js.Array[Version]] = js.native
  
  /** Output only. The time the instance was created. */
  var createTime: js.UndefOr[String] = js.native
  
  /**
    * User-managed service account to set on Dataproc when Cloud Data Fusion creates Dataproc to run data processing pipelines. This allows users to have fine-grained access control on
    * Dataproc's accesses to cloud resources.
    */
  var dataprocServiceAccount: js.UndefOr[String] = js.native
  
  /** A description of this instance. */
  var description: js.UndefOr[String] = js.native
  
  /** Display name for an instance. */
  var displayName: js.UndefOr[String] = js.native
  
  /** Option to enable Stackdriver Logging. */
  var enableStackdriverLogging: js.UndefOr[Boolean] = js.native
  
  /** Option to enable Stackdriver Monitoring. */
  var enableStackdriverMonitoring: js.UndefOr[Boolean] = js.native
  
  /** Output only. Cloud Storage bucket generated by Data Fusion in the customer project. */
  var gcsBucket: js.UndefOr[String] = js.native
  
  /** The resource labels for instance to use to annotate any related underlying resources such as GCE VMs. The character '=' is not allowed to be used within the labels. */
  var labels: js.UndefOr[
    /* import warning: importer.ImportType#apply c Unsupported type mapping: 
  {[ P in string ]: string}
    */ typingsSlinky.maximMazurokGapiClientDatafusion.maximMazurokGapiClientDatafusionStrings.Instance with TopLevel[js.Any]
  ] = js.native
  
  /** Output only. The name of this instance is in the form of projects/{project}/locations/{location}/instances/{instance}. */
  var name: js.UndefOr[String] = js.native
  
  /** Network configuration options. These are required when a private Data Fusion instance is to be created. */
  var networkConfig: js.UndefOr[NetworkConfig] = js.native
  
  /** Map of additional options used to configure the behavior of Data Fusion instance. */
  var options: js.UndefOr[
    /* import warning: importer.ImportType#apply c Unsupported type mapping: 
  {[ P in string ]: string}
    */ typingsSlinky.maximMazurokGapiClientDatafusion.maximMazurokGapiClientDatafusionStrings.Instance with TopLevel[js.Any]
  ] = js.native
  
  /** Output only. P4 service account for the customer project. */
  var p4ServiceAccount: js.UndefOr[String] = js.native
  
  /**
    * Specifies whether the Data Fusion instance should be private. If set to true, all Data Fusion nodes will have private IP addresses and will not be able to access the public
    * internet.
    */
  var privateInstance: js.UndefOr[Boolean] = js.native
  
  /** Output only. Deprecated. Use tenant_project_id instead to extract the tenant project ID. */
  var serviceAccount: js.UndefOr[String] = js.native
  
  /** Output only. Endpoint on which the Data Fusion UI is accessible. */
  var serviceEndpoint: js.UndefOr[String] = js.native
  
  /** Output only. The current state of this Data Fusion instance. */
  var state: js.UndefOr[String] = js.native
  
  /** Output only. Additional information about the current state of this Data Fusion instance if available. */
  var stateMessage: js.UndefOr[String] = js.native
  
  /** Output only. The name of the tenant project. */
  var tenantProjectId: js.UndefOr[String] = js.native
  
  /** Required. Instance type. */
  var `type`: js.UndefOr[String] = js.native
  
  /** Output only. The time the instance was last updated. */
  var updateTime: js.UndefOr[String] = js.native
  
  /** Current version of the Data Fusion. Only specifiable in Update. */
  var version: js.UndefOr[String] = js.native
  
  /** Name of the zone in which the Data Fusion instance will be created. Only DEVELOPER instances use this field. */
  var zone: js.UndefOr[String] = js.native
}
object Instance {
  
  @scala.inline
  def apply(): Instance = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Instance]
  }
  
  @scala.inline
  implicit class InstanceMutableBuilder[Self <: Instance] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAccelerators(value: js.Array[Accelerator]): Self = StObject.set(x, "accelerators", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAcceleratorsUndefined: Self = StObject.set(x, "accelerators", js.undefined)
    
    @scala.inline
    def setAcceleratorsVarargs(value: Accelerator*): Self = StObject.set(x, "accelerators", js.Array(value :_*))
    
    @scala.inline
    def setApiEndpoint(value: String): Self = StObject.set(x, "apiEndpoint", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setApiEndpointUndefined: Self = StObject.set(x, "apiEndpoint", js.undefined)
    
    @scala.inline
    def setAvailableVersion(value: js.Array[Version]): Self = StObject.set(x, "availableVersion", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAvailableVersionUndefined: Self = StObject.set(x, "availableVersion", js.undefined)
    
    @scala.inline
    def setAvailableVersionVarargs(value: Version*): Self = StObject.set(x, "availableVersion", js.Array(value :_*))
    
    @scala.inline
    def setCreateTime(value: String): Self = StObject.set(x, "createTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCreateTimeUndefined: Self = StObject.set(x, "createTime", js.undefined)
    
    @scala.inline
    def setDataprocServiceAccount(value: String): Self = StObject.set(x, "dataprocServiceAccount", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDataprocServiceAccountUndefined: Self = StObject.set(x, "dataprocServiceAccount", js.undefined)
    
    @scala.inline
    def setDescription(value: String): Self = StObject.set(x, "description", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDescriptionUndefined: Self = StObject.set(x, "description", js.undefined)
    
    @scala.inline
    def setDisplayName(value: String): Self = StObject.set(x, "displayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDisplayNameUndefined: Self = StObject.set(x, "displayName", js.undefined)
    
    @scala.inline
    def setEnableStackdriverLogging(value: Boolean): Self = StObject.set(x, "enableStackdriverLogging", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setEnableStackdriverLoggingUndefined: Self = StObject.set(x, "enableStackdriverLogging", js.undefined)
    
    @scala.inline
    def setEnableStackdriverMonitoring(value: Boolean): Self = StObject.set(x, "enableStackdriverMonitoring", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setEnableStackdriverMonitoringUndefined: Self = StObject.set(x, "enableStackdriverMonitoring", js.undefined)
    
    @scala.inline
    def setGcsBucket(value: String): Self = StObject.set(x, "gcsBucket", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setGcsBucketUndefined: Self = StObject.set(x, "gcsBucket", js.undefined)
    
    @scala.inline
    def setLabels(
      value: /* import warning: importer.ImportType#apply c Unsupported type mapping: 
    {[ P in string ]: string}
      */ typingsSlinky.maximMazurokGapiClientDatafusion.maximMazurokGapiClientDatafusionStrings.Instance with TopLevel[js.Any]
    ): Self = StObject.set(x, "labels", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLabelsUndefined: Self = StObject.set(x, "labels", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setNetworkConfig(value: NetworkConfig): Self = StObject.set(x, "networkConfig", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNetworkConfigUndefined: Self = StObject.set(x, "networkConfig", js.undefined)
    
    @scala.inline
    def setOptions(
      value: /* import warning: importer.ImportType#apply c Unsupported type mapping: 
    {[ P in string ]: string}
      */ typingsSlinky.maximMazurokGapiClientDatafusion.maximMazurokGapiClientDatafusionStrings.Instance with TopLevel[js.Any]
    ): Self = StObject.set(x, "options", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setOptionsUndefined: Self = StObject.set(x, "options", js.undefined)
    
    @scala.inline
    def setP4ServiceAccount(value: String): Self = StObject.set(x, "p4ServiceAccount", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setP4ServiceAccountUndefined: Self = StObject.set(x, "p4ServiceAccount", js.undefined)
    
    @scala.inline
    def setPrivateInstance(value: Boolean): Self = StObject.set(x, "privateInstance", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPrivateInstanceUndefined: Self = StObject.set(x, "privateInstance", js.undefined)
    
    @scala.inline
    def setServiceAccount(value: String): Self = StObject.set(x, "serviceAccount", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setServiceAccountUndefined: Self = StObject.set(x, "serviceAccount", js.undefined)
    
    @scala.inline
    def setServiceEndpoint(value: String): Self = StObject.set(x, "serviceEndpoint", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setServiceEndpointUndefined: Self = StObject.set(x, "serviceEndpoint", js.undefined)
    
    @scala.inline
    def setState(value: String): Self = StObject.set(x, "state", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStateMessage(value: String): Self = StObject.set(x, "stateMessage", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStateMessageUndefined: Self = StObject.set(x, "stateMessage", js.undefined)
    
    @scala.inline
    def setStateUndefined: Self = StObject.set(x, "state", js.undefined)
    
    @scala.inline
    def setTenantProjectId(value: String): Self = StObject.set(x, "tenantProjectId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTenantProjectIdUndefined: Self = StObject.set(x, "tenantProjectId", js.undefined)
    
    @scala.inline
    def setType(value: String): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
    
    @scala.inline
    def setUpdateTime(value: String): Self = StObject.set(x, "updateTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setUpdateTimeUndefined: Self = StObject.set(x, "updateTime", js.undefined)
    
    @scala.inline
    def setVersion(value: String): Self = StObject.set(x, "version", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setVersionUndefined: Self = StObject.set(x, "version", js.undefined)
    
    @scala.inline
    def setZone(value: String): Self = StObject.set(x, "zone", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setZoneUndefined: Self = StObject.set(x, "zone", js.undefined)
  }
}
