package typingsSlinky.microsoftGraph.mod.CallRecords

import typingsSlinky.microsoftGraph.mod.NullableOption
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait MediaStream extends StObject {
  
  /**
    * Average Network Mean Opinion Score degradation for stream. Represents how much the network loss and jitter has impacted
    * the quality of received audio.
    */
  var averageAudioDegradation: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * Average jitter for the stream computed as specified in [RFC 3550][], denoted in [ISO 8601][] format. For example, 1
    * second is denoted as 'PT1S', where 'P' is the duration designator, 'T' is the time designator, and 'S' is the second
    * designator.
    */
  var averageAudioNetworkJitter: js.UndefOr[NullableOption[String]] = js.native
  
  // Average estimated bandwidth available between two endpoints in bits per second.
  var averageBandwidthEstimate: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * Average jitter for the stream computed as specified in [RFC 3550][], denoted in [ISO 8601][] format. For example, 1
    * second is denoted as 'PT1S', where 'P' is the duration designator, 'T' is the time designator, and 'S' is the second
    * designator.
    */
  var averageJitter: js.UndefOr[NullableOption[String]] = js.native
  
  // Average packet loss rate for stream.
  var averagePacketLossRate: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * Ratio of the number of audio frames with samples generated by packet loss concealment to the total number of audio
    * frames.
    */
  var averageRatioOfConcealedSamples: js.UndefOr[NullableOption[Double]] = js.native
  
  // Average frames per second received for all video streams computed over the duration of the session.
  var averageReceivedFrameRate: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * Average network propagation round-trip time computed as specified in [RFC 3550][], denoted in [ISO 8601][] format. For
    * example, 1 second is denoted as 'PT1S', where 'P' is the duration designator, 'T' is the time designator, and 'S' is
    * the second designator.
    */
  var averageRoundTripTime: js.UndefOr[NullableOption[String]] = js.native
  
  // Average percentage of video frames lost as displayed to the user.
  var averageVideoFrameLossPercentage: js.UndefOr[NullableOption[Double]] = js.native
  
  // Average frames per second received for a video stream, computed over the duration of the session.
  var averageVideoFrameRate: js.UndefOr[NullableOption[Double]] = js.native
  
  // Average fraction of packets lost, as specified in [RFC 3550][], computed over the duration of the session.
  var averageVideoPacketLossRate: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * UTC time when the stream ended. The DateTimeOffset type represents date and time information using ISO 8601 format and
    * is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'
    */
  var endDateTime: js.UndefOr[NullableOption[String]] = js.native
  
  // Fraction of the call where frame rate is less than 7.5 frames per second.
  var lowFrameRateRatio: js.UndefOr[NullableOption[Double]] = js.native
  
  // Fraction of the call that the client is running less than 70% expected video processing capability.
  var lowVideoProcessingCapabilityRatio: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * Maximum of audio network jitter computed over each of the 20 second windows during the session, denoted in [ISO 8601][]
    * format. For example, 1 second is denoted as 'PT1S', where 'P' is the duration designator, 'T' is the time designator,
    * and 'S' is the second designator.
    */
  var maxAudioNetworkJitter: js.UndefOr[NullableOption[String]] = js.native
  
  /**
    * Maximum jitter for the stream computed as specified in RFC 3550, denoted in [ISO 8601][] format. For example, 1 second
    * is denoted as 'PT1S', where 'P' is the duration designator, 'T' is the time designator, and 'S' is the second
    * designator.
    */
  var maxJitter: js.UndefOr[NullableOption[String]] = js.native
  
  // Maximum packet loss rate for the stream.
  var maxPacketLossRate: js.UndefOr[NullableOption[Double]] = js.native
  
  // Maximum ratio of packets concealed by the healer.
  var maxRatioOfConcealedSamples: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * Maximum network propagation round-trip time computed as specified in [RFC 3550][], denoted in [ISO 8601][] format. For
    * example, 1 second is denoted as 'PT1S', where 'P' is the duration designator, 'T' is the time designator, and 'S' is
    * the second designator.
    */
  var maxRoundTripTime: js.UndefOr[NullableOption[String]] = js.native
  
  // Packet count for the stream.
  var packetUtilization: js.UndefOr[NullableOption[Double]] = js.native
  
  // Packet loss rate after FEC has been applied aggregated across all video streams and codecs.
  var postForwardErrorCorrectionPacketLossRate: js.UndefOr[NullableOption[Double]] = js.native
  
  /**
    * UTC time when the stream started. The DateTimeOffset type represents date and time information using ISO 8601 format
    * and is always in UTC time. For example, midnight UTC on Jan 1, 2014 would look like this: '2014-01-01T00:00:00Z'
    */
  var startDateTime: js.UndefOr[NullableOption[String]] = js.native
  
  // Indicates the direction of the media stream. Possible values are: callerToCallee, calleeToCaller.
  var streamDirection: js.UndefOr[MediaStreamDirection] = js.native
  
  // Unique identifier for the stream.
  var streamId: js.UndefOr[NullableOption[String]] = js.native
  
  /**
    * True if the media stream bypassed the Mediation Server and went straight between client and PSTN Gateway/PBX, false
    * otherwise.
    */
  var wasMediaBypassed: js.UndefOr[NullableOption[Boolean]] = js.native
}
object MediaStream {
  
  @scala.inline
  def apply(): MediaStream = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[MediaStream]
  }
  
  @scala.inline
  implicit class MediaStreamMutableBuilder[Self <: MediaStream] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAverageAudioDegradation(value: NullableOption[Double]): Self = StObject.set(x, "averageAudioDegradation", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageAudioDegradationNull: Self = StObject.set(x, "averageAudioDegradation", null)
    
    @scala.inline
    def setAverageAudioDegradationUndefined: Self = StObject.set(x, "averageAudioDegradation", js.undefined)
    
    @scala.inline
    def setAverageAudioNetworkJitter(value: NullableOption[String]): Self = StObject.set(x, "averageAudioNetworkJitter", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageAudioNetworkJitterNull: Self = StObject.set(x, "averageAudioNetworkJitter", null)
    
    @scala.inline
    def setAverageAudioNetworkJitterUndefined: Self = StObject.set(x, "averageAudioNetworkJitter", js.undefined)
    
    @scala.inline
    def setAverageBandwidthEstimate(value: NullableOption[Double]): Self = StObject.set(x, "averageBandwidthEstimate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageBandwidthEstimateNull: Self = StObject.set(x, "averageBandwidthEstimate", null)
    
    @scala.inline
    def setAverageBandwidthEstimateUndefined: Self = StObject.set(x, "averageBandwidthEstimate", js.undefined)
    
    @scala.inline
    def setAverageJitter(value: NullableOption[String]): Self = StObject.set(x, "averageJitter", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageJitterNull: Self = StObject.set(x, "averageJitter", null)
    
    @scala.inline
    def setAverageJitterUndefined: Self = StObject.set(x, "averageJitter", js.undefined)
    
    @scala.inline
    def setAveragePacketLossRate(value: NullableOption[Double]): Self = StObject.set(x, "averagePacketLossRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAveragePacketLossRateNull: Self = StObject.set(x, "averagePacketLossRate", null)
    
    @scala.inline
    def setAveragePacketLossRateUndefined: Self = StObject.set(x, "averagePacketLossRate", js.undefined)
    
    @scala.inline
    def setAverageRatioOfConcealedSamples(value: NullableOption[Double]): Self = StObject.set(x, "averageRatioOfConcealedSamples", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageRatioOfConcealedSamplesNull: Self = StObject.set(x, "averageRatioOfConcealedSamples", null)
    
    @scala.inline
    def setAverageRatioOfConcealedSamplesUndefined: Self = StObject.set(x, "averageRatioOfConcealedSamples", js.undefined)
    
    @scala.inline
    def setAverageReceivedFrameRate(value: NullableOption[Double]): Self = StObject.set(x, "averageReceivedFrameRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageReceivedFrameRateNull: Self = StObject.set(x, "averageReceivedFrameRate", null)
    
    @scala.inline
    def setAverageReceivedFrameRateUndefined: Self = StObject.set(x, "averageReceivedFrameRate", js.undefined)
    
    @scala.inline
    def setAverageRoundTripTime(value: NullableOption[String]): Self = StObject.set(x, "averageRoundTripTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageRoundTripTimeNull: Self = StObject.set(x, "averageRoundTripTime", null)
    
    @scala.inline
    def setAverageRoundTripTimeUndefined: Self = StObject.set(x, "averageRoundTripTime", js.undefined)
    
    @scala.inline
    def setAverageVideoFrameLossPercentage(value: NullableOption[Double]): Self = StObject.set(x, "averageVideoFrameLossPercentage", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageVideoFrameLossPercentageNull: Self = StObject.set(x, "averageVideoFrameLossPercentage", null)
    
    @scala.inline
    def setAverageVideoFrameLossPercentageUndefined: Self = StObject.set(x, "averageVideoFrameLossPercentage", js.undefined)
    
    @scala.inline
    def setAverageVideoFrameRate(value: NullableOption[Double]): Self = StObject.set(x, "averageVideoFrameRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageVideoFrameRateNull: Self = StObject.set(x, "averageVideoFrameRate", null)
    
    @scala.inline
    def setAverageVideoFrameRateUndefined: Self = StObject.set(x, "averageVideoFrameRate", js.undefined)
    
    @scala.inline
    def setAverageVideoPacketLossRate(value: NullableOption[Double]): Self = StObject.set(x, "averageVideoPacketLossRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAverageVideoPacketLossRateNull: Self = StObject.set(x, "averageVideoPacketLossRate", null)
    
    @scala.inline
    def setAverageVideoPacketLossRateUndefined: Self = StObject.set(x, "averageVideoPacketLossRate", js.undefined)
    
    @scala.inline
    def setEndDateTime(value: NullableOption[String]): Self = StObject.set(x, "endDateTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setEndDateTimeNull: Self = StObject.set(x, "endDateTime", null)
    
    @scala.inline
    def setEndDateTimeUndefined: Self = StObject.set(x, "endDateTime", js.undefined)
    
    @scala.inline
    def setLowFrameRateRatio(value: NullableOption[Double]): Self = StObject.set(x, "lowFrameRateRatio", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLowFrameRateRatioNull: Self = StObject.set(x, "lowFrameRateRatio", null)
    
    @scala.inline
    def setLowFrameRateRatioUndefined: Self = StObject.set(x, "lowFrameRateRatio", js.undefined)
    
    @scala.inline
    def setLowVideoProcessingCapabilityRatio(value: NullableOption[Double]): Self = StObject.set(x, "lowVideoProcessingCapabilityRatio", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLowVideoProcessingCapabilityRatioNull: Self = StObject.set(x, "lowVideoProcessingCapabilityRatio", null)
    
    @scala.inline
    def setLowVideoProcessingCapabilityRatioUndefined: Self = StObject.set(x, "lowVideoProcessingCapabilityRatio", js.undefined)
    
    @scala.inline
    def setMaxAudioNetworkJitter(value: NullableOption[String]): Self = StObject.set(x, "maxAudioNetworkJitter", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMaxAudioNetworkJitterNull: Self = StObject.set(x, "maxAudioNetworkJitter", null)
    
    @scala.inline
    def setMaxAudioNetworkJitterUndefined: Self = StObject.set(x, "maxAudioNetworkJitter", js.undefined)
    
    @scala.inline
    def setMaxJitter(value: NullableOption[String]): Self = StObject.set(x, "maxJitter", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMaxJitterNull: Self = StObject.set(x, "maxJitter", null)
    
    @scala.inline
    def setMaxJitterUndefined: Self = StObject.set(x, "maxJitter", js.undefined)
    
    @scala.inline
    def setMaxPacketLossRate(value: NullableOption[Double]): Self = StObject.set(x, "maxPacketLossRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMaxPacketLossRateNull: Self = StObject.set(x, "maxPacketLossRate", null)
    
    @scala.inline
    def setMaxPacketLossRateUndefined: Self = StObject.set(x, "maxPacketLossRate", js.undefined)
    
    @scala.inline
    def setMaxRatioOfConcealedSamples(value: NullableOption[Double]): Self = StObject.set(x, "maxRatioOfConcealedSamples", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMaxRatioOfConcealedSamplesNull: Self = StObject.set(x, "maxRatioOfConcealedSamples", null)
    
    @scala.inline
    def setMaxRatioOfConcealedSamplesUndefined: Self = StObject.set(x, "maxRatioOfConcealedSamples", js.undefined)
    
    @scala.inline
    def setMaxRoundTripTime(value: NullableOption[String]): Self = StObject.set(x, "maxRoundTripTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMaxRoundTripTimeNull: Self = StObject.set(x, "maxRoundTripTime", null)
    
    @scala.inline
    def setMaxRoundTripTimeUndefined: Self = StObject.set(x, "maxRoundTripTime", js.undefined)
    
    @scala.inline
    def setPacketUtilization(value: NullableOption[Double]): Self = StObject.set(x, "packetUtilization", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPacketUtilizationNull: Self = StObject.set(x, "packetUtilization", null)
    
    @scala.inline
    def setPacketUtilizationUndefined: Self = StObject.set(x, "packetUtilization", js.undefined)
    
    @scala.inline
    def setPostForwardErrorCorrectionPacketLossRate(value: NullableOption[Double]): Self = StObject.set(x, "postForwardErrorCorrectionPacketLossRate", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPostForwardErrorCorrectionPacketLossRateNull: Self = StObject.set(x, "postForwardErrorCorrectionPacketLossRate", null)
    
    @scala.inline
    def setPostForwardErrorCorrectionPacketLossRateUndefined: Self = StObject.set(x, "postForwardErrorCorrectionPacketLossRate", js.undefined)
    
    @scala.inline
    def setStartDateTime(value: NullableOption[String]): Self = StObject.set(x, "startDateTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStartDateTimeNull: Self = StObject.set(x, "startDateTime", null)
    
    @scala.inline
    def setStartDateTimeUndefined: Self = StObject.set(x, "startDateTime", js.undefined)
    
    @scala.inline
    def setStreamDirection(value: MediaStreamDirection): Self = StObject.set(x, "streamDirection", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStreamDirectionUndefined: Self = StObject.set(x, "streamDirection", js.undefined)
    
    @scala.inline
    def setStreamId(value: NullableOption[String]): Self = StObject.set(x, "streamId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStreamIdNull: Self = StObject.set(x, "streamId", null)
    
    @scala.inline
    def setStreamIdUndefined: Self = StObject.set(x, "streamId", js.undefined)
    
    @scala.inline
    def setWasMediaBypassed(value: NullableOption[Boolean]): Self = StObject.set(x, "wasMediaBypassed", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setWasMediaBypassedNull: Self = StObject.set(x, "wasMediaBypassed", null)
    
    @scala.inline
    def setWasMediaBypassedUndefined: Self = StObject.set(x, "wasMediaBypassed", js.undefined)
  }
}
