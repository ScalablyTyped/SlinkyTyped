package typingsSlinky.maximMazurokGapiClientDoubleclicksearch.gapi.client.doubleclicksearch

import typingsSlinky.maximMazurokGapiClientDoubleclicksearch.anon.ByteCount
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Report extends js.Object {
  
  /** Asynchronous report only. Contains a list of generated report files once the report has successfully completed. */
  var files: js.UndefOr[js.Array[ByteCount]] = js.native
  
  /** Asynchronous report only. Id of the report. */
  var id: js.UndefOr[String] = js.native
  
  /** Asynchronous report only. True if and only if the report has completed successfully and the report files are ready to be downloaded. */
  var isReportReady: js.UndefOr[Boolean] = js.native
  
  /** Identifies this as a Report resource. Value: the fixed string `doubleclicksearch#report`. */
  var kind: js.UndefOr[String] = js.native
  
  /** The request that created the report. Optional fields not specified in the original request are filled with default values. */
  var request: js.UndefOr[ReportRequest] = js.native
  
  /** The number of report rows generated by the report, not including headers. */
  var rowCount: js.UndefOr[Double] = js.native
  
  /** Synchronous report only. Generated report rows. */
  var rows: js.UndefOr[js.Array[ReportRow]] = js.native
  
  /**
    * The currency code of all monetary values produced in the report, including values that are set by users (e.g., keyword bid settings) and metrics (e.g., cost and revenue). The
    * currency code of a report is determined by the `statisticsCurrency` field of the report request.
    */
  var statisticsCurrencyCode: js.UndefOr[String] = js.native
  
  /** If all statistics of the report are sourced from the same time zone, this would be it. Otherwise the field is unset. */
  var statisticsTimeZone: js.UndefOr[String] = js.native
}
object Report {
  
  @scala.inline
  def apply(): Report = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Report]
  }
  
  @scala.inline
  implicit class ReportOps[Self <: Report] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setFilesVarargs(value: ByteCount*): Self = this.set("files", js.Array(value :_*))
    
    @scala.inline
    def setFiles(value: js.Array[ByteCount]): Self = this.set("files", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteFiles: Self = this.set("files", js.undefined)
    
    @scala.inline
    def setId(value: String): Self = this.set("id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteId: Self = this.set("id", js.undefined)
    
    @scala.inline
    def setIsReportReady(value: Boolean): Self = this.set("isReportReady", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIsReportReady: Self = this.set("isReportReady", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = this.set("kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKind: Self = this.set("kind", js.undefined)
    
    @scala.inline
    def setRequest(value: ReportRequest): Self = this.set("request", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequest: Self = this.set("request", js.undefined)
    
    @scala.inline
    def setRowCount(value: Double): Self = this.set("rowCount", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRowCount: Self = this.set("rowCount", js.undefined)
    
    @scala.inline
    def setRowsVarargs(value: ReportRow*): Self = this.set("rows", js.Array(value :_*))
    
    @scala.inline
    def setRows(value: js.Array[ReportRow]): Self = this.set("rows", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRows: Self = this.set("rows", js.undefined)
    
    @scala.inline
    def setStatisticsCurrencyCode(value: String): Self = this.set("statisticsCurrencyCode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStatisticsCurrencyCode: Self = this.set("statisticsCurrencyCode", js.undefined)
    
    @scala.inline
    def setStatisticsTimeZone(value: String): Self = this.set("statisticsTimeZone", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStatisticsTimeZone: Self = this.set("statisticsTimeZone", js.undefined)
  }
}
