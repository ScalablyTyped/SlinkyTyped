package typingsSlinky.maximMazurokGapiClientServiceusage.gapi.client.serviceusage

import org.scalablytyped.runtime.TopLevel
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait AdminQuotaPolicy extends StObject {
  
  /** The cloud resource container at which the quota policy is created. The format is {container_type}/{container_number} */
  var container: js.UndefOr[String] = js.native
  
  /**
    * If this map is nonempty, then this policy applies only to specific values for dimensions defined in the limit unit. For example, an policy on a limit with the unit
    * 1/{project}/{region} could contain an entry with the key "region" and the value "us-east-1"; the policy is only applied to quota consumed in that region. This map has the following
    * restrictions: * If "region" appears as a key, its value must be a valid Cloud region. * If "zone" appears as a key, its value must be a valid Cloud zone. * Keys other than "region"
    * or "zone" are not valid.
    */
  var dimensions: js.UndefOr[
    /* import warning: importer.ImportType#apply c Unsupported type mapping: 
  {[ P in string ]: string}
    */ typingsSlinky.maximMazurokGapiClientServiceusage.maximMazurokGapiClientServiceusageStrings.AdminQuotaPolicy with TopLevel[js.Any]
  ] = js.native
  
  /** The name of the metric to which this policy applies. An example name would be: `compute.googleapis.com/cpus` */
  var metric: js.UndefOr[String] = js.native
  
  /**
    * The resource name of the policy. This name is generated by the server when the policy is created. Example names would be:
    * `organizations/123/services/compute.googleapis.com/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion/adminQuotaPolicies/4a3f2c1d`
    */
  var name: js.UndefOr[String] = js.native
  
  /** The quota policy value. Can be any nonnegative integer, or -1 (unlimited quota). */
  var policyValue: js.UndefOr[String] = js.native
  
  /**
    * The limit unit of the limit to which this policy applies. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example;
    * the literal characters `{` and `}` occur in the string.
    */
  var unit: js.UndefOr[String] = js.native
}
object AdminQuotaPolicy {
  
  @scala.inline
  def apply(): AdminQuotaPolicy = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[AdminQuotaPolicy]
  }
  
  @scala.inline
  implicit class AdminQuotaPolicyMutableBuilder[Self <: AdminQuotaPolicy] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setContainer(value: String): Self = StObject.set(x, "container", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setContainerUndefined: Self = StObject.set(x, "container", js.undefined)
    
    @scala.inline
    def setDimensions(
      value: /* import warning: importer.ImportType#apply c Unsupported type mapping: 
    {[ P in string ]: string}
      */ typingsSlinky.maximMazurokGapiClientServiceusage.maximMazurokGapiClientServiceusageStrings.AdminQuotaPolicy with TopLevel[js.Any]
    ): Self = StObject.set(x, "dimensions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDimensionsUndefined: Self = StObject.set(x, "dimensions", js.undefined)
    
    @scala.inline
    def setMetric(value: String): Self = StObject.set(x, "metric", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMetricUndefined: Self = StObject.set(x, "metric", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setPolicyValue(value: String): Self = StObject.set(x, "policyValue", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPolicyValueUndefined: Self = StObject.set(x, "policyValue", js.undefined)
    
    @scala.inline
    def setUnit(value: String): Self = StObject.set(x, "unit", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setUnitUndefined: Self = StObject.set(x, "unit", js.undefined)
  }
}
