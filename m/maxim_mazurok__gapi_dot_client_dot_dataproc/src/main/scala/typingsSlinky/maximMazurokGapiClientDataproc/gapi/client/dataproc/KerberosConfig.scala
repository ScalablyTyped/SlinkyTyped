package typingsSlinky.maximMazurokGapiClientDataproc.gapi.client.dataproc

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait KerberosConfig extends js.Object {
  
  /** Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship. */
  var crossRealmTrustAdminServer: js.UndefOr[String] = js.native
  
  /** Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship. */
  var crossRealmTrustKdc: js.UndefOr[String] = js.native
  
  /** Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust. */
  var crossRealmTrustRealm: js.UndefOr[String] = js.native
  
  /**
    * Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust
    * relationship.
    */
  var crossRealmTrustSharedPasswordUri: js.UndefOr[String] = js.native
  
  /** Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster. */
  var enableKerberos: js.UndefOr[Boolean] = js.native
  
  /** Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database. */
  var kdcDbKeyUri: js.UndefOr[String] = js.native
  
  /** Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc. */
  var keyPasswordUri: js.UndefOr[String] = js.native
  
  /**
    * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by
    * Dataproc.
    */
  var keystorePasswordUri: js.UndefOr[String] = js.native
  
  /** Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate. */
  var keystoreUri: js.UndefOr[String] = js.native
  
  /** Optional. The uri of the KMS key used to encrypt various sensitive files. */
  var kmsKeyUri: js.UndefOr[String] = js.native
  
  /** Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm. */
  var realm: js.UndefOr[String] = js.native
  
  /** Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password. */
  var rootPrincipalPasswordUri: js.UndefOr[String] = js.native
  
  /** Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used. */
  var tgtLifetimeHours: js.UndefOr[Double] = js.native
  
  /**
    * Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by
    * Dataproc.
    */
  var truststorePasswordUri: js.UndefOr[String] = js.native
  
  /** Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate. */
  var truststoreUri: js.UndefOr[String] = js.native
}
object KerberosConfig {
  
  @scala.inline
  def apply(): KerberosConfig = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[KerberosConfig]
  }
  
  @scala.inline
  implicit class KerberosConfigOps[Self <: KerberosConfig] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setCrossRealmTrustAdminServer(value: String): Self = this.set("crossRealmTrustAdminServer", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCrossRealmTrustAdminServer: Self = this.set("crossRealmTrustAdminServer", js.undefined)
    
    @scala.inline
    def setCrossRealmTrustKdc(value: String): Self = this.set("crossRealmTrustKdc", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCrossRealmTrustKdc: Self = this.set("crossRealmTrustKdc", js.undefined)
    
    @scala.inline
    def setCrossRealmTrustRealm(value: String): Self = this.set("crossRealmTrustRealm", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCrossRealmTrustRealm: Self = this.set("crossRealmTrustRealm", js.undefined)
    
    @scala.inline
    def setCrossRealmTrustSharedPasswordUri(value: String): Self = this.set("crossRealmTrustSharedPasswordUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCrossRealmTrustSharedPasswordUri: Self = this.set("crossRealmTrustSharedPasswordUri", js.undefined)
    
    @scala.inline
    def setEnableKerberos(value: Boolean): Self = this.set("enableKerberos", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteEnableKerberos: Self = this.set("enableKerberos", js.undefined)
    
    @scala.inline
    def setKdcDbKeyUri(value: String): Self = this.set("kdcDbKeyUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKdcDbKeyUri: Self = this.set("kdcDbKeyUri", js.undefined)
    
    @scala.inline
    def setKeyPasswordUri(value: String): Self = this.set("keyPasswordUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKeyPasswordUri: Self = this.set("keyPasswordUri", js.undefined)
    
    @scala.inline
    def setKeystorePasswordUri(value: String): Self = this.set("keystorePasswordUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKeystorePasswordUri: Self = this.set("keystorePasswordUri", js.undefined)
    
    @scala.inline
    def setKeystoreUri(value: String): Self = this.set("keystoreUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKeystoreUri: Self = this.set("keystoreUri", js.undefined)
    
    @scala.inline
    def setKmsKeyUri(value: String): Self = this.set("kmsKeyUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKmsKeyUri: Self = this.set("kmsKeyUri", js.undefined)
    
    @scala.inline
    def setRealm(value: String): Self = this.set("realm", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRealm: Self = this.set("realm", js.undefined)
    
    @scala.inline
    def setRootPrincipalPasswordUri(value: String): Self = this.set("rootPrincipalPasswordUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRootPrincipalPasswordUri: Self = this.set("rootPrincipalPasswordUri", js.undefined)
    
    @scala.inline
    def setTgtLifetimeHours(value: Double): Self = this.set("tgtLifetimeHours", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTgtLifetimeHours: Self = this.set("tgtLifetimeHours", js.undefined)
    
    @scala.inline
    def setTruststorePasswordUri(value: String): Self = this.set("truststorePasswordUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTruststorePasswordUri: Self = this.set("truststorePasswordUri", js.undefined)
    
    @scala.inline
    def setTruststoreUri(value: String): Self = this.set("truststoreUri", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTruststoreUri: Self = this.set("truststoreUri", js.undefined)
  }
}
