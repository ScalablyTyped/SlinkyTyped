package typingsSlinky.maximMazurokGapiClientCompute.gapi.client.compute

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait NetworkInterface extends StObject {
  
  /**
    * An array of configurations for this interface. Currently, only one access config, ONE_TO_ONE_NAT, is supported. If there are no accessConfigs specified, then this instance will have
    * no external internet access.
    */
  var accessConfigs: js.UndefOr[js.Array[AccessConfig]] = js.native
  
  /** An array of alias IP ranges for this network interface. You can only specify this field for network interfaces in VPC networks. */
  var aliasIpRanges: js.UndefOr[js.Array[AliasIpRange]] = js.native
  
  /**
    * Fingerprint hash of contents stored in this network interface. This field will be ignored when inserting an Instance or adding a NetworkInterface. An up-to-date fingerprint must be
    * provided in order to update the NetworkInterface, otherwise the request will fail with error 412 conditionNotMet.
    */
  var fingerprint: js.UndefOr[String] = js.native
  
  /** [Output Only] An IPv6 internal network address for this network interface. */
  var ipv6Address: js.UndefOr[String] = js.native
  
  /** [Output Only] Type of the resource. Always compute#networkInterface for network interfaces. */
  var kind: js.UndefOr[String] = js.native
  
  /** [Output Only] The name of the network interface, which is generated by the server. For network devices, these are eth0, eth1, etc. */
  var name: js.UndefOr[String] = js.native
  
  /**
    * URL of the network resource for this instance. When creating an instance, if neither the network nor the subnetwork is specified, the default network global/networks/default is
    * used; if the network is not specified but the subnetwork is specified, the network is inferred.
    *
    * If you specify this property, you can specify the network as a full or partial URL. For example, the following are all valid URLs:
    * - https://www.googleapis.com/compute/v1/projects/project/global/networks/network
    * - projects/project/global/networks/network
    * - global/networks/default
    */
  var network: js.UndefOr[String] = js.native
  
  /** An IPv4 internal IP address to assign to the instance for this network interface. If not specified by the user, an unused internal IP is assigned by the system. */
  var networkIP: js.UndefOr[String] = js.native
  
  /**
    * The URL of the Subnetwork resource for this instance. If the network resource is in legacy mode, do not specify this field. If the network is in auto subnet mode, specifying the
    * subnetwork is optional. If the network is in custom subnet mode, specifying the subnetwork is required. If you specify this field, you can specify the subnetwork as a full or
    * partial URL. For example, the following are all valid URLs:
    * - https://www.googleapis.com/compute/v1/projects/project/regions/region/subnetworks/subnetwork
    * - regions/region/subnetworks/subnetwork
    */
  var subnetwork: js.UndefOr[String] = js.native
}
object NetworkInterface {
  
  @scala.inline
  def apply(): NetworkInterface = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[NetworkInterface]
  }
  
  @scala.inline
  implicit class NetworkInterfaceMutableBuilder[Self <: NetworkInterface] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAccessConfigs(value: js.Array[AccessConfig]): Self = StObject.set(x, "accessConfigs", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAccessConfigsUndefined: Self = StObject.set(x, "accessConfigs", js.undefined)
    
    @scala.inline
    def setAccessConfigsVarargs(value: AccessConfig*): Self = StObject.set(x, "accessConfigs", js.Array(value :_*))
    
    @scala.inline
    def setAliasIpRanges(value: js.Array[AliasIpRange]): Self = StObject.set(x, "aliasIpRanges", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAliasIpRangesUndefined: Self = StObject.set(x, "aliasIpRanges", js.undefined)
    
    @scala.inline
    def setAliasIpRangesVarargs(value: AliasIpRange*): Self = StObject.set(x, "aliasIpRanges", js.Array(value :_*))
    
    @scala.inline
    def setFingerprint(value: String): Self = StObject.set(x, "fingerprint", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setFingerprintUndefined: Self = StObject.set(x, "fingerprint", js.undefined)
    
    @scala.inline
    def setIpv6Address(value: String): Self = StObject.set(x, "ipv6Address", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setIpv6AddressUndefined: Self = StObject.set(x, "ipv6Address", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = StObject.set(x, "kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setKindUndefined: Self = StObject.set(x, "kind", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setNetwork(value: String): Self = StObject.set(x, "network", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNetworkIP(value: String): Self = StObject.set(x, "networkIP", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNetworkIPUndefined: Self = StObject.set(x, "networkIP", js.undefined)
    
    @scala.inline
    def setNetworkUndefined: Self = StObject.set(x, "network", js.undefined)
    
    @scala.inline
    def setSubnetwork(value: String): Self = StObject.set(x, "subnetwork", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSubnetworkUndefined: Self = StObject.set(x, "subnetwork", js.undefined)
  }
}
