package typingsSlinky.maximMazurokGapiClientWebsecurityscanner.gapi.client.websecurityscanner

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait ScanConfig extends StObject {
  
  /** The authentication configuration. If specified, service will use the authentication configuration during scanning. */
  var authentication: js.UndefOr[Authentication] = js.native
  
  /** The excluded URL patterns as described in https://cloud.google.com/security-command-center/docs/how-to-use-web-security-scanner#excluding_urls */
  var blacklistPatterns: js.UndefOr[js.Array[String]] = js.native
  
  /** Required. The user provided display name of the ScanConfig. */
  var displayName: js.UndefOr[String] = js.native
  
  /** Controls export of scan configurations and results to Security Command Center. */
  var exportToSecurityCommandCenter: js.UndefOr[String] = js.native
  
  /** Whether the scan config is managed by Web Security Scanner, output only. */
  var managedScan: js.UndefOr[Boolean] = js.native
  
  /**
    * The maximum QPS during scanning. A valid value ranges from 5 to 20 inclusively. If the field is unspecified or its value is set 0, server will default to 15. Other values outside of
    * [5, 20] range will be rejected with INVALID_ARGUMENT error.
    */
  var maxQps: js.UndefOr[Double] = js.native
  
  /** The resource name of the ScanConfig. The name follows the format of 'projects/{projectId}/scanConfigs/{scanConfigId}'. The ScanConfig IDs are generated by the system. */
  var name: js.UndefOr[String] = js.native
  
  /** The risk level selected for the scan */
  var riskLevel: js.UndefOr[String] = js.native
  
  /** The schedule of the ScanConfig. */
  var schedule: js.UndefOr[Schedule] = js.native
  
  /** Required. The starting URLs from which the scanner finds site pages. */
  var startingUrls: js.UndefOr[js.Array[String]] = js.native
  
  /** Whether the scan configuration has enabled static IP address scan feature. If enabled, the scanner will access applications from static IP addresses. */
  var staticIpScan: js.UndefOr[Boolean] = js.native
  
  /** The user agent used during scanning. */
  var userAgent: js.UndefOr[String] = js.native
}
object ScanConfig {
  
  @scala.inline
  def apply(): ScanConfig = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[ScanConfig]
  }
  
  @scala.inline
  implicit class ScanConfigMutableBuilder[Self <: ScanConfig] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAuthentication(value: Authentication): Self = StObject.set(x, "authentication", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAuthenticationUndefined: Self = StObject.set(x, "authentication", js.undefined)
    
    @scala.inline
    def setBlacklistPatterns(value: js.Array[String]): Self = StObject.set(x, "blacklistPatterns", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setBlacklistPatternsUndefined: Self = StObject.set(x, "blacklistPatterns", js.undefined)
    
    @scala.inline
    def setBlacklistPatternsVarargs(value: String*): Self = StObject.set(x, "blacklistPatterns", js.Array(value :_*))
    
    @scala.inline
    def setDisplayName(value: String): Self = StObject.set(x, "displayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDisplayNameUndefined: Self = StObject.set(x, "displayName", js.undefined)
    
    @scala.inline
    def setExportToSecurityCommandCenter(value: String): Self = StObject.set(x, "exportToSecurityCommandCenter", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setExportToSecurityCommandCenterUndefined: Self = StObject.set(x, "exportToSecurityCommandCenter", js.undefined)
    
    @scala.inline
    def setManagedScan(value: Boolean): Self = StObject.set(x, "managedScan", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setManagedScanUndefined: Self = StObject.set(x, "managedScan", js.undefined)
    
    @scala.inline
    def setMaxQps(value: Double): Self = StObject.set(x, "maxQps", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMaxQpsUndefined: Self = StObject.set(x, "maxQps", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setRiskLevel(value: String): Self = StObject.set(x, "riskLevel", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRiskLevelUndefined: Self = StObject.set(x, "riskLevel", js.undefined)
    
    @scala.inline
    def setSchedule(value: Schedule): Self = StObject.set(x, "schedule", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setScheduleUndefined: Self = StObject.set(x, "schedule", js.undefined)
    
    @scala.inline
    def setStartingUrls(value: js.Array[String]): Self = StObject.set(x, "startingUrls", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStartingUrlsUndefined: Self = StObject.set(x, "startingUrls", js.undefined)
    
    @scala.inline
    def setStartingUrlsVarargs(value: String*): Self = StObject.set(x, "startingUrls", js.Array(value :_*))
    
    @scala.inline
    def setStaticIpScan(value: Boolean): Self = StObject.set(x, "staticIpScan", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStaticIpScanUndefined: Self = StObject.set(x, "staticIpScan", js.undefined)
    
    @scala.inline
    def setUserAgent(value: String): Self = StObject.set(x, "userAgent", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setUserAgentUndefined: Self = StObject.set(x, "userAgent", js.undefined)
  }
}
