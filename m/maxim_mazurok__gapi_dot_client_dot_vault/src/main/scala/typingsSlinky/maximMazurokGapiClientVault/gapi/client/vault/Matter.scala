package typingsSlinky.maximMazurokGapiClientVault.gapi.client.vault

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Matter extends StObject {
  
  /** The description of the matter. */
  var description: js.UndefOr[String] = js.native
  
  /** The matter ID which is generated by the server. Should be blank when creating a new matter. */
  var matterId: js.UndefOr[String] = js.native
  
  /** List of users and access to the matter. Currently there is no programmer defined limit on the number of permissions a matter can have. */
  var matterPermissions: js.UndefOr[js.Array[MatterPermission]] = js.native
  
  /** The name of the matter. */
  var name: js.UndefOr[String] = js.native
  
  /** The state of the matter. */
  var state: js.UndefOr[String] = js.native
}
object Matter {
  
  @scala.inline
  def apply(): Matter = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Matter]
  }
  
  @scala.inline
  implicit class MatterMutableBuilder[Self <: Matter] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setDescription(value: String): Self = StObject.set(x, "description", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDescriptionUndefined: Self = StObject.set(x, "description", js.undefined)
    
    @scala.inline
    def setMatterId(value: String): Self = StObject.set(x, "matterId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMatterIdUndefined: Self = StObject.set(x, "matterId", js.undefined)
    
    @scala.inline
    def setMatterPermissions(value: js.Array[MatterPermission]): Self = StObject.set(x, "matterPermissions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMatterPermissionsUndefined: Self = StObject.set(x, "matterPermissions", js.undefined)
    
    @scala.inline
    def setMatterPermissionsVarargs(value: MatterPermission*): Self = StObject.set(x, "matterPermissions", js.Array(value :_*))
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setState(value: String): Self = StObject.set(x, "state", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStateUndefined: Self = StObject.set(x, "state", js.undefined)
  }
}
