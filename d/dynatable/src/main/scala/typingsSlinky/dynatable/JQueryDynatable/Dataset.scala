package typingsSlinky.dynatable.JQueryDynatable

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Dataset extends StObject {
  
  /**
    * Enable the `ajax` mode
    *
    * @default false
    */
  var ajax: js.UndefOr[Boolean] = js.native
  
  /**
    * Defining the `cache` setting for the jQuery's ajax call...
    * true or false for dataType 'script' and 'jsonp'
    *
    * @default null
    * @see http://api.jquery.com/jQuery.ajax
    */
  var ajaxCache: js.UndefOr[Boolean] = js.native
  
  /**
    * The type of data that you're expecting back from the server.
    * If none is specified, jQuery will try to infer it based on the MIME type of the response...
    *
    * @enum('xml', 'html', 'script', 'json', 'jsonp', 'text')
    * @default 'json'
    * @see http://api.jquery.com/jQuery.ajax
    */
  var ajaxDataType: js.UndefOr[String] = js.native
  
  /**
    * Defining the `method` setting for the jQuery's ajax call...
    * The HTTP method to use for the request (e.g. "POST", "GET", "PUT").
    *
    * @enum('GET', 'POST')
    * @default 'GET'
    * @todo Check if other methods could be used... ('GET', 'PUT', 'HEAD', 'POST', 'PATCH', 'TRACE', 'DELETE', 'CONNECT', 'OPTIONS', 'IS_AWARE', 'IS_EAGER', 'PROPFIND', 'IS_OPTIONAL', 'IS_REQUIRED', 'IS_CONSTRUCTOR', 'IS_INSTANTIATOR')
    */
  var ajaxMethod: js.UndefOr[String] = js.native
  
  /**
    * Send the ajax request automatically
    *
    * @default false
    */
  var ajaxOnLoad: js.UndefOr[Boolean] = js.native
  
  /**
    * A string containing the URL to which the request is sent.
    *
    * @default null
    */
  var ajaxUrl: js.UndefOr[String] = js.native
  
  /**
    * The page represented in the for the current dataset
    *
    * @default null
    */
  var page: js.UndefOr[Double] = js.native
  
  /**
    * The default number of items loaded per page
    *
    * @default 10
    */
  var perPageDefault: js.UndefOr[Double] = js.native
  
  /**
    * The default options available in the perPage menu built by dynatable
    *
    * @default [10,20,50,100]
    */
  var perPageOptions: js.UndefOr[js.Array[Double]] = js.native
  
  /**
    * Object describing the current request's filtering
    *
    * @default {}
    */
  var queries: js.UndefOr[js.Object] = js.native
  
  /**
    * Name of the property in the dataset that contains the total number of records for the current query
    *
    * @default null
    */
  var queryRecordCount: js.UndefOr[String] = js.native
  
  /**
    * The core data (generated or loaded by dynatable)
    *
    * @default null
    */
  var records: js.UndefOr[js.Any] = js.native
  
  /**
    * The sorting types (generated by dynatable)
    * It will hosts the type of object to sort (string, number, etc.)
    *
    * @default {}
    */
  var sortTypes: js.UndefOr[js.Object] = js.native
  
  /**
    * Object describing the current request's sorting
    *
    * @default {}
    */
  var sorts: js.UndefOr[js.Object] = js.native
  
  /**
    * The sorting keys (generated by dynatable)
    *
    * @default null
    */
  var sortsKeys: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * Name of the property in the dataset that contains the total number of records
    *
    * @default null
    */
  var totalRecordCount: js.UndefOr[String] = js.native
}
object Dataset {
  
  @scala.inline
  def apply(): Dataset = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Dataset]
  }
  
  @scala.inline
  implicit class DatasetMutableBuilder[Self <: Dataset] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAjax(value: Boolean): Self = StObject.set(x, "ajax", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAjaxCache(value: Boolean): Self = StObject.set(x, "ajaxCache", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAjaxCacheUndefined: Self = StObject.set(x, "ajaxCache", js.undefined)
    
    @scala.inline
    def setAjaxDataType(value: String): Self = StObject.set(x, "ajaxDataType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAjaxDataTypeUndefined: Self = StObject.set(x, "ajaxDataType", js.undefined)
    
    @scala.inline
    def setAjaxMethod(value: String): Self = StObject.set(x, "ajaxMethod", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAjaxMethodUndefined: Self = StObject.set(x, "ajaxMethod", js.undefined)
    
    @scala.inline
    def setAjaxOnLoad(value: Boolean): Self = StObject.set(x, "ajaxOnLoad", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAjaxOnLoadUndefined: Self = StObject.set(x, "ajaxOnLoad", js.undefined)
    
    @scala.inline
    def setAjaxUndefined: Self = StObject.set(x, "ajax", js.undefined)
    
    @scala.inline
    def setAjaxUrl(value: String): Self = StObject.set(x, "ajaxUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAjaxUrlUndefined: Self = StObject.set(x, "ajaxUrl", js.undefined)
    
    @scala.inline
    def setPage(value: Double): Self = StObject.set(x, "page", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPageUndefined: Self = StObject.set(x, "page", js.undefined)
    
    @scala.inline
    def setPerPageDefault(value: Double): Self = StObject.set(x, "perPageDefault", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPerPageDefaultUndefined: Self = StObject.set(x, "perPageDefault", js.undefined)
    
    @scala.inline
    def setPerPageOptions(value: js.Array[Double]): Self = StObject.set(x, "perPageOptions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPerPageOptionsUndefined: Self = StObject.set(x, "perPageOptions", js.undefined)
    
    @scala.inline
    def setPerPageOptionsVarargs(value: Double*): Self = StObject.set(x, "perPageOptions", js.Array(value :_*))
    
    @scala.inline
    def setQueries(value: js.Object): Self = StObject.set(x, "queries", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setQueriesUndefined: Self = StObject.set(x, "queries", js.undefined)
    
    @scala.inline
    def setQueryRecordCount(value: String): Self = StObject.set(x, "queryRecordCount", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setQueryRecordCountUndefined: Self = StObject.set(x, "queryRecordCount", js.undefined)
    
    @scala.inline
    def setRecords(value: js.Any): Self = StObject.set(x, "records", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRecordsUndefined: Self = StObject.set(x, "records", js.undefined)
    
    @scala.inline
    def setSortTypes(value: js.Object): Self = StObject.set(x, "sortTypes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSortTypesUndefined: Self = StObject.set(x, "sortTypes", js.undefined)
    
    @scala.inline
    def setSorts(value: js.Object): Self = StObject.set(x, "sorts", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSortsKeys(value: js.Array[String]): Self = StObject.set(x, "sortsKeys", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSortsKeysUndefined: Self = StObject.set(x, "sortsKeys", js.undefined)
    
    @scala.inline
    def setSortsKeysVarargs(value: String*): Self = StObject.set(x, "sortsKeys", js.Array(value :_*))
    
    @scala.inline
    def setSortsUndefined: Self = StObject.set(x, "sorts", js.undefined)
    
    @scala.inline
    def setTotalRecordCount(value: String): Self = StObject.set(x, "totalRecordCount", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTotalRecordCountUndefined: Self = StObject.set(x, "totalRecordCount", js.undefined)
  }
}
