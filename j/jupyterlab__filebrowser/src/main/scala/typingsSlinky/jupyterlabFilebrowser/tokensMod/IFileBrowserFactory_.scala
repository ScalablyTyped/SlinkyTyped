package typingsSlinky.jupyterlabFilebrowser.tokensMod

import typingsSlinky.jupyterlabApputils.mod.WidgetTracker
import typingsSlinky.jupyterlabFilebrowser.browserMod.FileBrowser
import typingsSlinky.jupyterlabFilebrowser.tokensMod.IFileBrowserFactory.IOptions
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait IFileBrowserFactory_ extends js.Object {
  
  /**
    * Create a new file browser instance.
    *
    * @param id - The widget/DOM id of the file browser.
    *
    * @param options - The optional file browser configuration object.
    *
    * #### Notes
    * The ID parameter is used to set the widget ID. It is also used as part of
    * the unique key necessary to store the file browser's restoration data in
    * the state database if that functionality is enabled.
    *
    * If, after the file browser has been generated by the factory, the ID of the
    * resulting widget is changed by client code, the restoration functionality
    * will not be disrupted as long as there are no ID collisions, i.e., as long
    * as the initial ID passed into the factory is used for only one file browser
    * instance.
    */
  def createFileBrowser(id: String): FileBrowser = js.native
  def createFileBrowser(id: String, options: IOptions): FileBrowser = js.native
  
  /**
    * The default file browser for the application.
    */
  var defaultBrowser: FileBrowser = js.native
  
  /**
    * The widget tracker used by the factory to track file browsers.
    */
  val tracker: WidgetTracker[FileBrowser] = js.native
}
