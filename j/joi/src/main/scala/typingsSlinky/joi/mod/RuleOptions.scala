package typingsSlinky.joi.mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait RuleOptions extends StObject {
  
  /**
    * if true, the rules will not be replaced by the same unique rule later.
    *
    * For example, `Joi.number().min(1).rule({ keep: true }).min(2)` will keep both `min()` rules instead of the later rule overriding the first.
    *
    * @default false
    */
  var keep: js.UndefOr[Boolean] = js.native
  
  /**
    * a single message string or a messages object where each key is an error code and corresponding message string as value.
    *
    * The object is the same as the messages used as an option in `any.validate()`.
    * The strings can be plain messages or a message template.
    */
  var message: js.UndefOr[String | LanguageMessages] = js.native
  
  /**
    * if true, turns any error generated by the ruleset to warnings.
    */
  var warn: js.UndefOr[Boolean] = js.native
}
object RuleOptions {
  
  @scala.inline
  def apply(): RuleOptions = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[RuleOptions]
  }
  
  @scala.inline
  implicit class RuleOptionsMutableBuilder[Self <: RuleOptions] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setKeep(value: Boolean): Self = StObject.set(x, "keep", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setKeepUndefined: Self = StObject.set(x, "keep", js.undefined)
    
    @scala.inline
    def setMessage(value: String | LanguageMessages): Self = StObject.set(x, "message", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMessageUndefined: Self = StObject.set(x, "message", js.undefined)
    
    @scala.inline
    def setWarn(value: Boolean): Self = StObject.set(x, "warn", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setWarnUndefined: Self = StObject.set(x, "warn", js.undefined)
  }
}
