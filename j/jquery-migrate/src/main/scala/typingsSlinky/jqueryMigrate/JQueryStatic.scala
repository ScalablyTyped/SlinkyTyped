package typingsSlinky.jqueryMigrate

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait JQueryStatic extends js.Object {
  
  /**
    * If you want to upgrade to jQuery 3.5.0 or newer and don't have time to deal with breaking changes at the moment
    * and you use jQuery Migrate 3.2.0 or newer, you can revert to the previous behavior.
    * @see {@link https://jquery.com/upgrade-guide/3.5/}
    */
  def UNSAFE_restoreLegacyHtmlPrefilter(): Unit = js.native
  
  /**
    * By default, Migrate only gives a specific warning once.
    * If you set this property to false it will give a warning for every occurrence each time it happens.
    * Note that this can generate a lot of output, for example when a warning occurs in a loop.
    * @default true
    */
  var migrateDeduplicateWarnings: js.UndefOr[Boolean] = js.native
  
  /**
    * Set this property to `true` to prevent console warnings from being generated in the development version.\
    * The `jQuery.migrateWarnings` array is still maintained when this property is set,
    * which allows programmatic inspection without console output
    * @default false
    */
  var migrateMute: Boolean = js.native
  
  /**
    * This method clears the `jQuery.migrateWarnings` array and "forgets" the list of messages
    * that have been seen already.
    */
  def migrateReset(): Unit = js.native
  
  /**
    * Set this property to `false` if you want warnings
    * but do not want stack traces to appear on the console.
    * @default true
    */
  var migrateTrace: Boolean = js.native
  
  /**
    * Indicates the version of Migrate in use
    */
  val migrateVersion: String = js.native
  
  /**
    * An array of string warning messages that have been generated by the code on the page,
    * in the order they were generated. Messages appear in the array only once,
    * even if the condition has occurred multiple times, unless jQuery.migrateReset() is called
    * @default []
    */
  var migrateWarnings: js.Array[String] = js.native
}
object JQueryStatic {
  
  @scala.inline
  def apply(
    UNSAFE_restoreLegacyHtmlPrefilter: () => Unit,
    migrateMute: Boolean,
    migrateReset: () => Unit,
    migrateTrace: Boolean,
    migrateVersion: String,
    migrateWarnings: js.Array[String]
  ): JQueryStatic = {
    val __obj = js.Dynamic.literal(UNSAFE_restoreLegacyHtmlPrefilter = js.Any.fromFunction0(UNSAFE_restoreLegacyHtmlPrefilter), migrateMute = migrateMute.asInstanceOf[js.Any], migrateReset = js.Any.fromFunction0(migrateReset), migrateTrace = migrateTrace.asInstanceOf[js.Any], migrateVersion = migrateVersion.asInstanceOf[js.Any], migrateWarnings = migrateWarnings.asInstanceOf[js.Any])
    __obj.asInstanceOf[JQueryStatic]
  }
  
  @scala.inline
  implicit class JQueryStaticOps[Self <: JQueryStatic] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setUNSAFE_restoreLegacyHtmlPrefilter(value: () => Unit): Self = this.set("UNSAFE_restoreLegacyHtmlPrefilter", js.Any.fromFunction0(value))
    
    @scala.inline
    def setMigrateMute(value: Boolean): Self = this.set("migrateMute", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMigrateReset(value: () => Unit): Self = this.set("migrateReset", js.Any.fromFunction0(value))
    
    @scala.inline
    def setMigrateTrace(value: Boolean): Self = this.set("migrateTrace", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMigrateVersion(value: String): Self = this.set("migrateVersion", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMigrateWarningsVarargs(value: String*): Self = this.set("migrateWarnings", js.Array(value :_*))
    
    @scala.inline
    def setMigrateWarnings(value: js.Array[String]): Self = this.set("migrateWarnings", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMigrateDeduplicateWarnings(value: Boolean): Self = this.set("migrateDeduplicateWarnings", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMigrateDeduplicateWarnings: Self = this.set("migrateDeduplicateWarnings", js.undefined)
  }
}
