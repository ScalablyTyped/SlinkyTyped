package typingsSlinky.winrtUwp.global.Windows.ApplicationModel

import typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.FulfillmentResult
import typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature
import typingsSlinky.winrtUwp.Windows.Foundation.Collections.IIterable
import typingsSlinky.winrtUwp.Windows.Foundation.Collections.IVectorView
import typingsSlinky.winrtUwp.Windows.Foundation.IPromiseWithIAsyncAction
import typingsSlinky.winrtUwp.Windows.Foundation.IPromiseWithIAsyncOperation
import typingsSlinky.winrtUwp.Windows.Foundation.Uri
import typingsSlinky.winrtUwp.Windows.Storage.StorageFile
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/** Provides types and members for interacting with the Windows Store. You can use the members of this class to check the license state of the app and determine if it's a trial version or an active license. You can also check in-app features and enable in-app product purchases. This class also allows you to simulate these functions before you submit the app to the Windows Store. */
object Store {
  
  /** Defines methods and properties you can use to get license and listing info about the current app and perform in-app product purchases. */
  @JSGlobal("Windows.ApplicationModel.Store.CurrentApp")
  @js.native
  abstract class CurrentApp ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.CurrentApp
  object CurrentApp {
    
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp")
    @js.native
    val ^ : js.Any = js.native
    
    /** Gets the GUID generated by the Windows Store when your app has been certified for listing in the Windows Store. */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.appId")
    @js.native
    def appId: String = js.native
    @scala.inline
    def appId_=(x: String): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("appId")(x.asInstanceOf[js.Any])
    
    /**
      * Retrieves the promotion campaign ID for the current app.
      * @return The advertising campaign ID for your app.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.getAppPurchaseCampaignIdAsync")
    @js.native
    def getAppPurchaseCampaignIdAsync(): IPromiseWithIAsyncOperation[String] = js.native
    
    /**
      * Requests all receipts for the purchase of the app and any in-app products. For examples of how receipt information can be used, see Using receipts to verify product purchases.
      * @return An XML-formatted string that contains all receipt information for the purchase of the app and any in-app products.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.getAppReceiptAsync")
    @js.native
    def getAppReceiptAsync(): IPromiseWithIAsyncOperation[String] = js.native
    
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.getCustomerCollectionsIdAsync")
    @js.native
    def getCustomerCollectionsIdAsync: js.Any = js.native
    @scala.inline
    def getCustomerCollectionsIdAsync_=(x: js.Any): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("getCustomerCollectionsIdAsync")(x.asInstanceOf[js.Any])
    
    /* unmapped type */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.getCustomerPurchaseIdAsync")
    @js.native
    def getCustomerPurchaseIdAsync: js.Any = js.native
    @scala.inline
    def getCustomerPurchaseIdAsync_=(x: js.Any): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("getCustomerPurchaseIdAsync")(x.asInstanceOf[js.Any])
    
    /* unmapped type */
    /**
      * Requests the receipt for the productId specified. For examples of how receipt information can be used, see Using receipts to verify product purchases.
      * @param productId The unique identifier for the product that you specified this identifier when you submitted the app to the Windows Store
      * @return An XML-formatted string that contains the receipt for the specified productId.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.getProductReceiptAsync")
    @js.native
    def getProductReceiptAsync(productId: String): IPromiseWithIAsyncOperation[String] = js.native
    
    /**
      * Returns a list of purchased consumable in-app products that have not been reported to the Windows Store as fulfilled.
      * @return When the operation completes, a list of consumable in-app products not yet reported as fulfilled is returned ( UnfulfilledConsumable objects). Each item of this list provides the product ID, offer ID, and transaction ID associated with a product.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.getUnfulfilledConsumablesAsync")
    @js.native
    def getUnfulfilledConsumablesAsync(): IPromiseWithIAsyncOperation[IVectorView[_]] = js.native
    
    /** Gets the license metadata for the current app. */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.licenseInformation")
    @js.native
    def licenseInformation: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.LicenseInformation = js.native
    @scala.inline
    def licenseInformation_=(x: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.LicenseInformation): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("licenseInformation")(x.asInstanceOf[js.Any])
    
    /** Gets the Uniform Resource Identifier (URI) of the app's listing page in the web catalog of the Windows Store. */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.linkUri")
    @js.native
    def linkUri: Uri = js.native
    @scala.inline
    def linkUri_=(x: Uri): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("linkUri")(x.asInstanceOf[js.Any])
    
    /**
      * Loads the app's listing information asynchronously. Implements the IAsyncInfo interface.
      * @return The apps' listing information. If the method fails, it returns an HRESULT error code.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.loadListingInformationAsync")
    @js.native
    def loadListingInformationAsync(): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ListingInformation] = js.native
    
    /**
      * Windows Phone only. Loads the app listing information asynchronously, returning features and products in the ProductListings collection that match all supplied keywords. Implements the IAsyncInfo interface.
      * @param keywords The list of keywords by which to filter the ProductListings collection that is returned in the ListingInformation object.
      * @return The app's listing information, with ProductListings collection filtered by keywords. If the method fails, it returns an HRESULT error code. If no products or features are found that match all of the given keywords, the ProductListings collection will be empty.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.loadListingInformationByKeywordsAsync")
    @js.native
    def loadListingInformationByKeywordsAsync(keywords: IIterable[String]): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ListingInformation] = js.native
    
    /**
      * Windows Phone only. Loads the app listing information asynchronously, returning features and products in the ProductListings collection that match any of the given products IDs. Implements the IAsyncInfo interface.
      * @param productIds The list of product IDs by which to filter the ProductListings collection.
      * @return The app's listing information, with ProductListings collection filtered by product IDs. If the method fails, it returns an HRESULT error code. If no products or features are found that match the given product IDs, the ProductListings collection will be empty.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.loadListingInformationByProductIdsAsync")
    @js.native
    def loadListingInformationByProductIdsAsync(productIds: IIterable[String]): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ListingInformation] = js.native
    
    /**
      * Notifies the Windows Store that the purchase of a consumable is fulfilled and that the user has the right to access the content.
      * @param productId Identifies the consumable.
      * @param transactionId Identifies a transaction that includes the purchase of the consumable ( productId).
      * @return A value that indicates the status of fulfillment for a consumable in-app product. Possible values are defined by the FulfillmentResult enumeration.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.reportConsumableFulfillmentAsync")
    @js.native
    def reportConsumableFulfillmentAsync(productId: String, transactionId: String): IPromiseWithIAsyncOperation[FulfillmentResult] = js.native
    
    /**
      * Notifies the Windows Store that the application has fulfilled the in-app product. This product cannot be re-purchased until the app has confirmed fulfillment using this method.
      * @param productId The ID of the product that has been delivered to the user.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.reportProductFulfillment")
    @js.native
    def reportProductFulfillment(productId: String): Unit = js.native
    
    /**
      * Requests the purchase of a full app license.
      * @param includeReceipt Determines if this method should return the receipts for this app.
      * @return If the includeReceipt parameter is set to true, this string contains XML that represents all receipts for the app and any in-app purchases. If includeReceipt is set to false, this string is empty.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.requestAppPurchaseAsync")
    @js.native
    def requestAppPurchaseAsync(includeReceipt: Boolean): IPromiseWithIAsyncOperation[String] = js.native
    
    /**
      * Requests the purchase of an in-app product. Additionally, calling this method displays the UI that is used to complete the transaction via the Windows Store.
      * @param productId Specifies the id of the in-app product.
      * @return The results of the in-app product purchase request.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.requestProductPurchaseAsync")
    @js.native
    def requestProductPurchaseAsync(productId: String): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.PurchaseResults] = js.native
    /**
      * Requests the purchase of an in-app product. Additionally, calling this method displays the UI that is used to complete the transaction via the Windows Store.
      * @param productId Specifies the id of the in-app product.
      * @param includeReceipt Determines if the method should return the receipts for the specified productId.
      * @return A string providing in-app transaction details for the provided productId. If includeReceipt is set true, the returned string will include a full receipt xml.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.requestProductPurchaseAsync")
    @js.native
    def requestProductPurchaseAsync(productId: String, includeReceipt: Boolean): IPromiseWithIAsyncOperation[String] = js.native
    /**
      * Requests the purchase of an in-app product. Additionally, calling this method displays the UI that is used to complete the transaction via the Windows Store.
      * @param productId Specifies the id of the in-app product.
      * @param offerId The specific in-app feature or content within the large purchase catalog represented on the Windows Store by the productId. This value correlates with the content your app is responsible for fulfilling. The Windows Store only uses this value to itemize the PurchaseResults .
      * @param displayProperties The name of the app feature or content offer that is displayed to the user at time of purchase.
      * @return The results of the in-app product purchase request.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentApp.requestProductPurchaseAsync")
    @js.native
    def requestProductPurchaseAsync(
      productId: String,
      offerId: String,
      displayProperties: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties
    ): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.PurchaseResults] = js.native
  }
  
  /** Defines methods and properties used to instantiate an object that you can use to get simulated license info during testing. */
  @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator")
  @js.native
  abstract class CurrentAppSimulator ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.CurrentAppSimulator
  object CurrentAppSimulator {
    
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator")
    @js.native
    val ^ : js.Any = js.native
    
    /** Gets a simulated app ID. Since CurrentAppSimulator is intended only for testing during app development, the returned CurrentAppSimulator.AppId will contain only 0's. */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.appId")
    @js.native
    def appId: String = js.native
    @scala.inline
    def appId_=(x: String): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("appId")(x.asInstanceOf[js.Any])
    
    /**
      * Retrieves the promotion campaign ID for the current app.
      * @return The advertising campaign ID for your app.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.getAppPurchaseCampaignIdAsync")
    @js.native
    def getAppPurchaseCampaignIdAsync(): IPromiseWithIAsyncOperation[String] = js.native
    
    /**
      * Creates the async operation that the user can use to simulate requesting all receipts for this app and any in-app product purchases. For examples of how receipt information can be used, see Using receipts to verify product purchases.
      * @return An XML-formatted string that contains all receipts for this app and any in-app product purchases.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.getAppReceiptAsync")
    @js.native
    def getAppReceiptAsync(): IPromiseWithIAsyncOperation[String] = js.native
    
    /**
      * Creates the async operation that the user can use to simulate requesting the receipt for the specified productId. For examples of how receipt information can be used, see Using receipts to verify product purchases.
      * @param productId The unique identifier for the product. This ID is that was specified when the product was submitted for the app to the Store.
      * @return An XML-formatted string that contains the receipt for the specified productId.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.getProductReceiptAsync")
    @js.native
    def getProductReceiptAsync(productId: String): IPromiseWithIAsyncOperation[String] = js.native
    
    /**
      * Returns a list of purchased consumable in-app products that have not been fulfilled locally.
      * @return When the operation completes, a list of unfulfilled consumable in-app products ( UnfulfilledConsumable objects) is returned. Each item in this list provides the product ID, offer ID, and transaction ID associated with a product.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.getUnfulfilledConsumablesAsync")
    @js.native
    def getUnfulfilledConsumablesAsync(): IPromiseWithIAsyncOperation[IVectorView[_]] = js.native
    
    /** Gets the simulated license metadata for the current app as provided by the simulation. */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.licenseInformation")
    @js.native
    def licenseInformation: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.LicenseInformation = js.native
    @scala.inline
    def licenseInformation_=(x: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.LicenseInformation): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("licenseInformation")(x.asInstanceOf[js.Any])
    
    /** Gets the simulated Uniform Resource Identifier (URI) that represents a Windows Store listing page for the current app. */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.linkUri")
    @js.native
    def linkUri: Uri = js.native
    @scala.inline
    def linkUri_=(x: Uri): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("linkUri")(x.asInstanceOf[js.Any])
    
    /**
      * Loads the simulated app listing information asynchronously. Implements the IAsyncInfo interface.
      * @return The app listing information as defined by the simulation. If the method fails, it returns an HRESULT error code.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.loadListingInformationAsync")
    @js.native
    def loadListingInformationAsync(): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ListingInformation] = js.native
    
    /**
      * Windows Phone only. Loads the simulated app listing information asynchronously, returning in-app products in the ProductListings collection that match all supplied keywords. Implements the IAsyncInfo interface.
      * @param keywords The list of keywords by which to filter the ProductListings collection that is returned in the ListingInformation object.
      * @return The simulated app listing information, with ProductListings collection filtered by keywords. If the method fails, it returns an HRESULT error code. If no in-app products are found that match all of the given keywords, the ProductListings collection will be empty.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.loadListingInformationByKeywordsAsync")
    @js.native
    def loadListingInformationByKeywordsAsync(keywords: IIterable[String]): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ListingInformation] = js.native
    
    /**
      * Windows Phone only. Loads the simulated app listing information asynchronously, returning available in-app products in the ProductListings collection that match any of the given products IDs. This method implements the IAsyncInfo interface.
      * @param productIds The list of product IDs by which to filter the ProductListings collection.
      * @return The simulated app listing information, with ProductListings collection filtered by product IDs. If the method fails, it returns an HRESULT error code. If no in-app products are found that match the given product IDs, the ProductListings collection will be empty.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.loadListingInformationByProductIdsAsync")
    @js.native
    def loadListingInformationByProductIdsAsync(productIds: IIterable[String]): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ListingInformation] = js.native
    
    /**
      * Reloads the simulator using a StorageFile containing the WindowsStoreProxy.xml file.
      * @param simulatorSettingsFile The WindowsStoreProxy.xml file that the simulator uses. For more information, see CurrentAppSimulator .
      * @return The async operation that reloads the simulator.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.reloadSimulatorAsync")
    @js.native
    def reloadSimulatorAsync(simulatorSettingsFile: StorageFile): IPromiseWithIAsyncAction = js.native
    
    /**
      * Simulates notifying the Windows Store that the purchase of a consumable in-app product is fulfilled and that the user has the right to access the content.
      * @param productId Identifies the consumable in-app product.
      * @param transactionId Identifies a simulated transaction that includes the purchase of the consumable in-app product ( productId).
      * @return A value that indicates the status of fulfillment for a simulated consumable in-app product purchase.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.reportConsumableFulfillmentAsync")
    @js.native
    def reportConsumableFulfillmentAsync(productId: String, transactionId: String): IPromiseWithIAsyncOperation[FulfillmentResult] = js.native
    
    /**
      * Creates the async operation that simulates a user request to buy a full license for the current app.
      * @param includeReceipt Determines if the method should return the receipts for this app.
      * @return If the includeReceipt parameter is set to true, this string contains XML that represents all receipts for the app and any in-app product purchases. If includeReceipt is set to false, this string is empty.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.requestAppPurchaseAsync")
    @js.native
    def requestAppPurchaseAsync(includeReceipt: Boolean): IPromiseWithIAsyncOperation[String] = js.native
    
    /**
      * Creates the async operation that displays the UI that is used to simulate the purchase of in-app product from the Windows Store.
      * @param productId Specifies the id, as defined by the simulation, of the in-app product to buy.
      * @return A PurchaseResults object containing transaction details for the provided productId.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.requestProductPurchaseAsync")
    @js.native
    def requestProductPurchaseAsync(productId: String): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.PurchaseResults] = js.native
    /**
      * Creates the async operation that displays the UI that is used to simulate the purchase of an in-app product from the Windows Store.
      * @param productId Specifies the id, as defined by the simulation, of the in-app product to buy.
      * @param includeReceipt Determines if the method should return the receipts for the specified productId.
      * @return A string providing in-app product purchase details for the provided productId. If includeReceipt is set true, the returned string will include a full receipt xml.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.requestProductPurchaseAsync")
    @js.native
    def requestProductPurchaseAsync(productId: String, includeReceipt: Boolean): IPromiseWithIAsyncOperation[String] = js.native
    /**
      * Creates the async operation that displays the UI that is used to simulate the purchase of an in-app product from the Windows Store.
      * @param productId The product ID used for listing in the Windows Store.
      * @param offerId The specific in-app product within the large purchase catalog represented on the Windows Store by the productId. This value correlates with the content your app is responsible for fulfilling. The Windows Store only uses this parameter value to itemize the PurchaseResults .
      * @param displayProperties The name of the in-app product that is displayed to the user at time of purchase.
      * @return The results of the in-app product purchase.
      */
    /* static member */
    @JSGlobal("Windows.ApplicationModel.Store.CurrentAppSimulator.requestProductPurchaseAsync")
    @js.native
    def requestProductPurchaseAsync(
      productId: String,
      offerId: String,
      displayProperties: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties
    ): IPromiseWithIAsyncOperation[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.PurchaseResults] = js.native
  }
  
  /** Defines values used to indicate fulfillment status for a consumable in-app product. */
  @JSGlobal("Windows.ApplicationModel.Store.FulfillmentResult")
  @js.native
  object FulfillmentResult extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.FulfillmentResult with Double
      ] = js.native
    
    /* 1 */ val nothingToFulfill: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.FulfillmentResult.nothingToFulfill with Double = js.native
    
    /* 2 */ val purchasePending: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.FulfillmentResult.purchasePending with Double = js.native
    
    /* 3 */ val purchaseReverted: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.FulfillmentResult.purchaseReverted with Double = js.native
    
    /* 4 */ val serverError: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.FulfillmentResult.serverError with Double = js.native
    
    /* 0 */ val succeeded: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.FulfillmentResult.succeeded with Double = js.native
  }
  
  /** Provides access to the current app's license metadata. */
  @JSGlobal("Windows.ApplicationModel.Store.LicenseInformation")
  @js.native
  abstract class LicenseInformation ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.LicenseInformation
  
  /** Provides the listing info that describes the app in the Windows Store. */
  @JSGlobal("Windows.ApplicationModel.Store.ListingInformation")
  @js.native
  abstract class ListingInformation ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ListingInformation
  
  /** Provides the following APIs that are currently accessible only via restricted or private capabilities. */
  object Preview {
    
    /** Provides an API for programmatically managing the installation of apps and app updates. This API is accessible through the AppInstallManager class. */
    object InstallControl {
      
      /** Represents an app that is in the installation queue. */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem")
      @js.native
      abstract class AppInstallItem ()
        extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallItem
      
      /** Provides members for programmatically installing apps, including the ability to start an app install and get a list of app installs currently in progress. */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager")
      @js.native
      /** Creates and initializes a new instance of the AppInstallManager class */
      class AppInstallManager ()
        extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManager
      
      /** Provides data for the ItemCompleted and ItemStatusChanged events. */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManagerItemEventArgs")
      @js.native
      abstract class AppInstallManagerItemEventArgs ()
        extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallManagerItemEventArgs
      
      /** Defines the app install states that are returned by the InstallState property of the AppInstallStatus class. */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState")
      @js.native
      object AppInstallState extends StObject {
        
        @JSBracketAccess
        def apply(value: Double): js.UndefOr[
                typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState with Double
              ] = js.native
        
        /* 2 */ val acquiringLicense: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.acquiringLicense with Double = js.native
        
        /* 7 */ val canceled: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.canceled with Double = js.native
        
        /* 6 */ val completed: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.completed with Double = js.native
        
        /* 3 */ val downloading: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.downloading with Double = js.native
        
        /* 9 */ val error: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.error with Double = js.native
        
        /* 5 */ val installing: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.installing with Double = js.native
        
        /* 8 */ val paused: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.paused with Double = js.native
        
        /* 10 */ val pausedLowBattery: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.pausedLowBattery with Double = js.native
        
        /* 11 */ val pausedWiFiRecommended: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.pausedWiFiRecommended with Double = js.native
        
        /* 12 */ val pausedWiFiRequired: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.pausedWiFiRequired with Double = js.native
        
        /* 0 */ val pending: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.pending with Double = js.native
        
        /* 13 */ val readyToDownload: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.readyToDownload with Double = js.native
        
        /* 4 */ val restoringData: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.restoringData with Double = js.native
        
        /* 1 */ val starting: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallState.starting with Double = js.native
      }
      
      /** Describes the status of an app that is in the installation queue. */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus")
      @js.native
      abstract class AppInstallStatus ()
        extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallStatus
      
      /** Defines the different app install types that are returned by the InstallType property of the AppInstallItem class. */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallType")
      @js.native
      object AppInstallType extends StObject {
        
        @JSBracketAccess
        def apply(value: Double): js.UndefOr[
                typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallType with Double
              ] = js.native
        
        /* 0 */ val install: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallType.install with Double = js.native
        
        /* 2 */ val repair: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallType.repair with Double = js.native
        
        /* 1 */ val update: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AppInstallType.update with Double = js.native
      }
      
      /** Defines the automatic app update setting values that can be returned by the AutoUpdateSetting property of the AppInstallManager class. */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.InstallControl.AutoUpdateSetting")
      @js.native
      object AutoUpdateSetting extends StObject {
        
        @JSBracketAccess
        def apply(value: Double): js.UndefOr[
                typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AutoUpdateSetting with Double
              ] = js.native
        
        /* 0 */ val disabled: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AutoUpdateSetting.disabled with Double = js.native
        
        /* 2 */ val disabledByPolicy: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AutoUpdateSetting.disabledByPolicy with Double = js.native
        
        /* 1 */ val enabled: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AutoUpdateSetting.enabled with Double = js.native
        
        /* 3 */ val enabledByPolicy: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.InstallControl.AutoUpdateSetting.enabledByPolicy with Double = js.native
      }
    }
    
    /** Defines static methods and properties for accessing information about the device hardware and configuring information about the system, the mobile operator, and the active user account. These members are used in various Windows Store scenarios. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration")
    @js.native
    abstract class StoreConfiguration ()
      extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreConfiguration
    object StoreConfiguration {
      
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration")
      @js.native
      val ^ : js.Any = js.native
      
      /**
        * Given a list of hardware features, this method returns a modified list that contains only the hardware features that are supported on the current device.
        * @param systemFeatures A list of StoreSystemFeature objects that represent the hardware features to be queried on the current device.
        * @return An asynchronous operation that, on successful completion, returns a list of hardware features that are supported on the current device. If you use Asynchronous programming, the result type is a read-only list/vector of StoreSystemFeature items. (You can use APIs of IVectorView<StoreSystemFeature> for C++ or JavaScript, APIs of IReadOnlyList<StoreSystemFeature> for .NET.)
        */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration.filterUnsupportedSystemFeaturesAsync")
      @js.native
      def filterUnsupportedSystemFeaturesAsync(systemFeatures: IIterable[StoreSystemFeature]): IPromiseWithIAsyncOperation[IVectorView[_]] = js.native
      
      /** Gets hardware manufacturer information for the current device. */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration.hardwareManufacturerInfo")
      @js.native
      def hardwareManufacturerInfo: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreHardwareManufacturerInfo = js.native
      @scala.inline
      def hardwareManufacturerInfo_=(x: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreHardwareManufacturerInfo): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("hardwareManufacturerInfo")(x.asInstanceOf[js.Any])
      
      /**
        * Determines whether a given user ID is also being used to sign in to the Windows Store. Typically, this method is used to determine whether a user ID that is currently signed in to an app is also signed in to the Windows Store.
        * @param webAccountId The user ID (typically obtained from the WebAccount.Id property) to check.
        * @return True if the user account specified by webAccountId is the same account that is signed in to the Windows Store; otherwise false.
        */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration.isStoreWebAccountId")
      @js.native
      def isStoreWebAccountId(webAccountId: String): Boolean = js.native
      
      /** Gets or sets a value that indicates whether the Windows Store prompts the user before making a purchase. */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration.purchasePromptingPolicy")
      @js.native
      def purchasePromptingPolicy: Double = js.native
      @scala.inline
      def purchasePromptingPolicy_=(x: Double): Unit = ^.asInstanceOf[js.Dynamic].updateDynamic("purchasePromptingPolicy")(x.asInstanceOf[js.Any])
      
      /**
        * Configures mobile operator information for the device.
        * @param mobileOperatorId The mobile operator ID.
        * @param appDownloadLimitInMegabytes The maximum app download size defined by the mobile operator, in MB.
        * @param updateDownloadLimitInMegabytes The maximum OS update download size defined by the mobile operator, in MB.
        */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration.setMobileOperatorConfiguration")
      @js.native
      def setMobileOperatorConfiguration(
        mobileOperatorId: String,
        appDownloadLimitInMegabytes: Double,
        updateDownloadLimitInMegabytes: Double
      ): Unit = js.native
      
      /**
        * Sets the ID of the user account that is signed in to the Windows Store so that other apps can query against this ID.
        * @param webAccountId The user account ID (typically obtained from the WebAccount.Id property) that is signed in to the Windows Store.
        */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration.setStoreWebAccountId")
      @js.native
      def setStoreWebAccountId(webAccountId: String): Unit = js.native
      
      /**
        * Configures miscellaneous system information for the device.
        * @param catalogHardwareManufacturerId The ID of the hardware manufacturer.
        * @param catalogStoreContentModifierId The ID of the Windows Store content modifier.
        * @param systemConfigurationExpiration The expiration date for the system configuration.
        * @param catalogHardwareDescriptor A descriptor string that specifies the hardware components supported by the device.
        */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreConfiguration.setSystemConfiguration")
      @js.native
      def setSystemConfiguration(
        catalogHardwareManufacturerId: String,
        catalogStoreContentModifierId: String,
        systemConfigurationExpiration: js.Date,
        catalogHardwareDescriptor: String
      ): Unit = js.native
    }
    
    /** Provides information about the manufacturer for the current device. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreHardwareManufacturerInfo")
    @js.native
    abstract class StoreHardwareManufacturerInfo ()
      extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreHardwareManufacturerInfo
    
    /** Defines static methods for retrieving the in-app product SKUs available for the current app and requesting the purchase of an in-app product SKU for the app. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StorePreview")
    @js.native
    abstract class StorePreview ()
      extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreview
    object StorePreview {
      
      /**
        * Retrieves the in-app products available for the current app asynchronously, including the available SKUs for each product.
        * @return An asynchronous operation that, on successful completion, returns the collection of in-app products for the current app (including the available SKUs for each product). If you use Asynchronous programming, the result type is a read-only list/vector of StorePreviewProductInfo items. (You can use APIs of IVectorView<StorePreviewProductInfo> for C++ or JavaScript, APIs of IReadOnlyList<StorePreviewProductInfo> for .NET.)
        */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StorePreview.loadAddOnProductInfosAsync")
      @js.native
      def loadAddOnProductInfosAsync(): IPromiseWithIAsyncOperation[IVectorView[_]] = js.native
      
      /**
        * Requests the purchase of a SKU for an in-app product that is associated with the current app. Calling this method displays the UI that is used to complete the transaction via the Windows Store.
        * @param productId Specifies the ID of the in-app product. This corresponds to the StorePreviewProductInfo.ProductId value and the StorePreviewSkuInfo.ProductId values for all SKUs of the in-app product.
        * @param skuId Specifies the ID of the SKU for the in-app product. This corresponds to the StorePreviewSkuInfo.SkuId value.
        * @return An asynchronous operation that, on successful completion, returns a StorePreviewPurchaseResults that contains the results of the in-app product purchase request.
        */
      /* static member */
      @JSGlobal("Windows.ApplicationModel.Store.Preview.StorePreview.requestProductPurchaseByProductIdAndSkuIdAsync")
      @js.native
      def requestProductPurchaseByProductIdAndSkuIdAsync(productId: String, skuId: String): IPromiseWithIAsyncOperation[
            typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults
          ] = js.native
    }
    
    /** Provides information about an in-app product, including details about available SKUs. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo")
    @js.native
    abstract class StorePreviewProductInfo ()
      extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewProductInfo
    
    /** Defines values that are used to indicate the transaction status when purchasing an in-app product SKU by using the RequestProductPurchaseByProductIdAndSkuIdAsync method. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StorePreviewProductPurchaseStatus")
    @js.native
    object StorePreviewProductPurchaseStatus extends StObject {
      
      @JSBracketAccess
      def apply(value: Double): js.UndefOr[
            typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewProductPurchaseStatus with Double
          ] = js.native
      
      /* 1 */ val alreadyPurchased: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewProductPurchaseStatus.alreadyPurchased with Double = js.native
      
      /* 2 */ val notFulfilled: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewProductPurchaseStatus.notFulfilled with Double = js.native
      
      /* 3 */ val notPurchased: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewProductPurchaseStatus.notPurchased with Double = js.native
      
      /* 0 */ val succeeded: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewProductPurchaseStatus.succeeded with Double = js.native
    }
    
    /** Contains information about the results of a purchase transaction for an in-app product SKU that was purchased by using the RequestProductPurchaseByProductIdAndSkuIdAsync method. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults")
    @js.native
    abstract class StorePreviewPurchaseResults ()
      extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewPurchaseResults
    
    /** Provides information about the available SKUs for an in-app product. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StorePreviewSkuInfo")
    @js.native
    abstract class StorePreviewSkuInfo ()
      extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StorePreviewSkuInfo
    
    /** Defines values that represent hardware features that can be queried for the current device by using the FilterUnsupportedSystemFeaturesAsync method. */
    @JSGlobal("Windows.ApplicationModel.Store.Preview.StoreSystemFeature")
    @js.native
    object StoreSystemFeature extends StObject {
      
      @JSBracketAccess
      def apply(value: Double): js.UndefOr[
            typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature with Double
          ] = js.native
      
      /* 2 */ val architectureArm: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.architectureArm with Double = js.native
      
      /* 1 */ val architectureX64: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.architectureX64 with Double = js.native
      
      /* 0 */ val architectureX86: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.architectureX86 with Double = js.native
      
      /* 12 */ val cameraFront: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.cameraFront with Double = js.native
      
      /* 13 */ val cameraRear: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.cameraRear with Double = js.native
      
      /* 6 */ val d3D12HardwareFL11: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.d3D12HardwareFL11 with Double = js.native
      
      /* 7 */ val d3D12HardwareFL12: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.d3D12HardwareFL12 with Double = js.native
      
      /* 4 */ val directX10: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.directX10 with Double = js.native
      
      /* 5 */ val directX11: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.directX11 with Double = js.native
      
      /* 3 */ val directX9: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.directX9 with Double = js.native
      
      /* 14 */ val gyroscope: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.gyroscope with Double = js.native
      
      /* 15 */ val hover: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.hover with Double = js.native
      
      /* 16 */ val magnetometer: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.magnetometer with Double = js.native
      
      /* 10 */ val memory1GB: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.memory1GB with Double = js.native
      
      /* 11 */ val memory2GB: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.memory2GB with Double = js.native
      
      /* 8 */ val memory300MB: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.memory300MB with Double = js.native
      
      /* 9 */ val memory750MB: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.memory750MB with Double = js.native
      
      /* 17 */ val nfc: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.nfc with Double = js.native
      
      /* 18 */ val resolution720P: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.resolution720P with Double = js.native
      
      /* 19 */ val resolutionWvga: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.resolutionWvga with Double = js.native
      
      /* 20 */ val resolutionWvgaOr720P: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.resolutionWvgaOr720P with Double = js.native
      
      /* 22 */ val resolutionWvgaOrWxga: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.resolutionWvgaOrWxga with Double = js.native
      
      /* 21 */ val resolutionWxga: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.resolutionWxga with Double = js.native
      
      /* 23 */ val resolutionWxgaOr720P: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.Preview.StoreSystemFeature.resolutionWxgaOr720P with Double = js.native
    }
  }
  
  /** Provides info about a license that is associated with an in-app product. */
  @JSGlobal("Windows.ApplicationModel.Store.ProductLicense")
  @js.native
  abstract class ProductLicense ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductLicense
  
  /** Provides localized information that details an in-app product. */
  @JSGlobal("Windows.ApplicationModel.Store.ProductListing")
  @js.native
  abstract class ProductListing ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductListing
  
  /** Used to provide the product name that is displayed to the user at time of purchase. */
  @JSGlobal("Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties")
  @js.native
  /** Creates an instance of ProductPurchaseDisplayProperties . */
  class ProductPurchaseDisplayProperties ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseDisplayProperties {
    /**
      * Creates an instance of ProductPurchaseDisplayProperties that includes the specified product name to display to the user.
      * @param name The product name displayed to the user.
      */
    def this(name: String) = this()
  }
  
  /** Defines values used to indicate the transaction status when purchasing an in-app product. */
  @JSGlobal("Windows.ApplicationModel.Store.ProductPurchaseStatus")
  @js.native
  object ProductPurchaseStatus extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseStatus with Double
      ] = js.native
    
    /* 1 */ val alreadyPurchased: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseStatus.alreadyPurchased with Double = js.native
    
    /* 2 */ val notFulfilled: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseStatus.notFulfilled with Double = js.native
    
    /* 3 */ val notPurchased: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseStatus.notPurchased with Double = js.native
    
    /* 0 */ val succeeded: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductPurchaseStatus.succeeded with Double = js.native
  }
  
  /** Specifies the product type for an in-app product. */
  @JSGlobal("Windows.ApplicationModel.Store.ProductType")
  @js.native
  object ProductType extends StObject {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductType with Double] = js.native
    
    /* 2 */ val consumable: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductType.consumable with Double = js.native
    
    /* 1 */ val durable: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductType.durable with Double = js.native
    
    /* 0 */ val unknown: typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.ProductType.unknown with Double = js.native
  }
  
  /** Contains information detailing the results of an in-app product purchase transaction. */
  @JSGlobal("Windows.ApplicationModel.Store.PurchaseResults")
  @js.native
  abstract class PurchaseResults ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.PurchaseResults
  
  /** Contains purchase and product information for an unfulfilled consumable in-app product. */
  @JSGlobal("Windows.ApplicationModel.Store.UnfulfilledConsumable")
  @js.native
  abstract class UnfulfilledConsumable ()
    extends typingsSlinky.winrtUwp.Windows.ApplicationModel.Store.UnfulfilledConsumable
}
