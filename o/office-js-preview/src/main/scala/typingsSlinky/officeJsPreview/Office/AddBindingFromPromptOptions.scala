package typingsSlinky.officeJsPreview.Office

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * Provides options for configuring the prompt and identifying the binding that is created.
  */
@js.native
trait AddBindingFromPromptOptions extends js.Object {
  
  /**
    * A user-defined item of any type that is returned, unchanged, in the asyncContext property of the AsyncResult object that is passed to a callback.
    */
  var asyncContext: js.UndefOr[js.Any] = js.native
  
  /**
    * The unique ID of the binding. Autogenerated if not supplied.
    */
  var id: js.UndefOr[String] = js.native
  
  /**
    * Specifies the string to display in the prompt UI that tells the user what to select. Limited to 200 characters.
    * If no promptText argument is passed, "Please make a selection" is displayed.
    */
  var promptText: js.UndefOr[String] = js.native
  
  /**
    * Specifies a table of sample data displayed in the prompt UI as an example of the kinds of fields (columns) that can be bound by your add-in.
    * The headers provided in the TableData object specify the labels used in the field selection UI.
    *
    * **Note**: This parameter is used only in add-ins for Access. It is ignored if provided when calling the method in an add-in for Excel.
    *
    * **Important**: We no longer recommend that you create and use Access web apps and databases in SharePoint.
    * As an alternative, we recommend that you use {@link https://powerapps.microsoft.com/ | Microsoft PowerApps}
    * to build no-code business solutions for web and mobile devices.
    */
  var sampleData: js.UndefOr[TableData] = js.native
}
object AddBindingFromPromptOptions {
  
  @scala.inline
  def apply(): AddBindingFromPromptOptions = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[AddBindingFromPromptOptions]
  }
  
  @scala.inline
  implicit class AddBindingFromPromptOptionsOps[Self <: AddBindingFromPromptOptions] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAsyncContext(value: js.Any): Self = this.set("asyncContext", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAsyncContext: Self = this.set("asyncContext", js.undefined)
    
    @scala.inline
    def setId(value: String): Self = this.set("id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteId: Self = this.set("id", js.undefined)
    
    @scala.inline
    def setPromptText(value: String): Self = this.set("promptText", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePromptText: Self = this.set("promptText", js.undefined)
    
    @scala.inline
    def setSampleData(value: TableData): Self = this.set("sampleData", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSampleData: Self = this.set("sampleData", js.undefined)
  }
}
