package typingsSlinky.squareConnect.mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@JSImport("square-connect", "InventoryPhysicalCount")
@js.native
class InventoryPhysicalCount () extends js.Object {
  
  /**
    * The Square generated ID of the `CatalogObject` being tracked.
    */
  var catalog_object_id: js.UndefOr[String] = js.native
  
  /**
    * The `CatalogObjectType` of the `CatalogObject` being tracked. Tracking is only supported for the `ITEM_VARIATION` type.
    */
  var catalog_object_type: js.UndefOr[String] = js.native
  
  /**
    * A read-only timestamp in RFC 3339 format that indicates when Square received the physical count.
    */
  var created_at: js.UndefOr[String] = js.native
  
  /**
    * The Square ID of the `Employee` responsible for the physical count.
    */
  var employee_id: js.UndefOr[String] = js.native
  
  /**
    * A unique ID generated by Square for the `InventoryPhysicalCount`.
    */
  var id: js.UndefOr[String] = js.native
  
  /**
    * The Square ID of the `Location` where the related quantity of items are being tracked.
    */
  var location_id: js.UndefOr[String] = js.native
  
  /**
    * A client-generated timestamp in RFC 3339 format that indicates when the physical count took place. For write actions,
    * the `occurred_at` timestamp cannot be older than 24 hours or in the future relative to the time of the request.
    */
  var occurred_at: js.UndefOr[String] = js.native
  
  /**
    * The number of items affected by the physical count as a decimal string. Can support up to 5 digits after the decimal point.
    * @note The Point of Sale app and Dashboard do not currently support decimal quantities. If a Point of Sale app or
    * Dashboard attempts to read a decimal quantity on inventory counts or adjustments, the quantity will be rounded down
    * to the nearest integer. For example, `2.5` will become `2`, and `-2.5` will become `-3`. Read [Decimal
    * Quantities (BETA)](https://developer.squareup.com/docs/inventory-api/what-it-does#decimal-quantities-beta) for more information.
    */
  var quantity: js.UndefOr[String] = js.native
  
  /**
    * An optional ID provided by the application to tie the `InventoryPhysicalCount` to an external system.
    */
  var reference_id: js.UndefOr[String] = js.native
  
  /**
    * Read-only information about the application that submitted the physical count.
    */
  var source: js.UndefOr[SourceApplication] = js.native
  
  /**
    * The current `InventoryState` for the related quantity of items.
    * See [InventoryState](#type-inventorystate) for possible values.
    */
  var state: js.UndefOr[InventoryStateType] = js.native
}
