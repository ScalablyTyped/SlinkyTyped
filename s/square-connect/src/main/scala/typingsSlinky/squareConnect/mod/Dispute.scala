package typingsSlinky.squareConnect.mod

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@JSImport("square-connect", "Dispute")
@js.native
class Dispute () extends StObject {
  
  /**
    * The disputed amount. The amount can be less than the entire transaction amount.
    * For example, a cardholder purchased multiple items, however initiated dispute only for some of the items.
    */
  var amount_money: js.UndefOr[Money] = js.native
  
  /**
    * ID of the dispute in the card brand system, generated by the card brand.
    */
  var brand_dispute_id: js.UndefOr[String] = js.native
  
  /**
    * The card brand used in the disputed payment. See [CardBrand](#type-cardbrand) for possible values
    */
  var card_brand: js.UndefOr[String] = js.native
  
  /**
    * Timestamp when the dispute was created, in RFC 3339 format.
    */
  var created_at: js.UndefOr[String] = js.native
  
  /**
    * Unique ID for this `Dispute`, generated by Square.
    */
  var dispute_id: js.UndefOr[String] = js.native
  
  /**
    * The payment challenged in this dispute.
    */
  var disputed_payment: js.UndefOr[DisputedPayment] = js.native
  
  /**
    * The time when the next action is due, in RFC 3339 format.
    */
  var due_at: js.UndefOr[String] = js.native
  
  /**
    * The IDs of the evidence associated with the dispute.
    */
  var evidence_ids: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * The ID of location where dispute originated.
    */
  var location_id: js.UndefOr[String] = js.native
  
  /**
    * The dispute reason why cardholder initiated dispute with their bank. See [DisputeReason](#type-disputereason) for possible values
    */
  var reason: js.UndefOr[String] = js.native
  
  /**
    * Timestamp when the dispute was reported, in RFC 3339 format.
    */
  var reported_date: js.UndefOr[String] = js.native
  
  /**
    * The current state of this dispute. See [DisputeState](#type-disputestate) for possible values
    */
  var state: js.UndefOr[String] = js.native
  
  /**
    * Timestamp when dispute was last updated, in RFC 3339 format.
    */
  var updated_at: js.UndefOr[String] = js.native
  
  /**
    * The current version of the `Dispute`.
    */
  var version: js.UndefOr[Double] = js.native
}
