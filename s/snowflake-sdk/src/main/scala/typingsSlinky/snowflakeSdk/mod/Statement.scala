package typingsSlinky.snowflakeSdk.mod

import typingsSlinky.node.NodeJS.ReadableStream
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Statement extends js.Object {
  
  /**
    * Cancels this statement if possible.
    * @param fn The callback to use.
    */
  def cancel(fn: js.Function2[/* err */ js.Error, /* stmt */ this.type, Unit]): Unit = js.native
  
  /**
    * Given a column identifier, returns the corresponding column. The column
    * identifier can be either the column name (String) or the column index
    * (Number). If a column is specified and there is more than one column with
    * that name, the first column with the specified name will be returned.
    */
  def getColumn(columnIdentifier: String): Column = js.native
  def getColumn(columnIdentifier: Double): Column = js.native
  
  /**
    * Returns the columns produced by this statement.
    */
  def getColumns(): js.Array[Column] = js.native
  
  /**
    * Returns the number of rows returned by this statement.
    */
  def getNumRows(): Double = js.native
  
  /**
    * Returns the number of rows updated by this statement.
    */
  def getNumUpdatedRows(): Double = js.native
  
  /**
    * Returns the request id that was used when the statement was issued.
    */
  def getRequestId(): String = js.native
  
  /**
    * Returns an object that contains information about the values of the
    * current warehouse, current database, etc., when this statement finished
    * executing.
    */
  def getSessionState(): js.Any = js.native
  
  /**
    * Returns this statement's SQL text.
    */
  def getSqlText(): String = js.native
  
  /**
    * Returns the statement id generated by the server for this statement.
    * If the statement is still executing and we don't know the statement id
    * yet, this method will return undefined.
    */
  def getStatementId(): String = js.native
  
  /**
    * Returns the current status of this statement.
    */
  def getStatus(): StatementStatus = js.native
  
  def streamRows(): ReadableStream = js.native
}
