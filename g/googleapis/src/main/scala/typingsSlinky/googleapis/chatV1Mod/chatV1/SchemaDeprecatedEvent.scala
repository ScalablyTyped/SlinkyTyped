package typingsSlinky.googleapis.chatV1Mod.chatV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * Hangouts Chat events.
  */
@js.native
trait SchemaDeprecatedEvent extends js.Object {
  
  /**
    * The form action data associated with an interactive card that was
    * clicked. Only populated for CARD_CLICKED events. See the [Interactive
    * Cards guide](/hangouts/chat/how-tos/cards-onclick) for more information.
    */
  var action: js.UndefOr[SchemaFormAction] = js.native
  
  /**
    * The URL the bot should redirect the user to after they have completed an
    * authorization or configuration flow outside of Hangouts Chat. See the
    * [Authorizing access to 3p services guide](/hangouts/chat/how-tos/auth-3p)
    * for more information.
    */
  var configCompleteRedirectUrl: js.UndefOr[String] = js.native
  
  /**
    * The timestamp indicating when the event was dispatched.
    */
  var eventTime: js.UndefOr[String] = js.native
  
  /**
    * The message that triggered the event, if applicable.
    */
  var message: js.UndefOr[SchemaMessage] = js.native
  
  /**
    * The room or DM in which the event occurred.
    */
  var space: js.UndefOr[SchemaSpace] = js.native
  
  /**
    * The bot-defined key for the thread related to the event. See the
    * thread_key field of the `spaces.message.create` request for more
    * information.
    */
  var threadKey: js.UndefOr[String] = js.native
  
  /**
    * A secret value that bots can use to verify if a request is from Google.
    * The token is randomly generated by Google, remains static, and can be
    * obtained from the Hangouts Chat API configuration page in the Cloud
    * Console. Developers can revoke/regenerate it if needed from the same
    * page.
    */
  var token: js.UndefOr[String] = js.native
  
  /**
    * The type of the event.
    */
  var `type`: js.UndefOr[String] = js.native
  
  /**
    * The user that triggered the event.
    */
  var user: js.UndefOr[SchemaUser] = js.native
}
object SchemaDeprecatedEvent {
  
  @scala.inline
  def apply(): SchemaDeprecatedEvent = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaDeprecatedEvent]
  }
  
  @scala.inline
  implicit class SchemaDeprecatedEventOps[Self <: SchemaDeprecatedEvent] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAction(value: SchemaFormAction): Self = this.set("action", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAction: Self = this.set("action", js.undefined)
    
    @scala.inline
    def setConfigCompleteRedirectUrl(value: String): Self = this.set("configCompleteRedirectUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteConfigCompleteRedirectUrl: Self = this.set("configCompleteRedirectUrl", js.undefined)
    
    @scala.inline
    def setEventTime(value: String): Self = this.set("eventTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteEventTime: Self = this.set("eventTime", js.undefined)
    
    @scala.inline
    def setMessage(value: SchemaMessage): Self = this.set("message", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMessage: Self = this.set("message", js.undefined)
    
    @scala.inline
    def setSpace(value: SchemaSpace): Self = this.set("space", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSpace: Self = this.set("space", js.undefined)
    
    @scala.inline
    def setThreadKey(value: String): Self = this.set("threadKey", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteThreadKey: Self = this.set("threadKey", js.undefined)
    
    @scala.inline
    def setToken(value: String): Self = this.set("token", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteToken: Self = this.set("token", js.undefined)
    
    @scala.inline
    def setType(value: String): Self = this.set("type", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteType: Self = this.set("type", js.undefined)
    
    @scala.inline
    def setUser(value: SchemaUser): Self = this.set("user", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteUser: Self = this.set("user", js.undefined)
  }
}
