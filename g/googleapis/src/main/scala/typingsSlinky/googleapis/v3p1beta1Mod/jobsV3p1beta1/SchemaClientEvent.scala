package typingsSlinky.googleapis.v3p1beta1Mod.jobsV3p1beta1

import org.scalablytyped.runtime.StringDictionary
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * An event issued when an end user interacts with the application that
  * implements Cloud Talent Solution. Providing this information improves the
  * quality of search and recommendation for the API clients, enabling the
  * service to perform optimally. The number of events sent must be consistent
  * with other calls, such as job searches, issued to the service by the
  * client.
  */
@js.native
trait SchemaClientEvent extends js.Object {
  
  /**
    * Required.  The timestamp of the event.
    */
  var createTime: js.UndefOr[String] = js.native
  
  /**
    * Required.  A unique identifier, generated by the client application. This
    * `event_id` is used to establish the relationship between different events
    * (see parent_event_id).
    */
  var eventId: js.UndefOr[String] = js.native
  
  /**
    * Optional.  Extra information about this event. Used for storing
    * information with no matching field in event payload, for example, user
    * application specific context or details.  At most 20 keys are supported.
    * The maximum total size of all keys and values is 2 KB.
    */
  var extraInfo: js.UndefOr[StringDictionary[String]] = js.native
  
  /**
    * A event issued when a job seeker interacts with the application that
    * implements Cloud Talent Solution.
    */
  var jobEvent: js.UndefOr[SchemaJobEvent] = js.native
  
  /**
    * Optional.  The event_id of an event that resulted in the current event.
    * For example, a Job view event usually follows a parent impression event:
    * A job seeker first does a search where a list of jobs appears
    * (impression). The job seeker then selects a result and views the
    * description of a particular job (Job view).
    */
  var parentEventId: js.UndefOr[String] = js.native
  
  /**
    * Required.  A unique ID generated in the API responses. It can be found in
    * ResponseMetadata.request_id.
    */
  var requestId: js.UndefOr[String] = js.native
}
object SchemaClientEvent {
  
  @scala.inline
  def apply(): SchemaClientEvent = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaClientEvent]
  }
  
  @scala.inline
  implicit class SchemaClientEventOps[Self <: SchemaClientEvent] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setCreateTime(value: String): Self = this.set("createTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreateTime: Self = this.set("createTime", js.undefined)
    
    @scala.inline
    def setEventId(value: String): Self = this.set("eventId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteEventId: Self = this.set("eventId", js.undefined)
    
    @scala.inline
    def setExtraInfo(value: StringDictionary[String]): Self = this.set("extraInfo", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteExtraInfo: Self = this.set("extraInfo", js.undefined)
    
    @scala.inline
    def setJobEvent(value: SchemaJobEvent): Self = this.set("jobEvent", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteJobEvent: Self = this.set("jobEvent", js.undefined)
    
    @scala.inline
    def setParentEventId(value: String): Self = this.set("parentEventId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteParentEventId: Self = this.set("parentEventId", js.undefined)
    
    @scala.inline
    def setRequestId(value: String): Self = this.set("requestId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequestId: Self = this.set("requestId", js.undefined)
  }
}
