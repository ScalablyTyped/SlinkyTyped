package typingsSlinky.googleapis.androidmanagementV1Mod.androidmanagementV1

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * The configuration applied to an enterprise.
  */
@js.native
trait SchemaEnterprise extends StObject {
  
  /**
    * Deprecated and unused.
    */
  var appAutoApprovalEnabled: js.UndefOr[Boolean] = js.native
  
  /**
    * The types of Google Pub/Sub notifications enabled for the enterprise.
    */
  var enabledNotificationTypes: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * The name of the enterprise displayed to users.
    */
  var enterpriseDisplayName: js.UndefOr[String] = js.native
  
  /**
    * An image displayed as a logo during device provisioning. Supported types
    * are: image/bmp, image/gif, image/x-ico, image/jpeg, image/png,
    * image/webp, image/vnd.wap.wbmp, image/x-adobe-dng.
    */
  var logo: js.UndefOr[SchemaExternalData] = js.native
  
  /**
    * The name of the enterprise which is generated by the server during
    * creation, in the form enterprises/{enterpriseId}.
    */
  var name: js.UndefOr[String] = js.native
  
  /**
    * A color in RGB format that indicates the predominant color to display in
    * the device management app UI. The color components are stored as follows:
    * (red &lt;&lt; 16) | (green &lt;&lt; 8) | blue, where the value of each
    * component is between 0 and 255, inclusive.
    */
  var primaryColor: js.UndefOr[Double] = js.native
  
  /**
    * The topic that Cloud Pub/Sub notifications are published to, in the form
    * projects/{project}/topics/{topic}. This field is only required if Pub/Sub
    * notifications are enabled.
    */
  var pubsubTopic: js.UndefOr[String] = js.native
  
  /**
    * Sign-in details of the enterprise. Maximum of 1 SigninDetail is
    * supported.
    */
  var signinDetails: js.UndefOr[js.Array[SchemaSigninDetail]] = js.native
  
  /**
    * Terms and conditions that must be accepted when provisioning a device for
    * this enterprise. A page of terms is generated for each value in this
    * list.
    */
  var termsAndConditions: js.UndefOr[js.Array[SchemaTermsAndConditions]] = js.native
}
object SchemaEnterprise {
  
  @scala.inline
  def apply(): SchemaEnterprise = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaEnterprise]
  }
  
  @scala.inline
  implicit class SchemaEnterpriseMutableBuilder[Self <: SchemaEnterprise] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAppAutoApprovalEnabled(value: Boolean): Self = StObject.set(x, "appAutoApprovalEnabled", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAppAutoApprovalEnabledUndefined: Self = StObject.set(x, "appAutoApprovalEnabled", js.undefined)
    
    @scala.inline
    def setEnabledNotificationTypes(value: js.Array[String]): Self = StObject.set(x, "enabledNotificationTypes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setEnabledNotificationTypesUndefined: Self = StObject.set(x, "enabledNotificationTypes", js.undefined)
    
    @scala.inline
    def setEnabledNotificationTypesVarargs(value: String*): Self = StObject.set(x, "enabledNotificationTypes", js.Array(value :_*))
    
    @scala.inline
    def setEnterpriseDisplayName(value: String): Self = StObject.set(x, "enterpriseDisplayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setEnterpriseDisplayNameUndefined: Self = StObject.set(x, "enterpriseDisplayName", js.undefined)
    
    @scala.inline
    def setLogo(value: SchemaExternalData): Self = StObject.set(x, "logo", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLogoUndefined: Self = StObject.set(x, "logo", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setPrimaryColor(value: Double): Self = StObject.set(x, "primaryColor", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPrimaryColorUndefined: Self = StObject.set(x, "primaryColor", js.undefined)
    
    @scala.inline
    def setPubsubTopic(value: String): Self = StObject.set(x, "pubsubTopic", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPubsubTopicUndefined: Self = StObject.set(x, "pubsubTopic", js.undefined)
    
    @scala.inline
    def setSigninDetails(value: js.Array[SchemaSigninDetail]): Self = StObject.set(x, "signinDetails", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSigninDetailsUndefined: Self = StObject.set(x, "signinDetails", js.undefined)
    
    @scala.inline
    def setSigninDetailsVarargs(value: SchemaSigninDetail*): Self = StObject.set(x, "signinDetails", js.Array(value :_*))
    
    @scala.inline
    def setTermsAndConditions(value: js.Array[SchemaTermsAndConditions]): Self = StObject.set(x, "termsAndConditions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTermsAndConditionsUndefined: Self = StObject.set(x, "termsAndConditions", js.undefined)
    
    @scala.inline
    def setTermsAndConditionsVarargs(value: SchemaTermsAndConditions*): Self = StObject.set(x, "termsAndConditions", js.Array(value :_*))
  }
}
