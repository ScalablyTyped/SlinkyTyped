package typingsSlinky.googleapis.alphaMod.computeAlpha

import org.scalablytyped.runtime.StringDictionary
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * An Instance resource. (== resource_for beta.instances ==) (== resource_for
  * v1.instances ==)
  */
@js.native
trait SchemaInstance extends StObject {
  
  /**
    * Allows this instance to send and receive packets with non-matching
    * destination or source IPs. This is required if you plan to use this
    * instance to forward routes. For more information, see Enabling IP
    * Forwarding.
    */
  var canIpForward: js.UndefOr[Boolean] = js.native
  
  /**
    * [Output Only] The CPU platform used by this instance.
    */
  var cpuPlatform: js.UndefOr[String] = js.native
  
  /**
    * [Output Only] Creation timestamp in RFC3339 text format.
    */
  var creationTimestamp: js.UndefOr[String] = js.native
  
  /**
    * Whether the resource should be protected against deletion.
    */
  var deletionProtection: js.UndefOr[Boolean] = js.native
  
  /**
    * An optional description of this resource. Provide this property when you
    * create the resource.
    */
  var description: js.UndefOr[String] = js.native
  
  /**
    * Array of disks associated with this instance. Persistent disks must be
    * created before you can assign them.
    */
  var disks: js.UndefOr[js.Array[SchemaAttachedDisk]] = js.native
  
  /**
    * Enables display device for the instance.
    */
  var displayDevice: js.UndefOr[SchemaDisplayDevice] = js.native
  
  /**
    * A list of the type and count of accelerator cards attached to the
    * instance.
    */
  var guestAccelerators: js.UndefOr[js.Array[SchemaAcceleratorConfig]] = js.native
  
  var hostname: js.UndefOr[String] = js.native
  
  /**
    * [Output Only] The unique identifier for the resource. This identifier is
    * defined by the server.
    */
  var id: js.UndefOr[String] = js.native
  
  /**
    * Encrypts or decrypts data for an instance with a customer-supplied
    * encryption key.  If you are creating a new instance, this field encrypts
    * the local SSD and in-memory contents of the instance using a key that you
    * provide.  If you are restarting an instance protected with a
    * customer-supplied encryption key, you must provide the correct key in
    * order to successfully restart the instance.  If you do not provide an
    * encryption key when creating the instance, then the local SSD and
    * in-memory contents will be encrypted using an automatically generated key
    * and you do not need to provide a key to start the instance later.
    * Instance templates do not store customer-supplied encryption keys, so you
    * cannot use your own keys to encrypt local SSDs and in-memory content in a
    * managed instance group.
    */
  var instanceEncryptionKey: js.UndefOr[SchemaCustomerEncryptionKey] = js.native
  
  /**
    * [Output Only] Type of the resource. Always compute#instance for
    * instances.
    */
  var kind: js.UndefOr[String] = js.native
  
  /**
    * A fingerprint for this request, which is essentially a hash of the
    * label&#39;s contents and used for optimistic locking. The fingerprint is
    * initially generated by Compute Engine and changes after every request to
    * modify or update labels. You must always provide an up-to-date
    * fingerprint hash in order to update or change labels.  To see the latest
    * fingerprint, make get() request to the instance.
    */
  var labelFingerprint: js.UndefOr[String] = js.native
  
  /**
    * Labels to apply to this instance. These can be later modified by the
    * setLabels method.
    */
  var labels: js.UndefOr[StringDictionary[String]] = js.native
  
  /**
    * Full or partial URL of the machine type resource to use for this
    * instance, in the format: zones/zone/machineTypes/machine-type. This is
    * provided by the client when the instance is created. For example, the
    * following is a valid partial url to a predefined machine type:
    * zones/us-central1-f/machineTypes/n1-standard-1   To create a custom
    * machine type, provide a URL to a machine type in the following format,
    * where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24, etc), and
    * MEMORY is the total memory for this instance. Memory must be a multiple
    * of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120 MB):
    * zones/zone/machineTypes/custom-CPUS-MEMORY   For example:
    * zones/us-central1-f/machineTypes/custom-4-5120   For a full list of
    * restrictions, read the Specifications for custom machine types.
    */
  var machineType: js.UndefOr[String] = js.native
  
  /**
    * The metadata key/value pairs assigned to this instance. This includes
    * custom metadata and predefined keys.
    */
  var metadata: js.UndefOr[SchemaMetadata] = js.native
  
  /**
    * Specifies a minimum CPU platform for the VM instance. Applicable values
    * are the friendly names of CPU platforms, such as minCpuPlatform:
    * &quot;Intel Haswell&quot; or minCpuPlatform: &quot;Intel Sandy
    * Bridge&quot;.
    */
  var minCpuPlatform: js.UndefOr[String] = js.native
  
  /**
    * The name of the resource, provided by the client when initially creating
    * the resource. The resource name must be 1-63 characters long, and comply
    * with RFC1035. Specifically, the name must be 1-63 characters long and
    * match the regular expression `[a-z]([-a-z0-9]*[a-z0-9])?` which means the
    * first character must be a lowercase letter, and all following characters
    * must be a dash, lowercase letter, or digit, except the last character,
    * which cannot be a dash.
    */
  var name: js.UndefOr[String] = js.native
  
  /**
    * An array of network configurations for this instance. These specify how
    * interfaces are configured to interact with other network services, such
    * as connecting to the internet. Multiple interfaces are supported per
    * instance.
    */
  var networkInterfaces: js.UndefOr[js.Array[SchemaNetworkInterface]] = js.native
  
  /**
    * Total amount of preserved state for SUSPENDED instances. Read-only in the
    * api.
    */
  var preservedStateSizeGb: js.UndefOr[String] = js.native
  
  /**
    * The configuration of desired allocations which this Instance could
    * consume capacity from.
    */
  var reservationAffinity: js.UndefOr[SchemaReservationAffinity] = js.native
  
  /**
    * Resource policies applied to this instance.
    */
  var resourcePolicies: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * Sets the scheduling options for this instance.
    */
  var scheduling: js.UndefOr[SchemaScheduling] = js.native
  
  /**
    * [Output Only] Server-defined URL for this resource.
    */
  var selfLink: js.UndefOr[String] = js.native
  
  /**
    * [Output Only] Server-defined URL for this resource with the resource id.
    */
  var selfLinkWithId: js.UndefOr[String] = js.native
  
  /**
    * A list of service accounts, with their specified scopes, authorized for
    * this instance. Only one service account per VM instance is supported.
    * Service accounts generate access tokens that can be accessed through the
    * metadata server and used to authenticate applications on the instance.
    * See Service Accounts for more information.
    */
  var serviceAccounts: js.UndefOr[js.Array[SchemaServiceAccount]] = js.native
  
  var shieldedInstanceConfig: js.UndefOr[SchemaShieldedInstanceConfig] = js.native
  
  var shieldedInstanceIntegrityPolicy: js.UndefOr[SchemaShieldedInstanceIntegrityPolicy] = js.native
  
  var shieldedVmConfig: js.UndefOr[SchemaShieldedVmConfig] = js.native
  
  var shieldedVmIntegrityPolicy: js.UndefOr[SchemaShieldedVmIntegrityPolicy] = js.native
  
  /**
    * Source machine image
    */
  var sourceMachineImage: js.UndefOr[String] = js.native
  
  /**
    * Source GMI encryption key when creating an instance from GMI.
    */
  var sourceMachineImageEncryptionKey: js.UndefOr[SchemaCustomerEncryptionKey] = js.native
  
  /**
    * [Output Only] Whether a VM has been restricted for start because Compute
    * Engine has detected suspicious activity.
    */
  var startRestricted: js.UndefOr[Boolean] = js.native
  
  /**
    * [Output Only] The status of the instance. One of the following values:
    * PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED, SUSPENDING, SUSPENDED,
    * and TERMINATED.
    */
  var status: js.UndefOr[String] = js.native
  
  /**
    * [Output Only] An optional, human-readable explanation of the status.
    */
  var statusMessage: js.UndefOr[String] = js.native
  
  /**
    * Tags to apply to this instance. Tags are used to identify valid sources
    * or targets for network firewalls and are specified by the client during
    * instance creation. The tags can be later modified by the setTags method.
    * Each tag within the list must comply with RFC1035. Multiple tags can be
    * specified via the &#39;tags.items&#39; field.
    */
  var tags: js.UndefOr[SchemaTags] = js.native
  
  /**
    * [Output Only] URL of the zone where the instance resides. You must
    * specify this field as part of the HTTP request URL. It is not settable as
    * a field in the request body.
    */
  var zone: js.UndefOr[String] = js.native
}
object SchemaInstance {
  
  @scala.inline
  def apply(): SchemaInstance = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaInstance]
  }
  
  @scala.inline
  implicit class SchemaInstanceMutableBuilder[Self <: SchemaInstance] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setCanIpForward(value: Boolean): Self = StObject.set(x, "canIpForward", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCanIpForwardUndefined: Self = StObject.set(x, "canIpForward", js.undefined)
    
    @scala.inline
    def setCpuPlatform(value: String): Self = StObject.set(x, "cpuPlatform", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCpuPlatformUndefined: Self = StObject.set(x, "cpuPlatform", js.undefined)
    
    @scala.inline
    def setCreationTimestamp(value: String): Self = StObject.set(x, "creationTimestamp", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCreationTimestampUndefined: Self = StObject.set(x, "creationTimestamp", js.undefined)
    
    @scala.inline
    def setDeletionProtection(value: Boolean): Self = StObject.set(x, "deletionProtection", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDeletionProtectionUndefined: Self = StObject.set(x, "deletionProtection", js.undefined)
    
    @scala.inline
    def setDescription(value: String): Self = StObject.set(x, "description", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDescriptionUndefined: Self = StObject.set(x, "description", js.undefined)
    
    @scala.inline
    def setDisks(value: js.Array[SchemaAttachedDisk]): Self = StObject.set(x, "disks", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDisksUndefined: Self = StObject.set(x, "disks", js.undefined)
    
    @scala.inline
    def setDisksVarargs(value: SchemaAttachedDisk*): Self = StObject.set(x, "disks", js.Array(value :_*))
    
    @scala.inline
    def setDisplayDevice(value: SchemaDisplayDevice): Self = StObject.set(x, "displayDevice", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDisplayDeviceUndefined: Self = StObject.set(x, "displayDevice", js.undefined)
    
    @scala.inline
    def setGuestAccelerators(value: js.Array[SchemaAcceleratorConfig]): Self = StObject.set(x, "guestAccelerators", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setGuestAcceleratorsUndefined: Self = StObject.set(x, "guestAccelerators", js.undefined)
    
    @scala.inline
    def setGuestAcceleratorsVarargs(value: SchemaAcceleratorConfig*): Self = StObject.set(x, "guestAccelerators", js.Array(value :_*))
    
    @scala.inline
    def setHostname(value: String): Self = StObject.set(x, "hostname", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setHostnameUndefined: Self = StObject.set(x, "hostname", js.undefined)
    
    @scala.inline
    def setId(value: String): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    @scala.inline
    def setInstanceEncryptionKey(value: SchemaCustomerEncryptionKey): Self = StObject.set(x, "instanceEncryptionKey", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setInstanceEncryptionKeyUndefined: Self = StObject.set(x, "instanceEncryptionKey", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = StObject.set(x, "kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setKindUndefined: Self = StObject.set(x, "kind", js.undefined)
    
    @scala.inline
    def setLabelFingerprint(value: String): Self = StObject.set(x, "labelFingerprint", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLabelFingerprintUndefined: Self = StObject.set(x, "labelFingerprint", js.undefined)
    
    @scala.inline
    def setLabels(value: StringDictionary[String]): Self = StObject.set(x, "labels", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setLabelsUndefined: Self = StObject.set(x, "labels", js.undefined)
    
    @scala.inline
    def setMachineType(value: String): Self = StObject.set(x, "machineType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMachineTypeUndefined: Self = StObject.set(x, "machineType", js.undefined)
    
    @scala.inline
    def setMetadata(value: SchemaMetadata): Self = StObject.set(x, "metadata", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMetadataUndefined: Self = StObject.set(x, "metadata", js.undefined)
    
    @scala.inline
    def setMinCpuPlatform(value: String): Self = StObject.set(x, "minCpuPlatform", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setMinCpuPlatformUndefined: Self = StObject.set(x, "minCpuPlatform", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = StObject.set(x, "name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNameUndefined: Self = StObject.set(x, "name", js.undefined)
    
    @scala.inline
    def setNetworkInterfaces(value: js.Array[SchemaNetworkInterface]): Self = StObject.set(x, "networkInterfaces", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setNetworkInterfacesUndefined: Self = StObject.set(x, "networkInterfaces", js.undefined)
    
    @scala.inline
    def setNetworkInterfacesVarargs(value: SchemaNetworkInterface*): Self = StObject.set(x, "networkInterfaces", js.Array(value :_*))
    
    @scala.inline
    def setPreservedStateSizeGb(value: String): Self = StObject.set(x, "preservedStateSizeGb", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPreservedStateSizeGbUndefined: Self = StObject.set(x, "preservedStateSizeGb", js.undefined)
    
    @scala.inline
    def setReservationAffinity(value: SchemaReservationAffinity): Self = StObject.set(x, "reservationAffinity", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setReservationAffinityUndefined: Self = StObject.set(x, "reservationAffinity", js.undefined)
    
    @scala.inline
    def setResourcePolicies(value: js.Array[String]): Self = StObject.set(x, "resourcePolicies", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setResourcePoliciesUndefined: Self = StObject.set(x, "resourcePolicies", js.undefined)
    
    @scala.inline
    def setResourcePoliciesVarargs(value: String*): Self = StObject.set(x, "resourcePolicies", js.Array(value :_*))
    
    @scala.inline
    def setScheduling(value: SchemaScheduling): Self = StObject.set(x, "scheduling", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSchedulingUndefined: Self = StObject.set(x, "scheduling", js.undefined)
    
    @scala.inline
    def setSelfLink(value: String): Self = StObject.set(x, "selfLink", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSelfLinkUndefined: Self = StObject.set(x, "selfLink", js.undefined)
    
    @scala.inline
    def setSelfLinkWithId(value: String): Self = StObject.set(x, "selfLinkWithId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSelfLinkWithIdUndefined: Self = StObject.set(x, "selfLinkWithId", js.undefined)
    
    @scala.inline
    def setServiceAccounts(value: js.Array[SchemaServiceAccount]): Self = StObject.set(x, "serviceAccounts", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setServiceAccountsUndefined: Self = StObject.set(x, "serviceAccounts", js.undefined)
    
    @scala.inline
    def setServiceAccountsVarargs(value: SchemaServiceAccount*): Self = StObject.set(x, "serviceAccounts", js.Array(value :_*))
    
    @scala.inline
    def setShieldedInstanceConfig(value: SchemaShieldedInstanceConfig): Self = StObject.set(x, "shieldedInstanceConfig", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setShieldedInstanceConfigUndefined: Self = StObject.set(x, "shieldedInstanceConfig", js.undefined)
    
    @scala.inline
    def setShieldedInstanceIntegrityPolicy(value: SchemaShieldedInstanceIntegrityPolicy): Self = StObject.set(x, "shieldedInstanceIntegrityPolicy", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setShieldedInstanceIntegrityPolicyUndefined: Self = StObject.set(x, "shieldedInstanceIntegrityPolicy", js.undefined)
    
    @scala.inline
    def setShieldedVmConfig(value: SchemaShieldedVmConfig): Self = StObject.set(x, "shieldedVmConfig", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setShieldedVmConfigUndefined: Self = StObject.set(x, "shieldedVmConfig", js.undefined)
    
    @scala.inline
    def setShieldedVmIntegrityPolicy(value: SchemaShieldedVmIntegrityPolicy): Self = StObject.set(x, "shieldedVmIntegrityPolicy", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setShieldedVmIntegrityPolicyUndefined: Self = StObject.set(x, "shieldedVmIntegrityPolicy", js.undefined)
    
    @scala.inline
    def setSourceMachineImage(value: String): Self = StObject.set(x, "sourceMachineImage", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSourceMachineImageEncryptionKey(value: SchemaCustomerEncryptionKey): Self = StObject.set(x, "sourceMachineImageEncryptionKey", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSourceMachineImageEncryptionKeyUndefined: Self = StObject.set(x, "sourceMachineImageEncryptionKey", js.undefined)
    
    @scala.inline
    def setSourceMachineImageUndefined: Self = StObject.set(x, "sourceMachineImage", js.undefined)
    
    @scala.inline
    def setStartRestricted(value: Boolean): Self = StObject.set(x, "startRestricted", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStartRestrictedUndefined: Self = StObject.set(x, "startRestricted", js.undefined)
    
    @scala.inline
    def setStatus(value: String): Self = StObject.set(x, "status", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStatusMessage(value: String): Self = StObject.set(x, "statusMessage", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStatusMessageUndefined: Self = StObject.set(x, "statusMessage", js.undefined)
    
    @scala.inline
    def setStatusUndefined: Self = StObject.set(x, "status", js.undefined)
    
    @scala.inline
    def setTags(value: SchemaTags): Self = StObject.set(x, "tags", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTagsUndefined: Self = StObject.set(x, "tags", js.undefined)
    
    @scala.inline
    def setZone(value: String): Self = StObject.set(x, "zone", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setZoneUndefined: Self = StObject.set(x, "zone", js.undefined)
  }
}
