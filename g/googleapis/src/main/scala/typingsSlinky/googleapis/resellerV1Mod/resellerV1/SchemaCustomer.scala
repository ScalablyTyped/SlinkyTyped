package typingsSlinky.googleapis.resellerV1Mod.resellerV1

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * JSON template for a customer.
  */
@js.native
trait SchemaCustomer extends js.Object {
  
  /**
    * Like the &quot;Customer email&quot; in the reseller tools, this email is
    * the secondary contact used if something happens to the customer&#39;s
    * service such as service outage or a security issue. This property is
    * required when creating a new customer and should not use the same domain
    * as customerDomain.
    */
  var alternateEmail: js.UndefOr[String] = js.native
  
  /**
    * The customer&#39;s primary domain name string. customerDomain is required
    * when creating a new customer. Do not include the www prefix in the domain
    * when adding a customer.
    */
  var customerDomain: js.UndefOr[String] = js.native
  
  /**
    * Whether the customer&#39;s primary domain has been verified.
    */
  var customerDomainVerified: js.UndefOr[Boolean] = js.native
  
  /**
    * This property will always be returned in a response as the unique
    * identifier generated by Google. In a request, this property can be either
    * the primary domain or the unique identifier generated by Google.
    */
  var customerId: js.UndefOr[String] = js.native
  
  /**
    * Identifies the resource as a customer. Value: reseller#customer
    */
  var kind: js.UndefOr[String] = js.native
  
  /**
    * Customer contact phone number. Must start with &quot;+&quot; followed by
    * the country code. The rest of the number can be contiguous numbers or
    * respect the phone local format conventions, but it must be a real phone
    * number and not, for example, &quot;123&quot;. This field is silently
    * ignored if invalid.
    */
  var phoneNumber: js.UndefOr[String] = js.native
  
  /**
    * A customer&#39;s address information. Each field has a limit of 255
    * charcters.
    */
  var postalAddress: js.UndefOr[SchemaAddress] = js.native
  
  /**
    * URL to customer&#39;s Admin console dashboard. The read-only URL is
    * generated by the API service. This is used if your client application
    * requires the customer to complete a task in the Admin console.
    */
  var resourceUiUrl: js.UndefOr[String] = js.native
}
object SchemaCustomer {
  
  @scala.inline
  def apply(): SchemaCustomer = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaCustomer]
  }
  
  @scala.inline
  implicit class SchemaCustomerOps[Self <: SchemaCustomer] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAlternateEmail(value: String): Self = this.set("alternateEmail", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAlternateEmail: Self = this.set("alternateEmail", js.undefined)
    
    @scala.inline
    def setCustomerDomain(value: String): Self = this.set("customerDomain", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomerDomain: Self = this.set("customerDomain", js.undefined)
    
    @scala.inline
    def setCustomerDomainVerified(value: Boolean): Self = this.set("customerDomainVerified", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomerDomainVerified: Self = this.set("customerDomainVerified", js.undefined)
    
    @scala.inline
    def setCustomerId(value: String): Self = this.set("customerId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomerId: Self = this.set("customerId", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = this.set("kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKind: Self = this.set("kind", js.undefined)
    
    @scala.inline
    def setPhoneNumber(value: String): Self = this.set("phoneNumber", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePhoneNumber: Self = this.set("phoneNumber", js.undefined)
    
    @scala.inline
    def setPostalAddress(value: SchemaAddress): Self = this.set("postalAddress", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePostalAddress: Self = this.set("postalAddress", js.undefined)
    
    @scala.inline
    def setResourceUiUrl(value: String): Self = this.set("resourceUiUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteResourceUiUrl: Self = this.set("resourceUiUrl", js.undefined)
  }
}
