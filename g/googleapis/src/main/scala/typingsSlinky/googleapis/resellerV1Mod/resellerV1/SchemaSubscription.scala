package typingsSlinky.googleapis.resellerV1Mod.resellerV1

import typingsSlinky.googleapis.anon.CommitmentInterval
import typingsSlinky.googleapis.anon.IsInTrial
import typingsSlinky.googleapis.anon.MinimumTransferableSeats
import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * JSON template for a subscription.
  */
@js.native
trait SchemaSubscription extends StObject {
  
  /**
    * Read-only field that returns the current billing method for a
    * subscription.
    */
  var billingMethod: js.UndefOr[String] = js.native
  
  /**
    * The creationTime property is the date when subscription was created. It
    * is in milliseconds using the Epoch format. See an example Epoch
    * converter.
    */
  var creationTime: js.UndefOr[String] = js.native
  
  /**
    * Primary domain name of the customer
    */
  var customerDomain: js.UndefOr[String] = js.native
  
  /**
    * This property will always be returned in a response as the unique
    * identifier generated by Google. In a request, this property can be either
    * the primary domain or the unique identifier generated by Google.
    */
  var customerId: js.UndefOr[String] = js.native
  
  /**
    * Google-issued code (100 char max) for discounted pricing on subscription
    * plans. Deal code must be included in insert requests in order to receive
    * discounted rate. This property is optional, regular pricing applies if
    * left empty.
    */
  var dealCode: js.UndefOr[String] = js.native
  
  /**
    * Identifies the resource as a Subscription. Value: reseller#subscription
    */
  var kind: js.UndefOr[String] = js.native
  
  /**
    * The plan property is required. In this version of the API, the G Suite
    * plans are the flexible plan, annual commitment plan, and the 30-day free
    * trial plan. For more information about the API&quot;s payment plans, see
    * the API concepts.
    */
  var plan: js.UndefOr[CommitmentInterval] = js.native
  
  /**
    * This is an optional property. This purchase order (PO) information is for
    * resellers to use for their company tracking usage. If a purchaseOrderId
    * value is given it appears in the API responses and shows up in the
    * invoice. The property accepts up to 80 plain text characters.
    */
  var purchaseOrderId: js.UndefOr[String] = js.native
  
  /**
    * Renewal settings for the annual commitment plan. For more detailed
    * information, see renewal options in the administrator help center.
    */
  var renewalSettings: js.UndefOr[SchemaRenewalSettings] = js.native
  
  /**
    * URL to customer&#39;s Subscriptions page in the Admin console. The
    * read-only URL is generated by the API service. This is used if your
    * client application requires the customer to complete a task using the
    * Subscriptions page in the Admin console.
    */
  var resourceUiUrl: js.UndefOr[String] = js.native
  
  /**
    * This is a required property. The number and limit of user seat licenses
    * in the plan.
    */
  var seats: js.UndefOr[SchemaSeats] = js.native
  
  /**
    * A required property. The skuId is a unique system identifier for a
    * product&#39;s SKU assigned to a customer in the subscription. For
    * products and SKUs available in this version of the API, see  Product and
    * SKU IDs.
    */
  var skuId: js.UndefOr[String] = js.native
  
  /**
    * Read-only external display name for a product&#39;s SKU assigned to a
    * customer in the subscription. SKU names are subject to change at
    * Google&#39;s discretion. For products and SKUs available in this version
    * of the API, see  Product and SKU IDs.
    */
  var skuName: js.UndefOr[String] = js.native
  
  /**
    * This is an optional property.
    */
  var status: js.UndefOr[String] = js.native
  
  /**
    * The subscriptionId is the subscription identifier and is unique for each
    * customer. This is a required property. Since a subscriptionId changes
    * when a subscription is updated, we recommend not using this ID as a key
    * for persistent data. Use the subscriptionId as described in retrieve all
    * reseller subscriptions.
    */
  var subscriptionId: js.UndefOr[String] = js.native
  
  /**
    * Read-only field containing an enumerable of all the current suspension
    * reasons for a subscription. It is possible for a subscription to have
    * many concurrent, overlapping suspension reasons. A subscription&#39;s
    * STATUS is SUSPENDED until all pending suspensions are removed.  Possible
    * options include:   - PENDING_TOS_ACCEPTANCE - The customer has not logged
    * in and accepted the G Suite Resold Terms of Services.   -
    * RENEWAL_WITH_TYPE_CANCEL - The customer&#39;s commitment ended and their
    * service was cancelled at the end of their term.   - RESELLER_INITIATED -
    * A manual suspension invoked by a Reseller.   - TRIAL_ENDED - The
    * customer&#39;s trial expired without a plan selected.   - OTHER - The
    * customer is suspended for an internal Google reason (e.g. abuse or
    * otherwise).
    */
  var suspensionReasons: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * Read-only transfer related information for the subscription. For more
    * information, see retrieve transferable subscriptions for a customer.
    */
  var transferInfo: js.UndefOr[MinimumTransferableSeats] = js.native
  
  /**
    * The G Suite annual commitment and flexible payment plans can be in a
    * 30-day free trial. For more information, see the API concepts.
    */
  var trialSettings: js.UndefOr[IsInTrial] = js.native
}
object SchemaSubscription {
  
  @scala.inline
  def apply(): SchemaSubscription = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaSubscription]
  }
  
  @scala.inline
  implicit class SchemaSubscriptionMutableBuilder[Self <: SchemaSubscription] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setBillingMethod(value: String): Self = StObject.set(x, "billingMethod", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setBillingMethodUndefined: Self = StObject.set(x, "billingMethod", js.undefined)
    
    @scala.inline
    def setCreationTime(value: String): Self = StObject.set(x, "creationTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCreationTimeUndefined: Self = StObject.set(x, "creationTime", js.undefined)
    
    @scala.inline
    def setCustomerDomain(value: String): Self = StObject.set(x, "customerDomain", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCustomerDomainUndefined: Self = StObject.set(x, "customerDomain", js.undefined)
    
    @scala.inline
    def setCustomerId(value: String): Self = StObject.set(x, "customerId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setCustomerIdUndefined: Self = StObject.set(x, "customerId", js.undefined)
    
    @scala.inline
    def setDealCode(value: String): Self = StObject.set(x, "dealCode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDealCodeUndefined: Self = StObject.set(x, "dealCode", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = StObject.set(x, "kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setKindUndefined: Self = StObject.set(x, "kind", js.undefined)
    
    @scala.inline
    def setPlan(value: CommitmentInterval): Self = StObject.set(x, "plan", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPlanUndefined: Self = StObject.set(x, "plan", js.undefined)
    
    @scala.inline
    def setPurchaseOrderId(value: String): Self = StObject.set(x, "purchaseOrderId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPurchaseOrderIdUndefined: Self = StObject.set(x, "purchaseOrderId", js.undefined)
    
    @scala.inline
    def setRenewalSettings(value: SchemaRenewalSettings): Self = StObject.set(x, "renewalSettings", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setRenewalSettingsUndefined: Self = StObject.set(x, "renewalSettings", js.undefined)
    
    @scala.inline
    def setResourceUiUrl(value: String): Self = StObject.set(x, "resourceUiUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setResourceUiUrlUndefined: Self = StObject.set(x, "resourceUiUrl", js.undefined)
    
    @scala.inline
    def setSeats(value: SchemaSeats): Self = StObject.set(x, "seats", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSeatsUndefined: Self = StObject.set(x, "seats", js.undefined)
    
    @scala.inline
    def setSkuId(value: String): Self = StObject.set(x, "skuId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSkuIdUndefined: Self = StObject.set(x, "skuId", js.undefined)
    
    @scala.inline
    def setSkuName(value: String): Self = StObject.set(x, "skuName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSkuNameUndefined: Self = StObject.set(x, "skuName", js.undefined)
    
    @scala.inline
    def setStatus(value: String): Self = StObject.set(x, "status", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setStatusUndefined: Self = StObject.set(x, "status", js.undefined)
    
    @scala.inline
    def setSubscriptionId(value: String): Self = StObject.set(x, "subscriptionId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSubscriptionIdUndefined: Self = StObject.set(x, "subscriptionId", js.undefined)
    
    @scala.inline
    def setSuspensionReasons(value: js.Array[String]): Self = StObject.set(x, "suspensionReasons", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSuspensionReasonsUndefined: Self = StObject.set(x, "suspensionReasons", js.undefined)
    
    @scala.inline
    def setSuspensionReasonsVarargs(value: String*): Self = StObject.set(x, "suspensionReasons", js.Array(value :_*))
    
    @scala.inline
    def setTransferInfo(value: MinimumTransferableSeats): Self = StObject.set(x, "transferInfo", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTransferInfoUndefined: Self = StObject.set(x, "transferInfo", js.undefined)
    
    @scala.inline
    def setTrialSettings(value: IsInTrial): Self = StObject.set(x, "trialSettings", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTrialSettingsUndefined: Self = StObject.set(x, "trialSettings", js.undefined)
  }
}
