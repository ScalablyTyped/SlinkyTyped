package typingsSlinky.googleapis.mirrorV1Mod.mirrorV1

import org.scalablytyped.runtime.StObject
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * A person or group that can be used as a creator or a contact.
  */
@js.native
trait SchemaContact extends StObject {
  
  /**
    * A list of voice menu commands that a contact can handle. Glass shows up
    * to three contacts for each voice menu command. If there are more than
    * that, the three contacts with the highest priority are shown for that
    * particular command.
    */
  var acceptCommands: js.UndefOr[js.Array[SchemaCommand]] = js.native
  
  /**
    * A list of MIME types that a contact supports. The contact will be shown
    * to the user if any of its acceptTypes matches any of the types of the
    * attachments on the item. If no acceptTypes are given, the contact will be
    * shown for all items.
    */
  var acceptTypes: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * The name to display for this contact.
    */
  var displayName: js.UndefOr[String] = js.native
  
  /**
    * An ID for this contact. This is generated by the application and is
    * treated as an opaque token.
    */
  var id: js.UndefOr[String] = js.native
  
  /**
    * Set of image URLs to display for a contact. Most contacts will have a
    * single image, but a &quot;group&quot; contact may include up to 8 image
    * URLs and they will be resized and cropped into a mosaic on the client.
    */
  var imageUrls: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * The type of resource. This is always mirror#contact.
    */
  var kind: js.UndefOr[String] = js.native
  
  /**
    * Primary phone number for the contact. This can be a fully-qualified
    * number, with country calling code and area code, or a local number.
    */
  var phoneNumber: js.UndefOr[String] = js.native
  
  /**
    * Priority for the contact to determine ordering in a list of contacts.
    * Contacts with higher priorities will be shown before ones with lower
    * priorities.
    */
  var priority: js.UndefOr[Double] = js.native
  
  /**
    * A list of sharing features that a contact can handle. Allowed values are:
    * - ADD_CAPTION
    */
  var sharingFeatures: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * The ID of the application that created this contact. This is populated by
    * the API
    */
  var source: js.UndefOr[String] = js.native
  
  /**
    * Name of this contact as it should be pronounced. If this contact&#39;s
    * name must be spoken as part of a voice disambiguation menu, this name is
    * used as the expected pronunciation. This is useful for contact names with
    * unpronounceable characters or whose display spelling is otherwise not
    * phonetic.
    */
  var speakableName: js.UndefOr[String] = js.native
  
  /**
    * The type for this contact. This is used for sorting in UIs. Allowed
    * values are:   - INDIVIDUAL - Represents a single person. This is the
    * default.  - GROUP - Represents more than a single person.
    */
  var `type`: js.UndefOr[String] = js.native
}
object SchemaContact {
  
  @scala.inline
  def apply(): SchemaContact = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaContact]
  }
  
  @scala.inline
  implicit class SchemaContactMutableBuilder[Self <: SchemaContact] (val x: Self) extends AnyVal {
    
    @scala.inline
    def setAcceptCommands(value: js.Array[SchemaCommand]): Self = StObject.set(x, "acceptCommands", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAcceptCommandsUndefined: Self = StObject.set(x, "acceptCommands", js.undefined)
    
    @scala.inline
    def setAcceptCommandsVarargs(value: SchemaCommand*): Self = StObject.set(x, "acceptCommands", js.Array(value :_*))
    
    @scala.inline
    def setAcceptTypes(value: js.Array[String]): Self = StObject.set(x, "acceptTypes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setAcceptTypesUndefined: Self = StObject.set(x, "acceptTypes", js.undefined)
    
    @scala.inline
    def setAcceptTypesVarargs(value: String*): Self = StObject.set(x, "acceptTypes", js.Array(value :_*))
    
    @scala.inline
    def setDisplayName(value: String): Self = StObject.set(x, "displayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setDisplayNameUndefined: Self = StObject.set(x, "displayName", js.undefined)
    
    @scala.inline
    def setId(value: String): Self = StObject.set(x, "id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setIdUndefined: Self = StObject.set(x, "id", js.undefined)
    
    @scala.inline
    def setImageUrls(value: js.Array[String]): Self = StObject.set(x, "imageUrls", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setImageUrlsUndefined: Self = StObject.set(x, "imageUrls", js.undefined)
    
    @scala.inline
    def setImageUrlsVarargs(value: String*): Self = StObject.set(x, "imageUrls", js.Array(value :_*))
    
    @scala.inline
    def setKind(value: String): Self = StObject.set(x, "kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setKindUndefined: Self = StObject.set(x, "kind", js.undefined)
    
    @scala.inline
    def setPhoneNumber(value: String): Self = StObject.set(x, "phoneNumber", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPhoneNumberUndefined: Self = StObject.set(x, "phoneNumber", js.undefined)
    
    @scala.inline
    def setPriority(value: Double): Self = StObject.set(x, "priority", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setPriorityUndefined: Self = StObject.set(x, "priority", js.undefined)
    
    @scala.inline
    def setSharingFeatures(value: js.Array[String]): Self = StObject.set(x, "sharingFeatures", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSharingFeaturesUndefined: Self = StObject.set(x, "sharingFeatures", js.undefined)
    
    @scala.inline
    def setSharingFeaturesVarargs(value: String*): Self = StObject.set(x, "sharingFeatures", js.Array(value :_*))
    
    @scala.inline
    def setSource(value: String): Self = StObject.set(x, "source", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSourceUndefined: Self = StObject.set(x, "source", js.undefined)
    
    @scala.inline
    def setSpeakableName(value: String): Self = StObject.set(x, "speakableName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setSpeakableNameUndefined: Self = StObject.set(x, "speakableName", js.undefined)
    
    @scala.inline
    def setType(value: String): Self = StObject.set(x, "type", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setTypeUndefined: Self = StObject.set(x, "type", js.undefined)
  }
}
