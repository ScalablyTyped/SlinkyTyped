package typingsSlinky.googleapis.doubleclicksearchV2Mod.doubleclicksearchV2

import typingsSlinky.googleapis.anon.ByteCount
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * A DoubleClick Search report. This object contains the report request, some
  * report metadata such as currency code, and the generated report rows or
  * report files.
  */
@js.native
trait SchemaReport extends js.Object {
  
  /**
    * Asynchronous report only. Contains a list of generated report files once
    * the report has succesfully completed.
    */
  var files: js.UndefOr[js.Array[ByteCount]] = js.native
  
  /**
    * Asynchronous report only. Id of the report.
    */
  var id: js.UndefOr[String] = js.native
  
  /**
    * Asynchronous report only. True if and only if the report has completed
    * successfully and the report files are ready to be downloaded.
    */
  var isReportReady: js.UndefOr[Boolean] = js.native
  
  /**
    * Identifies this as a Report resource. Value: the fixed string
    * doubleclicksearch#report.
    */
  var kind: js.UndefOr[String] = js.native
  
  /**
    * The request that created the report. Optional fields not specified in the
    * original request are filled with default values.
    */
  var request: js.UndefOr[SchemaReportRequest] = js.native
  
  /**
    * The number of report rows generated by the report, not including headers.
    */
  var rowCount: js.UndefOr[Double] = js.native
  
  /**
    * Synchronous report only. Generated report rows.
    */
  var rows: js.UndefOr[js.Array[SchemaReportRow]] = js.native
  
  /**
    * The currency code of all monetary values produced in the report,
    * including values that are set by users (e.g., keyword bid settings) and
    * metrics (e.g., cost and revenue). The currency code of a report is
    * determined by the statisticsCurrency field of the report request.
    */
  var statisticsCurrencyCode: js.UndefOr[String] = js.native
  
  /**
    * If all statistics of the report are sourced from the same time zone, this
    * would be it. Otherwise the field is unset.
    */
  var statisticsTimeZone: js.UndefOr[String] = js.native
}
object SchemaReport {
  
  @scala.inline
  def apply(): SchemaReport = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaReport]
  }
  
  @scala.inline
  implicit class SchemaReportOps[Self <: SchemaReport] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setFilesVarargs(value: ByteCount*): Self = this.set("files", js.Array(value :_*))
    
    @scala.inline
    def setFiles(value: js.Array[ByteCount]): Self = this.set("files", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteFiles: Self = this.set("files", js.undefined)
    
    @scala.inline
    def setId(value: String): Self = this.set("id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteId: Self = this.set("id", js.undefined)
    
    @scala.inline
    def setIsReportReady(value: Boolean): Self = this.set("isReportReady", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIsReportReady: Self = this.set("isReportReady", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = this.set("kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKind: Self = this.set("kind", js.undefined)
    
    @scala.inline
    def setRequest(value: SchemaReportRequest): Self = this.set("request", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRequest: Self = this.set("request", js.undefined)
    
    @scala.inline
    def setRowCount(value: Double): Self = this.set("rowCount", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRowCount: Self = this.set("rowCount", js.undefined)
    
    @scala.inline
    def setRowsVarargs(value: SchemaReportRow*): Self = this.set("rows", js.Array(value :_*))
    
    @scala.inline
    def setRows(value: js.Array[SchemaReportRow]): Self = this.set("rows", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRows: Self = this.set("rows", js.undefined)
    
    @scala.inline
    def setStatisticsCurrencyCode(value: String): Self = this.set("statisticsCurrencyCode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStatisticsCurrencyCode: Self = this.set("statisticsCurrencyCode", js.undefined)
    
    @scala.inline
    def setStatisticsTimeZone(value: String): Self = this.set("statisticsTimeZone", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStatisticsTimeZone: Self = this.set("statisticsTimeZone", js.undefined)
  }
}
