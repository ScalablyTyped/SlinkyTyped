package typingsSlinky.googleapis.appengineV1betaMod.appengineV1beta

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait SchemaOAuth2ClientInfo extends js.Object {
  
  /**
    * Application name to be used in OAuth consent screen.
    */
  var applicationName: js.UndefOr[String] = js.native
  
  /**
    * Nameof the client to be generated. Optional - If not provided, the name
    * will be autogenerated by the backend.
    */
  var clientName: js.UndefOr[String] = js.native
  
  /**
    * Developer&#39;s information to be used in OAuth consent screen.
    */
  var developerEmailAddress: js.UndefOr[String] = js.native
}
object SchemaOAuth2ClientInfo {
  
  @scala.inline
  def apply(): SchemaOAuth2ClientInfo = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaOAuth2ClientInfo]
  }
  
  @scala.inline
  implicit class SchemaOAuth2ClientInfoOps[Self <: SchemaOAuth2ClientInfo] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setApplicationName(value: String): Self = this.set("applicationName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteApplicationName: Self = this.set("applicationName", js.undefined)
    
    @scala.inline
    def setClientName(value: String): Self = this.set("clientName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteClientName: Self = this.set("clientName", js.undefined)
    
    @scala.inline
    def setDeveloperEmailAddress(value: String): Self = this.set("developerEmailAddress", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDeveloperEmailAddress: Self = this.set("developerEmailAddress", js.undefined)
  }
}
