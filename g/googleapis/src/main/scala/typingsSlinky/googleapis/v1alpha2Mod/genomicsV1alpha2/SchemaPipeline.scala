package typingsSlinky.googleapis.v1alpha2Mod.genomicsV1alpha2

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * The pipeline object. Represents a transformation from a set of input
  * parameters to a set of output parameters. The transformation is defined as
  * a docker image and command to run within that image. Each pipeline is run
  * on a Google Compute Engine VM. A pipeline can be created with the `create`
  * method and then later run with the `run` method, or a pipeline can be
  * defined and run all at once with the `run` method.
  */
@js.native
trait SchemaPipeline extends js.Object {
  
  /**
    * User-specified description.
    */
  var description: js.UndefOr[String] = js.native
  
  /**
    * Specifies the docker run information.
    */
  var docker: js.UndefOr[SchemaDockerExecutor] = js.native
  
  /**
    * Input parameters of the pipeline.
    */
  var inputParameters: js.UndefOr[js.Array[SchemaPipelineParameter]] = js.native
  
  /**
    * Required. A user specified pipeline name that does not have to be unique.
    * This name can be used for filtering Pipelines in ListPipelines.
    */
  var name: js.UndefOr[String] = js.native
  
  /**
    * Output parameters of the pipeline.
    */
  var outputParameters: js.UndefOr[js.Array[SchemaPipelineParameter]] = js.native
  
  /**
    * Unique pipeline id that is generated by the service when CreatePipeline
    * is called. Cannot be specified in the Pipeline used in the
    * CreatePipelineRequest, and will be populated in the response to
    * CreatePipeline and all subsequent Get and List calls. Indicates that the
    * service has registered this pipeline.
    */
  var pipelineId: js.UndefOr[String] = js.native
  
  /**
    * Required. The project in which to create the pipeline. The caller must
    * have WRITE access.
    */
  var projectId: js.UndefOr[String] = js.native
  
  /**
    * Required. Specifies resource requirements for the pipeline run. Required
    * fields:  * minimumCpuCores  * minimumRamGb
    */
  var resources: js.UndefOr[SchemaPipelineResources] = js.native
}
object SchemaPipeline {
  
  @scala.inline
  def apply(): SchemaPipeline = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[SchemaPipeline]
  }
  
  @scala.inline
  implicit class SchemaPipelineOps[Self <: SchemaPipeline] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setDescription(value: String): Self = this.set("description", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDescription: Self = this.set("description", js.undefined)
    
    @scala.inline
    def setDocker(value: SchemaDockerExecutor): Self = this.set("docker", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDocker: Self = this.set("docker", js.undefined)
    
    @scala.inline
    def setInputParametersVarargs(value: SchemaPipelineParameter*): Self = this.set("inputParameters", js.Array(value :_*))
    
    @scala.inline
    def setInputParameters(value: js.Array[SchemaPipelineParameter]): Self = this.set("inputParameters", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteInputParameters: Self = this.set("inputParameters", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = this.set("name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteName: Self = this.set("name", js.undefined)
    
    @scala.inline
    def setOutputParametersVarargs(value: SchemaPipelineParameter*): Self = this.set("outputParameters", js.Array(value :_*))
    
    @scala.inline
    def setOutputParameters(value: js.Array[SchemaPipelineParameter]): Self = this.set("outputParameters", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteOutputParameters: Self = this.set("outputParameters", js.undefined)
    
    @scala.inline
    def setPipelineId(value: String): Self = this.set("pipelineId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePipelineId: Self = this.set("pipelineId", js.undefined)
    
    @scala.inline
    def setProjectId(value: String): Self = this.set("projectId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteProjectId: Self = this.set("projectId", js.undefined)
    
    @scala.inline
    def setResources(value: SchemaPipelineResources): Self = this.set("resources", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteResources: Self = this.set("resources", js.undefined)
  }
}
