package typingsSlinky.gapiClientMirror.gapi.client.mirror

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Contact extends js.Object {
  
  /**
    * A list of voice menu commands that a contact can handle. Glass shows up to three contacts for each voice menu command. If there are more than that, the
    * three contacts with the highest priority are shown for that particular command.
    */
  var acceptCommands: js.UndefOr[js.Array[Command]] = js.native
  
  /**
    * A list of MIME types that a contact supports. The contact will be shown to the user if any of its acceptTypes matches any of the types of the
    * attachments on the item. If no acceptTypes are given, the contact will be shown for all items.
    */
  var acceptTypes: js.UndefOr[js.Array[String]] = js.native
  
  /** The name to display for this contact. */
  var displayName: js.UndefOr[String] = js.native
  
  /** An ID for this contact. This is generated by the application and is treated as an opaque token. */
  var id: js.UndefOr[String] = js.native
  
  /**
    * Set of image URLs to display for a contact. Most contacts will have a single image, but a "group" contact may include up to 8 image URLs and they will
    * be resized and cropped into a mosaic on the client.
    */
  var imageUrls: js.UndefOr[js.Array[String]] = js.native
  
  /** The type of resource. This is always mirror#contact. */
  var kind: js.UndefOr[String] = js.native
  
  /** Primary phone number for the contact. This can be a fully-qualified number, with country calling code and area code, or a local number. */
  var phoneNumber: js.UndefOr[String] = js.native
  
  /** Priority for the contact to determine ordering in a list of contacts. Contacts with higher priorities will be shown before ones with lower priorities. */
  var priority: js.UndefOr[Double] = js.native
  
  /**
    * A list of sharing features that a contact can handle. Allowed values are:
    * - ADD_CAPTION
    */
  var sharingFeatures: js.UndefOr[js.Array[String]] = js.native
  
  /** The ID of the application that created this contact. This is populated by the API */
  var source: js.UndefOr[String] = js.native
  
  /**
    * Name of this contact as it should be pronounced. If this contact's name must be spoken as part of a voice disambiguation menu, this name is used as the
    * expected pronunciation. This is useful for contact names with unpronounceable characters or whose display spelling is otherwise not phonetic.
    */
  var speakableName: js.UndefOr[String] = js.native
  
  /**
    * The type for this contact. This is used for sorting in UIs. Allowed values are:
    * - INDIVIDUAL - Represents a single person. This is the default.
    * - GROUP - Represents more than a single person.
    */
  var `type`: js.UndefOr[String] = js.native
}
object Contact {
  
  @scala.inline
  def apply(): Contact = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Contact]
  }
  
  @scala.inline
  implicit class ContactOps[Self <: Contact] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAcceptCommandsVarargs(value: Command*): Self = this.set("acceptCommands", js.Array(value :_*))
    
    @scala.inline
    def setAcceptCommands(value: js.Array[Command]): Self = this.set("acceptCommands", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAcceptCommands: Self = this.set("acceptCommands", js.undefined)
    
    @scala.inline
    def setAcceptTypesVarargs(value: String*): Self = this.set("acceptTypes", js.Array(value :_*))
    
    @scala.inline
    def setAcceptTypes(value: js.Array[String]): Self = this.set("acceptTypes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAcceptTypes: Self = this.set("acceptTypes", js.undefined)
    
    @scala.inline
    def setDisplayName(value: String): Self = this.set("displayName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDisplayName: Self = this.set("displayName", js.undefined)
    
    @scala.inline
    def setId(value: String): Self = this.set("id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteId: Self = this.set("id", js.undefined)
    
    @scala.inline
    def setImageUrlsVarargs(value: String*): Self = this.set("imageUrls", js.Array(value :_*))
    
    @scala.inline
    def setImageUrls(value: js.Array[String]): Self = this.set("imageUrls", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteImageUrls: Self = this.set("imageUrls", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = this.set("kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKind: Self = this.set("kind", js.undefined)
    
    @scala.inline
    def setPhoneNumber(value: String): Self = this.set("phoneNumber", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePhoneNumber: Self = this.set("phoneNumber", js.undefined)
    
    @scala.inline
    def setPriority(value: Double): Self = this.set("priority", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePriority: Self = this.set("priority", js.undefined)
    
    @scala.inline
    def setSharingFeaturesVarargs(value: String*): Self = this.set("sharingFeatures", js.Array(value :_*))
    
    @scala.inline
    def setSharingFeatures(value: js.Array[String]): Self = this.set("sharingFeatures", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSharingFeatures: Self = this.set("sharingFeatures", js.undefined)
    
    @scala.inline
    def setSource(value: String): Self = this.set("source", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSource: Self = this.set("source", js.undefined)
    
    @scala.inline
    def setSpeakableName(value: String): Self = this.set("speakableName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSpeakableName: Self = this.set("speakableName", js.undefined)
    
    @scala.inline
    def setType(value: String): Self = this.set("type", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteType: Self = this.set("type", js.undefined)
  }
}
