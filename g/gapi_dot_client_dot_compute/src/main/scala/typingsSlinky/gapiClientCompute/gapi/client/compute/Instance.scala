package typingsSlinky.gapiClientCompute.gapi.client.compute

import typingsSlinky.std.Record
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Instance extends js.Object {
  
  /**
    * Allows this instance to send and receive packets with non-matching destination or source IPs. This is required if you plan to use this instance to
    * forward routes. For more information, see Enabling IP Forwarding.
    */
  var canIpForward: js.UndefOr[Boolean] = js.native
  
  /** [Output Only] The CPU platform used by this instance. */
  var cpuPlatform: js.UndefOr[String] = js.native
  
  /** [Output Only] Creation timestamp in RFC3339 text format. */
  var creationTimestamp: js.UndefOr[String] = js.native
  
  /** An optional description of this resource. Provide this property when you create the resource. */
  var description: js.UndefOr[String] = js.native
  
  /** Array of disks associated with this instance. Persistent disks must be created before you can assign them. */
  var disks: js.UndefOr[js.Array[AttachedDisk]] = js.native
  
  /** List of the type and count of accelerator cards attached to the instance. */
  var guestAccelerators: js.UndefOr[js.Array[AcceleratorConfig]] = js.native
  
  /** [Output Only] The unique identifier for the resource. This identifier is defined by the server. */
  var id: js.UndefOr[String] = js.native
  
  /** [Output Only] Type of the resource. Always compute#instance for instances. */
  var kind: js.UndefOr[String] = js.native
  
  /**
    * A fingerprint for this request, which is essentially a hash of the metadata's contents and used for optimistic locking. The fingerprint is initially
    * generated by Compute Engine and changes after every request to modify or update metadata. You must always provide an up-to-date fingerprint hash in
    * order to update or change metadata.
    *
    * To see the latest fingerprint, make get() request to the instance.
    */
  var labelFingerprint: js.UndefOr[String] = js.native
  
  /** Labels to apply to this instance. These can be later modified by the setLabels method. */
  var labels: js.UndefOr[Record[String, String]] = js.native
  
  /**
    * Full or partial URL of the machine type resource to use for this instance, in the format: zones/zone/machineTypes/machine-type. This is provided by the
    * client when the instance is created. For example, the following is a valid partial url to a predefined machine type:
    *
    * zones/us-central1-f/machineTypes/n1-standard-1
    *
    * To create a custom machine type, provide a URL to a machine type in the following format, where CPUS is 1 or an even number up to 32 (2, 4, 6, ... 24,
    * etc), and MEMORY is the total memory for this instance. Memory must be a multiple of 256 MB and must be supplied in MB (e.g. 5 GB of memory is 5120
    * MB):
    *
    * zones/zone/machineTypes/custom-CPUS-MEMORY
    *
    * For example: zones/us-central1-f/machineTypes/custom-4-5120
    *
    * For a full list of restrictions, read the Specifications for custom machine types.
    */
  var machineType: js.UndefOr[String] = js.native
  
  /** The metadata key/value pairs assigned to this instance. This includes custom metadata and predefined keys. */
  var metadata: js.UndefOr[Metadata] = js.native
  
  /**
    * Specifies a minimum CPU platform for the VM instance. Applicable values are the friendly names of CPU platforms, such as minCpuPlatform: "Intel
    * Haswell" or minCpuPlatform: "Intel Sandy Bridge".
    */
  var minCpuPlatform: js.UndefOr[String] = js.native
  
  /**
    * The name of the resource, provided by the client when initially creating the resource. The resource name must be 1-63 characters long, and comply with
    * RFC1035. Specifically, the name must be 1-63 characters long and match the regular expression [a-z]([-a-z0-9]&#42;[a-z0-9])? which means the first
    * character must be a lowercase letter, and all following characters must be a dash, lowercase letter, or digit, except the last character, which cannot
    * be a dash.
    */
  var name: js.UndefOr[String] = js.native
  
  /**
    * An array of network configurations for this instance. These specify how interfaces are configured to interact with other network services, such as
    * connecting to the internet. Multiple interfaces are supported per instance.
    */
  var networkInterfaces: js.UndefOr[js.Array[NetworkInterface]] = js.native
  
  /** Sets the scheduling options for this instance. */
  var scheduling: js.UndefOr[Scheduling] = js.native
  
  /** [Output Only] Server-defined URL for this resource. */
  var selfLink: js.UndefOr[String] = js.native
  
  /**
    * A list of service accounts, with their specified scopes, authorized for this instance. Only one service account per VM instance is supported.
    *
    * Service accounts generate access tokens that can be accessed through the metadata server and used to authenticate applications on the instance. See
    * Service Accounts for more information.
    */
  var serviceAccounts: js.UndefOr[js.Array[ServiceAccount]] = js.native
  
  /** [Output Only] Whether a VM has been restricted for start because Compute Engine has detected suspicious activity. */
  var startRestricted: js.UndefOr[Boolean] = js.native
  
  /**
    * [Output Only] The status of the instance. One of the following values: PROVISIONING, STAGING, RUNNING, STOPPING, STOPPED, SUSPENDING, SUSPENDED, and
    * TERMINATED.
    */
  var status: js.UndefOr[String] = js.native
  
  /** [Output Only] An optional, human-readable explanation of the status. */
  var statusMessage: js.UndefOr[String] = js.native
  
  /**
    * A list of tags to apply to this instance. Tags are used to identify valid sources or targets for network firewalls and are specified by the client
    * during instance creation. The tags can be later modified by the setTags method. Each tag within the list must comply with RFC1035.
    */
  var tags: js.UndefOr[Tags] = js.native
  
  /** [Output Only] URL of the zone where the instance resides. */
  var zone: js.UndefOr[String] = js.native
}
object Instance {
  
  @scala.inline
  def apply(): Instance = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Instance]
  }
  
  @scala.inline
  implicit class InstanceOps[Self <: Instance] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setCanIpForward(value: Boolean): Self = this.set("canIpForward", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCanIpForward: Self = this.set("canIpForward", js.undefined)
    
    @scala.inline
    def setCpuPlatform(value: String): Self = this.set("cpuPlatform", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCpuPlatform: Self = this.set("cpuPlatform", js.undefined)
    
    @scala.inline
    def setCreationTimestamp(value: String): Self = this.set("creationTimestamp", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreationTimestamp: Self = this.set("creationTimestamp", js.undefined)
    
    @scala.inline
    def setDescription(value: String): Self = this.set("description", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDescription: Self = this.set("description", js.undefined)
    
    @scala.inline
    def setDisksVarargs(value: AttachedDisk*): Self = this.set("disks", js.Array(value :_*))
    
    @scala.inline
    def setDisks(value: js.Array[AttachedDisk]): Self = this.set("disks", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDisks: Self = this.set("disks", js.undefined)
    
    @scala.inline
    def setGuestAcceleratorsVarargs(value: AcceleratorConfig*): Self = this.set("guestAccelerators", js.Array(value :_*))
    
    @scala.inline
    def setGuestAccelerators(value: js.Array[AcceleratorConfig]): Self = this.set("guestAccelerators", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteGuestAccelerators: Self = this.set("guestAccelerators", js.undefined)
    
    @scala.inline
    def setId(value: String): Self = this.set("id", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteId: Self = this.set("id", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = this.set("kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKind: Self = this.set("kind", js.undefined)
    
    @scala.inline
    def setLabelFingerprint(value: String): Self = this.set("labelFingerprint", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLabelFingerprint: Self = this.set("labelFingerprint", js.undefined)
    
    @scala.inline
    def setLabels(value: Record[String, String]): Self = this.set("labels", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteLabels: Self = this.set("labels", js.undefined)
    
    @scala.inline
    def setMachineType(value: String): Self = this.set("machineType", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMachineType: Self = this.set("machineType", js.undefined)
    
    @scala.inline
    def setMetadata(value: Metadata): Self = this.set("metadata", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMetadata: Self = this.set("metadata", js.undefined)
    
    @scala.inline
    def setMinCpuPlatform(value: String): Self = this.set("minCpuPlatform", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMinCpuPlatform: Self = this.set("minCpuPlatform", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = this.set("name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteName: Self = this.set("name", js.undefined)
    
    @scala.inline
    def setNetworkInterfacesVarargs(value: NetworkInterface*): Self = this.set("networkInterfaces", js.Array(value :_*))
    
    @scala.inline
    def setNetworkInterfaces(value: js.Array[NetworkInterface]): Self = this.set("networkInterfaces", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteNetworkInterfaces: Self = this.set("networkInterfaces", js.undefined)
    
    @scala.inline
    def setScheduling(value: Scheduling): Self = this.set("scheduling", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteScheduling: Self = this.set("scheduling", js.undefined)
    
    @scala.inline
    def setSelfLink(value: String): Self = this.set("selfLink", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSelfLink: Self = this.set("selfLink", js.undefined)
    
    @scala.inline
    def setServiceAccountsVarargs(value: ServiceAccount*): Self = this.set("serviceAccounts", js.Array(value :_*))
    
    @scala.inline
    def setServiceAccounts(value: js.Array[ServiceAccount]): Self = this.set("serviceAccounts", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteServiceAccounts: Self = this.set("serviceAccounts", js.undefined)
    
    @scala.inline
    def setStartRestricted(value: Boolean): Self = this.set("startRestricted", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStartRestricted: Self = this.set("startRestricted", js.undefined)
    
    @scala.inline
    def setStatus(value: String): Self = this.set("status", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStatus: Self = this.set("status", js.undefined)
    
    @scala.inline
    def setStatusMessage(value: String): Self = this.set("statusMessage", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStatusMessage: Self = this.set("statusMessage", js.undefined)
    
    @scala.inline
    def setTags(value: Tags): Self = this.set("tags", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTags: Self = this.set("tags", js.undefined)
    
    @scala.inline
    def setZone(value: String): Self = this.set("zone", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteZone: Self = this.set("zone", js.undefined)
  }
}
