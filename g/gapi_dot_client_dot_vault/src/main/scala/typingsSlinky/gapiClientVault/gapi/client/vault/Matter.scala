package typingsSlinky.gapiClientVault.gapi.client.vault

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Matter extends js.Object {
  
  /** The description of the matter. */
  var description: js.UndefOr[String] = js.native
  
  /**
    * The matter ID which is generated by the server.
    * Should be blank when creating a new matter.
    */
  var matterId: js.UndefOr[String] = js.native
  
  /**
    * List of users and access to the matter. Currently there is no programmer
    * defined limit on the number of permissions a matter can have.
    */
  var matterPermissions: js.UndefOr[js.Array[MatterPermission]] = js.native
  
  /** The name of the matter. */
  var name: js.UndefOr[String] = js.native
  
  /** The state of the matter. */
  var state: js.UndefOr[String] = js.native
}
object Matter {
  
  @scala.inline
  def apply(): Matter = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Matter]
  }
  
  @scala.inline
  implicit class MatterOps[Self <: Matter] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setDescription(value: String): Self = this.set("description", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDescription: Self = this.set("description", js.undefined)
    
    @scala.inline
    def setMatterId(value: String): Self = this.set("matterId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMatterId: Self = this.set("matterId", js.undefined)
    
    @scala.inline
    def setMatterPermissionsVarargs(value: MatterPermission*): Self = this.set("matterPermissions", js.Array(value :_*))
    
    @scala.inline
    def setMatterPermissions(value: js.Array[MatterPermission]): Self = this.set("matterPermissions", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMatterPermissions: Self = this.set("matterPermissions", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = this.set("name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteName: Self = this.set("name", js.undefined)
    
    @scala.inline
    def setState(value: String): Self = this.set("state", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteState: Self = this.set("state", js.undefined)
  }
}
