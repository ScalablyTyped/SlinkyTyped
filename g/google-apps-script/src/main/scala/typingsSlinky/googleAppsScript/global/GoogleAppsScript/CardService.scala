package typingsSlinky.googleAppsScript.global.GoogleAppsScript

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@JSGlobal("GoogleAppsScript.Card_Service")
@js.native
object CardService extends js.Object {
  
  /**
    * An enum value that specifies whether the composed email is a standalone or reply draft.
    */
  @js.native
  object ComposedEmailType extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ComposedEmailType with Double
      ] = js.native
    
    /* 0 */ val REPLY_AS_DRAFT: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ComposedEmailType.REPLY_AS_DRAFT with Double = js.native
    
    /* 1 */ val STANDALONE_DRAFT: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ComposedEmailType.STANDALONE_DRAFT with Double = js.native
  }
  
  /**
    * An enum value that specifies the content type of the content generated by a UpdateDraftActionResponse.
    */
  @js.native
  object ContentType extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ContentType with Double
      ] = js.native
    
    /* 2 */ val IMMUTABLE_HTML: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ContentType.IMMUTABLE_HTML with Double = js.native
    
    /* 1 */ val MUTABLE_HTML: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ContentType.MUTABLE_HTML with Double = js.native
    
    /* 0 */ val TEXT: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ContentType.TEXT with Double = js.native
  }
  
  /**
    * Predefined icons that can be used in various UI objects, such as ImageButton or KeyValue widgets.
    */
  @js.native
  object Icon extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon with Double] = js.native
    
    /* 1 */ val AIRPLANE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.AIRPLANE with Double = js.native
    
    /* 2 */ val BOOKMARK: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.BOOKMARK with Double = js.native
    
    /* 3 */ val BUS: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.BUS with Double = js.native
    
    /* 4 */ val CAR: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.CAR with Double = js.native
    
    /* 5 */ val CLOCK: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.CLOCK with Double = js.native
    
    /* 6 */ val CONFIRMATION_NUMBER_ICON: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.CONFIRMATION_NUMBER_ICON with Double = js.native
    
    /* 8 */ val DESCRIPTION: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.DESCRIPTION with Double = js.native
    
    /* 7 */ val DOLLAR: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.DOLLAR with Double = js.native
    
    /* 9 */ val EMAIL: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.EMAIL with Double = js.native
    
    /* 10 */ val EVENT_PERFORMER: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.EVENT_PERFORMER with Double = js.native
    
    /* 11 */ val EVENT_SEAT: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.EVENT_SEAT with Double = js.native
    
    /* 12 */ val FLIGHT_ARRIVAL: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.FLIGHT_ARRIVAL with Double = js.native
    
    /* 13 */ val FLIGHT_DEPARTURE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.FLIGHT_DEPARTURE with Double = js.native
    
    /* 14 */ val HOTEL: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.HOTEL with Double = js.native
    
    /* 15 */ val HOTEL_ROOM_TYPE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.HOTEL_ROOM_TYPE with Double = js.native
    
    /* 16 */ val INVITE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.INVITE with Double = js.native
    
    /* 17 */ val MAP_PIN: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.MAP_PIN with Double = js.native
    
    /* 18 */ val MEMBERSHIP: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.MEMBERSHIP with Double = js.native
    
    /* 19 */ val MULTIPLE_PEOPLE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.MULTIPLE_PEOPLE with Double = js.native
    
    /* 0 */ val NONE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.NONE with Double = js.native
    
    /* 20 */ val OFFER: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.OFFER with Double = js.native
    
    /* 21 */ val PERSON: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.PERSON with Double = js.native
    
    /* 22 */ val PHONE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.PHONE with Double = js.native
    
    /* 23 */ val RESTAURANT_ICON: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.RESTAURANT_ICON with Double = js.native
    
    /* 24 */ val SHOPPING_CART: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.SHOPPING_CART with Double = js.native
    
    /* 25 */ val STAR: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.STAR with Double = js.native
    
    /* 26 */ val STORE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.STORE with Double = js.native
    
    /* 27 */ val TICKET: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.TICKET with Double = js.native
    
    /* 28 */ val TRAIN: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.TRAIN with Double = js.native
    
    /* 29 */ val VIDEO_CAMERA: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.VIDEO_CAMERA with Double = js.native
    
    /* 30 */ val VIDEO_PLAY: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.Icon.VIDEO_PLAY with Double = js.native
  }
  
  /**
    * An enum that defines an image cropping style.
    */
  @js.native
  object ImageStyle extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ImageStyle with Double
      ] = js.native
    
    /* 1 */ val CIRCLE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ImageStyle.CIRCLE with Double = js.native
    
    /* 0 */ val SQUARE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.ImageStyle.SQUARE with Double = js.native
  }
  
  /**
    * An enum type that specifies the type of loading or progress indicator to display while an Action is being processed.
    */
  @js.native
  object LoadIndicator extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.LoadIndicator with Double
      ] = js.native
    
    /* 1 */ val NONE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.LoadIndicator.NONE with Double = js.native
    
    /* 0 */ val SPINNER: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.LoadIndicator.SPINNER with Double = js.native
  }
  
  /**
    * An enum that specifies what to do when a URL opened through an OpenLink is closed.
    *
    * When a link is opened, the client either forgets about it or waits until the window is closed.
    * The implementation depends on the client platform capabilities. OnClose may cause OpenAs to be ignored; if the client platform cannot support both selected values together,
    * OnClose takes precedence.
    */
  @js.native
  object OnClose extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.OnClose with Double] = js.native
    
    /* 0 */ val NOTHING: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.OnClose.NOTHING with Double = js.native
    
    /* 1 */ val RELOAD_ADD_ON: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.OnClose.RELOAD_ADD_ON with Double = js.native
  }
  
  /**
    * An enum that specifies how to open a URL.
    *
    * The client can open a URL as either a full size window (if that is the frame used by the
    * client), or an overlay (such as a pop-up). The implementation depends on the client platform
    * capabilities, and the value selected may be ignored if the client does not support it. FULL_SIZE is supported by all clients.
    *
    * Using OnClose may cause OpenAs to be ignored; if the client platform cannot
    * support both selected values together, OnClose takes precedence.
    */
  @js.native
  object OpenAs extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.OpenAs with Double] = js.native
    
    /* 0 */ val FULL_SIZE: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.OpenAs.FULL_SIZE with Double = js.native
    
    /* 1 */ val OVERLAY: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.OpenAs.OVERLAY with Double = js.native
  }
  
  /**
    * Type of selection input.
    */
  @js.native
  object SelectionInputType extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType with Double
      ] = js.native
    
    /* 0 */ val CHECK_BOX: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType.CHECK_BOX with Double = js.native
    
    /* 2 */ val DROPDOWN: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType.DROPDOWN with Double = js.native
    
    /* 1 */ val RADIO_BUTTON: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.SelectionInputType.RADIO_BUTTON with Double = js.native
  }
  
  /**
    * An enum that specifies the style for TextButton.
    *
    * TEXT is the default; it renders a simple text button with clear background.
    * FILLED buttons have a background color you can set with
    * TextButton.setBackgroundColor(backgroundColor).
    */
  @js.native
  object TextButtonStyle extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.TextButtonStyle with Double
      ] = js.native
    
    /* 1 */ val FILLED: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.TextButtonStyle.FILLED with Double = js.native
    
    /* 0 */ val TEXT: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.TextButtonStyle.TEXT with Double = js.native
  }
  
  /**
    * An enum value that specifies the type of an UpdateDraftBodyAction.
    */
  @js.native
  object UpdateDraftBodyType extends js.Object {
    
    @JSBracketAccess
    def apply(value: Double): js.UndefOr[
        typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.UpdateDraftBodyType with Double
      ] = js.native
    
    /* 0 */ val IN_PLACE_INSERT: typingsSlinky.googleAppsScript.GoogleAppsScript.CardService.UpdateDraftBodyType.IN_PLACE_INSERT with Double = js.native
  }
}
