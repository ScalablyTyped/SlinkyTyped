package typingsSlinky.googleAppsScript.GoogleAppsScript.JDBC

import typingsSlinky.googleAppsScript.GoogleAppsScript.Integer
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * A JDBC Connection. For documentation of this class, see
  * java.sql.Connection.
  */
@js.native
trait JdbcConnection extends js.Object {
  
  def clearWarnings(): Unit = js.native
  
  def close(): Unit = js.native
  
  def commit(): Unit = js.native
  
  def createArrayOf(typeName: String, elements: js.Array[_]): JdbcArray = js.native
  
  def createBlob(): JdbcBlob = js.native
  
  def createClob(): JdbcClob = js.native
  
  def createNClob(): JdbcClob = js.native
  
  def createSQLXML(): JdbcSQLXML = js.native
  
  def createStatement(): JdbcStatement = js.native
  def createStatement(resultSetType: Integer, resultSetConcurrency: Integer): JdbcStatement = js.native
  def createStatement(resultSetType: Integer, resultSetConcurrency: Integer, resultSetHoldability: Integer): JdbcStatement = js.native
  
  def createStruct(typeName: String, attributes: js.Array[_]): JdbcStruct = js.native
  
  def getAutoCommit(): Boolean = js.native
  
  def getCatalog(): String = js.native
  
  def getHoldability(): Integer = js.native
  
  def getMetaData(): JdbcDatabaseMetaData = js.native
  
  def getTransactionIsolation(): Integer = js.native
  
  def getWarnings(): js.Array[String] = js.native
  
  def isClosed(): Boolean = js.native
  
  def isReadOnly(): Boolean = js.native
  
  def isValid(timeout: Integer): Boolean = js.native
  
  def nativeSQL(sql: String): String = js.native
  
  def prepareCall(sql: String): JdbcCallableStatement = js.native
  def prepareCall(sql: String, resultSetType: Integer, resultSetConcurrency: Integer): JdbcCallableStatement = js.native
  def prepareCall(sql: String, resultSetType: Integer, resultSetConcurrency: Integer, resultSetHoldability: Integer): JdbcCallableStatement = js.native
  
  def prepareStatement(sql: String): JdbcPreparedStatement = js.native
  def prepareStatement(sql: String, autoGeneratedKeys: Integer): JdbcPreparedStatement = js.native
  def prepareStatement(sql: String, resultSetType: Integer, resultSetConcurrency: Integer): JdbcPreparedStatement = js.native
  def prepareStatement(sql: String, resultSetType: Integer, resultSetConcurrency: Integer, resultSetHoldability: Integer): JdbcPreparedStatement = js.native
  
  def prepareStatementByIndex(sql: String, indices: js.Array[Integer]): JdbcPreparedStatement = js.native
  
  def prepareStatementByName(sql: String, columnNames: js.Array[String]): JdbcPreparedStatement = js.native
  
  def releaseSavepoint(savepoint: JdbcSavepoint): Unit = js.native
  
  def rollback(): Unit = js.native
  def rollback(savepoint: JdbcSavepoint): Unit = js.native
  
  def setAutoCommit(autoCommit: Boolean): Unit = js.native
  
  def setCatalog(catalog: String): Unit = js.native
  
  def setHoldability(holdability: Integer): Unit = js.native
  
  def setReadOnly(readOnly: Boolean): Unit = js.native
  
  def setSavepoint(): JdbcSavepoint = js.native
  def setSavepoint(name: String): JdbcSavepoint = js.native
  
  def setTransactionIsolation(level: Integer): Unit = js.native
}
