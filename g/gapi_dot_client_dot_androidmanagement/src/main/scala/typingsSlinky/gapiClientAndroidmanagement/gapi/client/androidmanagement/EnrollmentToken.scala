package typingsSlinky.gapiClientAndroidmanagement.gapi.client.androidmanagement

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait EnrollmentToken extends js.Object {
  
  /**
    * Optional, arbitrary data associated with the enrollment token. This could contain, for example, the id of an org unit to which the device is assigned
    * after enrollment. After a device enrolls with the token, this data will be exposed in the enrollment_token_data field of the Device resource. The data
    * must be 1024 characters or less; otherwise, the creation request will fail.
    */
  var additionalData: js.UndefOr[String] = js.native
  
  /** The duration of the token. If not specified, the duration will be 1 hour. The allowed range is 1 minute to 30 days. */
  var duration: js.UndefOr[String] = js.native
  
  /** The expiration time of the token. This is a read-only field generated by the server. */
  var expirationTimestamp: js.UndefOr[String] = js.native
  
  /**
    * The name of the enrollment token, which is generated by the server during creation, in the form
    * enterprises/{enterpriseId}/enrollmentTokens/{enrollmentTokenId}
    */
  var name: js.UndefOr[String] = js.native
  
  /**
    * The name of the policy that will be initially applied to the enrolled device in the form enterprises/{enterpriseId}/policies/{policyId}. If not
    * specified, the policy with id default is applied. It is permissible to only specify the policyId when updating this field as long as the policyId
    * contains no slashes since the rest of the policy name can be inferred from context.
    */
  var policyName: js.UndefOr[String] = js.native
  
  /**
    * A JSON string whose UTF-8 representation can be used to generate a QR code to enroll a device with this enrollment token. To enroll a device using NFC,
    * the NFC record must contain a serialized java.util.Properties representation of the properties in the JSON.
    */
  var qrCode: js.UndefOr[String] = js.native
  
  /** The token value which is passed to the device and authorizes the device to enroll. This is a read-only field generated by the server. */
  var value: js.UndefOr[String] = js.native
}
object EnrollmentToken {
  
  @scala.inline
  def apply(): EnrollmentToken = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[EnrollmentToken]
  }
  
  @scala.inline
  implicit class EnrollmentTokenOps[Self <: EnrollmentToken] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAdditionalData(value: String): Self = this.set("additionalData", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteAdditionalData: Self = this.set("additionalData", js.undefined)
    
    @scala.inline
    def setDuration(value: String): Self = this.set("duration", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDuration: Self = this.set("duration", js.undefined)
    
    @scala.inline
    def setExpirationTimestamp(value: String): Self = this.set("expirationTimestamp", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteExpirationTimestamp: Self = this.set("expirationTimestamp", js.undefined)
    
    @scala.inline
    def setName(value: String): Self = this.set("name", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteName: Self = this.set("name", js.undefined)
    
    @scala.inline
    def setPolicyName(value: String): Self = this.set("policyName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePolicyName: Self = this.set("policyName", js.undefined)
    
    @scala.inline
    def setQrCode(value: String): Self = this.set("qrCode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteQrCode: Self = this.set("qrCode", js.undefined)
    
    @scala.inline
    def setValue(value: String): Self = this.set("value", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteValue: Self = this.set("value", js.undefined)
  }
}
