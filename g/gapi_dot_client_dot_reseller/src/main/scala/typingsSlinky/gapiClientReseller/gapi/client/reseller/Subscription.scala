package typingsSlinky.gapiClientReseller.gapi.client.reseller

import typingsSlinky.gapiClientReseller.anon.CommitmentInterval
import typingsSlinky.gapiClientReseller.anon.IsInTrial
import typingsSlinky.gapiClientReseller.anon.MinimumTransferableSeats
import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Subscription extends js.Object {
  
  /** Read-only field that returns the current billing method for a subscription. */
  var billingMethod: js.UndefOr[String] = js.native
  
  /** The creationTime property is the date when subscription was created. It is in milliseconds using the Epoch format. See an example Epoch converter. */
  var creationTime: js.UndefOr[String] = js.native
  
  /** Primary domain name of the customer */
  var customerDomain: js.UndefOr[String] = js.native
  
  /**
    * This property will always be returned in a response as the unique identifier generated by Google. In a request, this property can be either the primary
    * domain or the unique identifier generated by Google.
    */
  var customerId: js.UndefOr[String] = js.native
  
  /**
    * Google-issued code (100 char max) for discounted pricing on subscription plans. Deal code must be included in insert requests in order to receive
    * discounted rate. This property is optional, regular pricing applies if left empty.
    */
  var dealCode: js.UndefOr[String] = js.native
  
  /** Identifies the resource as a Subscription. Value: reseller#subscription */
  var kind: js.UndefOr[String] = js.native
  
  /**
    * The plan property is required. In this version of the API, the G Suite plans are the flexible plan, annual commitment plan, and the 30-day free trial
    * plan. For more information about the API"s payment plans, see the API concepts.
    */
  var plan: js.UndefOr[CommitmentInterval] = js.native
  
  /**
    * This is an optional property. This purchase order (PO) information is for resellers to use for their company tracking usage. If a purchaseOrderId value
    * is given it appears in the API responses and shows up in the invoice. The property accepts up to 80 plain text characters.
    */
  var purchaseOrderId: js.UndefOr[String] = js.native
  
  /** Renewal settings for the annual commitment plan. For more detailed information, see renewal options in the administrator help center. */
  var renewalSettings: js.UndefOr[RenewalSettings] = js.native
  
  /**
    * URL to customer's Subscriptions page in the Admin console. The read-only URL is generated by the API service. This is used if your client application
    * requires the customer to complete a task using the Subscriptions page in the Admin console.
    */
  var resourceUiUrl: js.UndefOr[String] = js.native
  
  /** This is a required property. The number and limit of user seat licenses in the plan. */
  var seats: js.UndefOr[Seats] = js.native
  
  /**
    * A required property. The skuId is a unique system identifier for a product's SKU assigned to a customer in the subscription. For products and SKUs
    * available in this version of the API, see  Product and SKU IDs.
    */
  var skuId: js.UndefOr[String] = js.native
  
  /**
    * Read-only external display name for a product's SKU assigned to a customer in the subscription. SKU names are subject to change at Google's discretion.
    * For products and SKUs available in this version of the API, see  Product and SKU IDs.
    */
  var skuName: js.UndefOr[String] = js.native
  
  /** This is an optional property. */
  var status: js.UndefOr[String] = js.native
  
  /**
    * The subscriptionId is the subscription identifier and is unique for each customer. This is a required property. Since a subscriptionId changes when a
    * subscription is updated, we recommend not using this ID as a key for persistent data. Use the subscriptionId as described in retrieve all reseller
    * subscriptions.
    */
  var subscriptionId: js.UndefOr[String] = js.native
  
  /**
    * Read-only field containing an enumerable of all the current suspension reasons for a subscription. It is possible for a subscription to have many
    * concurrent, overlapping suspension reasons. A subscription's STATUS is SUSPENDED until all pending suspensions are removed.
    *
    * Possible options include:
    * - PENDING_TOS_ACCEPTANCE - The customer has not logged in and accepted the G Suite Resold Terms of Services.
    * - RENEWAL_WITH_TYPE_CANCEL - The customer's commitment ended and their service was cancelled at the end of their term.
    * - RESELLER_INITIATED - A manual suspension invoked by a Reseller.
    * - TRIAL_ENDED - The customer's trial expired without a plan selected.
    * - OTHER - The customer is suspended for an internal Google reason (e.g. abuse or otherwise).
    */
  var suspensionReasons: js.UndefOr[js.Array[String]] = js.native
  
  /** Read-only transfer related information for the subscription. For more information, see retrieve transferable subscriptions for a customer. */
  var transferInfo: js.UndefOr[MinimumTransferableSeats] = js.native
  
  /** The G Suite annual commitment and flexible payment plans can be in a 30-day free trial. For more information, see the API concepts. */
  var trialSettings: js.UndefOr[IsInTrial] = js.native
}
object Subscription {
  
  @scala.inline
  def apply(): Subscription = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Subscription]
  }
  
  @scala.inline
  implicit class SubscriptionOps[Self <: Subscription] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setBillingMethod(value: String): Self = this.set("billingMethod", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteBillingMethod: Self = this.set("billingMethod", js.undefined)
    
    @scala.inline
    def setCreationTime(value: String): Self = this.set("creationTime", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCreationTime: Self = this.set("creationTime", js.undefined)
    
    @scala.inline
    def setCustomerDomain(value: String): Self = this.set("customerDomain", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomerDomain: Self = this.set("customerDomain", js.undefined)
    
    @scala.inline
    def setCustomerId(value: String): Self = this.set("customerId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomerId: Self = this.set("customerId", js.undefined)
    
    @scala.inline
    def setDealCode(value: String): Self = this.set("dealCode", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDealCode: Self = this.set("dealCode", js.undefined)
    
    @scala.inline
    def setKind(value: String): Self = this.set("kind", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKind: Self = this.set("kind", js.undefined)
    
    @scala.inline
    def setPlan(value: CommitmentInterval): Self = this.set("plan", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePlan: Self = this.set("plan", js.undefined)
    
    @scala.inline
    def setPurchaseOrderId(value: String): Self = this.set("purchaseOrderId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePurchaseOrderId: Self = this.set("purchaseOrderId", js.undefined)
    
    @scala.inline
    def setRenewalSettings(value: RenewalSettings): Self = this.set("renewalSettings", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRenewalSettings: Self = this.set("renewalSettings", js.undefined)
    
    @scala.inline
    def setResourceUiUrl(value: String): Self = this.set("resourceUiUrl", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteResourceUiUrl: Self = this.set("resourceUiUrl", js.undefined)
    
    @scala.inline
    def setSeats(value: Seats): Self = this.set("seats", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSeats: Self = this.set("seats", js.undefined)
    
    @scala.inline
    def setSkuId(value: String): Self = this.set("skuId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSkuId: Self = this.set("skuId", js.undefined)
    
    @scala.inline
    def setSkuName(value: String): Self = this.set("skuName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSkuName: Self = this.set("skuName", js.undefined)
    
    @scala.inline
    def setStatus(value: String): Self = this.set("status", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteStatus: Self = this.set("status", js.undefined)
    
    @scala.inline
    def setSubscriptionId(value: String): Self = this.set("subscriptionId", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSubscriptionId: Self = this.set("subscriptionId", js.undefined)
    
    @scala.inline
    def setSuspensionReasonsVarargs(value: String*): Self = this.set("suspensionReasons", js.Array(value :_*))
    
    @scala.inline
    def setSuspensionReasons(value: js.Array[String]): Self = this.set("suspensionReasons", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSuspensionReasons: Self = this.set("suspensionReasons", js.undefined)
    
    @scala.inline
    def setTransferInfo(value: MinimumTransferableSeats): Self = this.set("transferInfo", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTransferInfo: Self = this.set("transferInfo", js.undefined)
    
    @scala.inline
    def setTrialSettings(value: IsInTrial): Self = this.set("trialSettings", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTrialSettings: Self = this.set("trialSettings", js.undefined)
  }
}
