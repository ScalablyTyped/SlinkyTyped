package typingsSlinky.htmlMinifierTerser.mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

/**
  * Most of the options are disabled by default
  */
@js.native
trait Options extends js.Object {
  
  /**
    * Treat attributes in case sensitive manner (useful for custom HTML tags)
    * @default false
    */
  var caseSensitive: js.UndefOr[Boolean] = js.native
  
  /**
    * Omit attribute values from boolean attributes
    * @default false
    */
  var collapseBooleanAttributes: js.UndefOr[Boolean] = js.native
  
  /**
    * Don't leave any spaces between display:inline;
    * elements when collapsing. Must be used in conjunction with collapseWhitespace=true
    * @default false
    */
  var collapseInlineTagWhitespace: js.UndefOr[Boolean] = js.native
  
  /**
    * Collapse white space that contributes to text nodes in a document tree
    * @default false
    */
  var collapseWhitespace: js.UndefOr[Boolean] = js.native
  
  /**
    * Always collapse to 1 space (never remove it entirely). Must be used in conjunction with `collapseWhitespace=true`
    * @default false
    */
  var conservativeCollapse: js.UndefOr[Boolean] = js.native
  
  /**
    * Handle parse errors
    * @default false
    */
  var continueOnParseError: js.UndefOr[Boolean] = js.native
  
  /**
    * Arrays of regex'es that allow to support custom attribute assign expressions (e.g. `'<div flex?="{{mode != cover}}"></div>'`)
    * @default []
    */
  var customAttrAssign: js.UndefOr[js.Array[js.RegExp]] = js.native
  
  /**
    * Regex that specifies custom attribute to strip newlines from (e.g. `/ng-class/`
    */
  var customAttrCollapse: js.UndefOr[js.RegExp] = js.native
  
  /**
    * Arrays of regex'es that allow to support custom attribute surround expressions (e.g. `<input {{#if value}}checked="checked"{{/if}}>`)
    * @default []
    */
  var customAttrSurround: js.UndefOr[js.Array[js.RegExp]] = js.native
  
  /**
    * Arrays of regex'es that allow to support custom event attributes for `minifyJS` (e.g. `ng-click`)
    * @default [/^on[a-z]{3,}$/]
    */
  var customEventAttributes: js.UndefOr[js.Array[js.RegExp]] = js.native
  
  /**
    * Use direct Unicode characters whenever possible
    * @default false
    */
  var decodeEntities: js.UndefOr[Boolean] = js.native
  
  /**
    * Parse input according to HTML5 specifications
    * @default true
    */
  var html5: js.UndefOr[Boolean] = js.native
  
  /**
    * Array of regex'es that allow to ignore certain comments, when matched
    * @default [ /^!/, /^\s*#/ ]
    */
  var ignoreCustomComments: js.UndefOr[js.Array[js.RegExp]] = js.native
  
  /**
    * Array of regex'es that allow to ignore certain fragments, when matched (e.g. `<?php ... ?>`, `{{ ... }}`, etc.)
    * @default [/<%[\s\S]*?%>/, /<\?[\s\S]\*?\?>/]
    */
  var ignoreCustomFragments: js.UndefOr[js.Array[js.RegExp]] = js.native
  
  /**
    * Insert tags generated by HTML parser
    * @default true
    */
  var includeAutoGeneratedTags: js.UndefOr[Boolean] = js.native
  
  /**
    * Keep the trailing slash on singleton elements
    * @default false
    */
  var keepClosingSlash: js.UndefOr[Boolean] = js.native
  
  /**
    * Specify a maximum line length. Compressed output will be split by newlines at valid HTML split-points
    */
  var maxLineLength: js.UndefOr[Double] = js.native
  
  /**
    * Minify CSS in style elements and style attributes
    * @default false
    */
  var minifyCSS: js.UndefOr[
    Boolean | js.Object | (js.Function2[/* text */ String, /* type */ js.UndefOr[String], String])
  ] = js.native
  
  /**
    * Minify JavaScript in script elements and event attributes
    * @default false
    */
  var minifyJS: js.UndefOr[
    Boolean | js.Object | (js.Function2[/* text */ String, /* inline */ js.UndefOr[Boolean], String])
  ] = js.native
  
  /**
    * Minify URLs in various attributes
    * @default false
    */
  var minifyURLs: js.UndefOr[Boolean | String | js.Object | (js.Function1[/* text */ String, String])] = js.native
  
  /**
    * Always collapse to 1 line break (never remove it entirely) when whitespace between tags include a line break.
    * Must be used in conjunction with `collapseWhitespace=true`
    * @default false
    */
  var preserveLineBreaks: js.UndefOr[Boolean] = js.native
  
  /**
    * Prevents the escaping of the values of attributes
    * @default false
    */
  var preventAttributesEscaping: js.UndefOr[Boolean] = js.native
  
  /**
    * Process contents of conditional comments through minifier
    * @default false
    */
  var processConditionalComments: js.UndefOr[Boolean] = js.native
  
  /**
    * Array of strings corresponding to types of script elements to process through minifier
    * (e.g. `text/ng-template`, `text/x-handlebars-template`, etc.)
    * @default []
    */
  var processScripts: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * Type of quote to use for attribute values (' or ")
    */
  var quoteCharacter: js.UndefOr[String] = js.native
  
  /**
    * Remove quotes around attributes when possible
    * @default false
    */
  var removeAttributeQuotes: js.UndefOr[Boolean] = js.native
  
  /**
    * Strip HTML comments
    * @default false
    */
  var removeComments: js.UndefOr[Boolean] = js.native
  
  /**
    * Remove all attributes with whitespace-only values
    * @default false
    */
  var removeEmptyAttributes: js.UndefOr[Boolean | (js.Function2[/* attrName */ String, /* tag */ String, Boolean])] = js.native
  
  /**
    * Remove all elements with empty contents
    * @default false
    */
  var removeEmptyElements: js.UndefOr[Boolean] = js.native
  
  /**
    * Remove optional tags
    * @default false
    */
  var removeOptionalTags: js.UndefOr[Boolean] = js.native
  
  /**
    * Remove attributes when value matches default
    * @default false
    */
  var removeRedundantAttributes: js.UndefOr[Boolean] = js.native
  
  /**
    * Remove `type="text/javascript"` from `script` tags. Other `type` attribute values are left intact
    * @default false
    */
  var removeScriptTypeAttributes: js.UndefOr[Boolean] = js.native
  
  /**
    * Remove `type="text/css"` from `style` and `link` tags. Other `type` attribute values are left intact
    * @default false
    */
  var removeStyleLinkTypeAttributes: js.UndefOr[Boolean] = js.native
  
  /**
    * Remove space between attributes whenever possible. **Note that this will result in invalid HTML!**
    * @default false
    */
  var removeTagWhitespace: js.UndefOr[Boolean] = js.native
  
  /**
    * Sort attributes by frequency
    * @default false
    */
  var sortAttributes: js.UndefOr[Boolean] = js.native
  
  /**
    * Sort style classes by frequency
    * @default false
    */
  var sortClassName: js.UndefOr[Boolean] = js.native
  
  /**
    * Trim white space around `ignoreCustomFragments`
    * @default false
    */
  var trimCustomFragments: js.UndefOr[Boolean] = js.native
  
  /**
    * Replaces the `doctype` with the short (HTML5) doctype
    * @default false
    */
  var useShortDoctype: js.UndefOr[Boolean] = js.native
}
object Options {
  
  @scala.inline
  def apply(): Options = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[Options]
  }
  
  @scala.inline
  implicit class OptionsOps[Self <: Options] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setCaseSensitive(value: Boolean): Self = this.set("caseSensitive", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCaseSensitive: Self = this.set("caseSensitive", js.undefined)
    
    @scala.inline
    def setCollapseBooleanAttributes(value: Boolean): Self = this.set("collapseBooleanAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCollapseBooleanAttributes: Self = this.set("collapseBooleanAttributes", js.undefined)
    
    @scala.inline
    def setCollapseInlineTagWhitespace(value: Boolean): Self = this.set("collapseInlineTagWhitespace", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCollapseInlineTagWhitespace: Self = this.set("collapseInlineTagWhitespace", js.undefined)
    
    @scala.inline
    def setCollapseWhitespace(value: Boolean): Self = this.set("collapseWhitespace", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCollapseWhitespace: Self = this.set("collapseWhitespace", js.undefined)
    
    @scala.inline
    def setConservativeCollapse(value: Boolean): Self = this.set("conservativeCollapse", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteConservativeCollapse: Self = this.set("conservativeCollapse", js.undefined)
    
    @scala.inline
    def setContinueOnParseError(value: Boolean): Self = this.set("continueOnParseError", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteContinueOnParseError: Self = this.set("continueOnParseError", js.undefined)
    
    @scala.inline
    def setCustomAttrAssignVarargs(value: js.RegExp*): Self = this.set("customAttrAssign", js.Array(value :_*))
    
    @scala.inline
    def setCustomAttrAssign(value: js.Array[js.RegExp]): Self = this.set("customAttrAssign", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomAttrAssign: Self = this.set("customAttrAssign", js.undefined)
    
    @scala.inline
    def setCustomAttrCollapse(value: js.RegExp): Self = this.set("customAttrCollapse", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomAttrCollapse: Self = this.set("customAttrCollapse", js.undefined)
    
    @scala.inline
    def setCustomAttrSurroundVarargs(value: js.RegExp*): Self = this.set("customAttrSurround", js.Array(value :_*))
    
    @scala.inline
    def setCustomAttrSurround(value: js.Array[js.RegExp]): Self = this.set("customAttrSurround", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomAttrSurround: Self = this.set("customAttrSurround", js.undefined)
    
    @scala.inline
    def setCustomEventAttributesVarargs(value: js.RegExp*): Self = this.set("customEventAttributes", js.Array(value :_*))
    
    @scala.inline
    def setCustomEventAttributes(value: js.Array[js.RegExp]): Self = this.set("customEventAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteCustomEventAttributes: Self = this.set("customEventAttributes", js.undefined)
    
    @scala.inline
    def setDecodeEntities(value: Boolean): Self = this.set("decodeEntities", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDecodeEntities: Self = this.set("decodeEntities", js.undefined)
    
    @scala.inline
    def setHtml5(value: Boolean): Self = this.set("html5", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteHtml5: Self = this.set("html5", js.undefined)
    
    @scala.inline
    def setIgnoreCustomCommentsVarargs(value: js.RegExp*): Self = this.set("ignoreCustomComments", js.Array(value :_*))
    
    @scala.inline
    def setIgnoreCustomComments(value: js.Array[js.RegExp]): Self = this.set("ignoreCustomComments", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIgnoreCustomComments: Self = this.set("ignoreCustomComments", js.undefined)
    
    @scala.inline
    def setIgnoreCustomFragmentsVarargs(value: js.RegExp*): Self = this.set("ignoreCustomFragments", js.Array(value :_*))
    
    @scala.inline
    def setIgnoreCustomFragments(value: js.Array[js.RegExp]): Self = this.set("ignoreCustomFragments", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIgnoreCustomFragments: Self = this.set("ignoreCustomFragments", js.undefined)
    
    @scala.inline
    def setIncludeAutoGeneratedTags(value: Boolean): Self = this.set("includeAutoGeneratedTags", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIncludeAutoGeneratedTags: Self = this.set("includeAutoGeneratedTags", js.undefined)
    
    @scala.inline
    def setKeepClosingSlash(value: Boolean): Self = this.set("keepClosingSlash", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteKeepClosingSlash: Self = this.set("keepClosingSlash", js.undefined)
    
    @scala.inline
    def setMaxLineLength(value: Double): Self = this.set("maxLineLength", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMaxLineLength: Self = this.set("maxLineLength", js.undefined)
    
    @scala.inline
    def setMinifyCSSFunction2(value: (/* text */ String, /* type */ js.UndefOr[String]) => String): Self = this.set("minifyCSS", js.Any.fromFunction2(value))
    
    @scala.inline
    def setMinifyCSS(
      value: Boolean | js.Object | (js.Function2[/* text */ String, /* type */ js.UndefOr[String], String])
    ): Self = this.set("minifyCSS", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMinifyCSS: Self = this.set("minifyCSS", js.undefined)
    
    @scala.inline
    def setMinifyJSFunction2(value: (/* text */ String, /* inline */ js.UndefOr[Boolean]) => String): Self = this.set("minifyJS", js.Any.fromFunction2(value))
    
    @scala.inline
    def setMinifyJS(
      value: Boolean | js.Object | (js.Function2[/* text */ String, /* inline */ js.UndefOr[Boolean], String])
    ): Self = this.set("minifyJS", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMinifyJS: Self = this.set("minifyJS", js.undefined)
    
    @scala.inline
    def setMinifyURLsFunction1(value: /* text */ String => String): Self = this.set("minifyURLs", js.Any.fromFunction1(value))
    
    @scala.inline
    def setMinifyURLs(value: Boolean | String | js.Object | (js.Function1[/* text */ String, String])): Self = this.set("minifyURLs", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteMinifyURLs: Self = this.set("minifyURLs", js.undefined)
    
    @scala.inline
    def setPreserveLineBreaks(value: Boolean): Self = this.set("preserveLineBreaks", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePreserveLineBreaks: Self = this.set("preserveLineBreaks", js.undefined)
    
    @scala.inline
    def setPreventAttributesEscaping(value: Boolean): Self = this.set("preventAttributesEscaping", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deletePreventAttributesEscaping: Self = this.set("preventAttributesEscaping", js.undefined)
    
    @scala.inline
    def setProcessConditionalComments(value: Boolean): Self = this.set("processConditionalComments", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteProcessConditionalComments: Self = this.set("processConditionalComments", js.undefined)
    
    @scala.inline
    def setProcessScriptsVarargs(value: String*): Self = this.set("processScripts", js.Array(value :_*))
    
    @scala.inline
    def setProcessScripts(value: js.Array[String]): Self = this.set("processScripts", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteProcessScripts: Self = this.set("processScripts", js.undefined)
    
    @scala.inline
    def setQuoteCharacter(value: String): Self = this.set("quoteCharacter", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteQuoteCharacter: Self = this.set("quoteCharacter", js.undefined)
    
    @scala.inline
    def setRemoveAttributeQuotes(value: Boolean): Self = this.set("removeAttributeQuotes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveAttributeQuotes: Self = this.set("removeAttributeQuotes", js.undefined)
    
    @scala.inline
    def setRemoveComments(value: Boolean): Self = this.set("removeComments", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveComments: Self = this.set("removeComments", js.undefined)
    
    @scala.inline
    def setRemoveEmptyAttributesFunction2(value: (/* attrName */ String, /* tag */ String) => Boolean): Self = this.set("removeEmptyAttributes", js.Any.fromFunction2(value))
    
    @scala.inline
    def setRemoveEmptyAttributes(value: Boolean | (js.Function2[/* attrName */ String, /* tag */ String, Boolean])): Self = this.set("removeEmptyAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveEmptyAttributes: Self = this.set("removeEmptyAttributes", js.undefined)
    
    @scala.inline
    def setRemoveEmptyElements(value: Boolean): Self = this.set("removeEmptyElements", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveEmptyElements: Self = this.set("removeEmptyElements", js.undefined)
    
    @scala.inline
    def setRemoveOptionalTags(value: Boolean): Self = this.set("removeOptionalTags", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveOptionalTags: Self = this.set("removeOptionalTags", js.undefined)
    
    @scala.inline
    def setRemoveRedundantAttributes(value: Boolean): Self = this.set("removeRedundantAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveRedundantAttributes: Self = this.set("removeRedundantAttributes", js.undefined)
    
    @scala.inline
    def setRemoveScriptTypeAttributes(value: Boolean): Self = this.set("removeScriptTypeAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveScriptTypeAttributes: Self = this.set("removeScriptTypeAttributes", js.undefined)
    
    @scala.inline
    def setRemoveStyleLinkTypeAttributes(value: Boolean): Self = this.set("removeStyleLinkTypeAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveStyleLinkTypeAttributes: Self = this.set("removeStyleLinkTypeAttributes", js.undefined)
    
    @scala.inline
    def setRemoveTagWhitespace(value: Boolean): Self = this.set("removeTagWhitespace", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRemoveTagWhitespace: Self = this.set("removeTagWhitespace", js.undefined)
    
    @scala.inline
    def setSortAttributes(value: Boolean): Self = this.set("sortAttributes", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSortAttributes: Self = this.set("sortAttributes", js.undefined)
    
    @scala.inline
    def setSortClassName(value: Boolean): Self = this.set("sortClassName", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteSortClassName: Self = this.set("sortClassName", js.undefined)
    
    @scala.inline
    def setTrimCustomFragments(value: Boolean): Self = this.set("trimCustomFragments", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteTrimCustomFragments: Self = this.set("trimCustomFragments", js.undefined)
    
    @scala.inline
    def setUseShortDoctype(value: Boolean): Self = this.set("useShortDoctype", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteUseShortDoctype: Self = this.set("useShortDoctype", js.undefined)
  }
}
