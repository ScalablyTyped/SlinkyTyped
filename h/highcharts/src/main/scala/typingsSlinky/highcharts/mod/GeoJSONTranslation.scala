package typingsSlinky.highcharts.mod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait GeoJSONTranslation extends js.Object {
  
  /**
    * The coordinate reference system used to generate this portion of the map.
    */
  var crs: String = js.native
  
  /**
    * Define the portion of the map that this defintion applies to. Defined as
    * a GeoJSON polygon feature object, with `type` and `coordinates`
    * properties.
    */
  var hitZone: js.UndefOr[Dictionary[_]] = js.native
  
  /**
    * Property for internal use for maps generated by Highsoft.
    */
  var jsonmarginX: js.UndefOr[Double] = js.native
  
  /**
    * Property for internal use for maps generated by Highsoft.
    */
  var jsonmarginY: js.UndefOr[Double] = js.native
  
  /**
    * Property for internal use for maps generated by Highsoft.
    */
  var jsonres: js.UndefOr[Double] = js.native
  
  /**
    * Specifies clockwise rotation of the coordinates after the projection, but
    * before scaling and panning. Defined in radians, relative to the
    * coordinate system origin.
    */
  var rotation: js.UndefOr[Double] = js.native
  
  /**
    * The scaling factor applied to the projected coordinates.
    */
  var scale: js.UndefOr[Double] = js.native
  
  /**
    * Property for internal use for maps generated by Highsoft.
    */
  var xoffset: js.UndefOr[Double] = js.native
  
  /**
    * X offset of projected coordinates after scaling.
    */
  var xpan: js.UndefOr[Double] = js.native
  
  /**
    * Property for internal use for maps generated by Highsoft.
    */
  var yoffset: js.UndefOr[Double] = js.native
  
  /**
    * Y offset of projected coordinates after scaling.
    */
  var ypan: js.UndefOr[Double] = js.native
}
object GeoJSONTranslation {
  
  @scala.inline
  def apply(crs: String): GeoJSONTranslation = {
    val __obj = js.Dynamic.literal(crs = crs.asInstanceOf[js.Any])
    __obj.asInstanceOf[GeoJSONTranslation]
  }
  
  @scala.inline
  implicit class GeoJSONTranslationOps[Self <: GeoJSONTranslation] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setCrs(value: String): Self = this.set("crs", value.asInstanceOf[js.Any])
    
    @scala.inline
    def setHitZone(value: Dictionary[_]): Self = this.set("hitZone", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteHitZone: Self = this.set("hitZone", js.undefined)
    
    @scala.inline
    def setJsonmarginX(value: Double): Self = this.set("jsonmarginX", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteJsonmarginX: Self = this.set("jsonmarginX", js.undefined)
    
    @scala.inline
    def setJsonmarginY(value: Double): Self = this.set("jsonmarginY", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteJsonmarginY: Self = this.set("jsonmarginY", js.undefined)
    
    @scala.inline
    def setJsonres(value: Double): Self = this.set("jsonres", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteJsonres: Self = this.set("jsonres", js.undefined)
    
    @scala.inline
    def setRotation(value: Double): Self = this.set("rotation", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteRotation: Self = this.set("rotation", js.undefined)
    
    @scala.inline
    def setScale(value: Double): Self = this.set("scale", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteScale: Self = this.set("scale", js.undefined)
    
    @scala.inline
    def setXoffset(value: Double): Self = this.set("xoffset", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteXoffset: Self = this.set("xoffset", js.undefined)
    
    @scala.inline
    def setXpan(value: Double): Self = this.set("xpan", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteXpan: Self = this.set("xpan", js.undefined)
    
    @scala.inline
    def setYoffset(value: Double): Self = this.set("yoffset", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteYoffset: Self = this.set("yoffset", js.undefined)
    
    @scala.inline
    def setYpan(value: Double): Self = this.set("ypan", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteYpan: Self = this.set("ypan", js.undefined)
  }
}
