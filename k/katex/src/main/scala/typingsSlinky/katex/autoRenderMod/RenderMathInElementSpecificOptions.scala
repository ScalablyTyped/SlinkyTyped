package typingsSlinky.katex.autoRenderMod

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait RenderMathInElementSpecificOptions extends js.Object {
  
  /**
    * A list of delimiters to look for math
    *
    * @default [
    *   {left: "$$", right: "$$", display: true},
    *   {left: "\\(", right: "\\)", display: false},
    *   {left: "\\[", right: "\\]", display: true}
    * ]
    */
  var delimiters: js.UndefOr[js.Array[RenderMathInElementSpecificOptionsDelimiters]] = js.native
  
  /**
    * A callback method returning a message and an error stack in case of an critical error during rendering
    * @param msg Message generated by KaTeX
    * @param err Caught error
    *
    * @default console.error
    */
  var errorCallback: js.UndefOr[js.Function2[/* msg */ String, /* err */ js.Error, Unit]] = js.native
  
  /**
    * A list of DOM node class names to ignore when recursing through
    *
    * @default []
    */
  var ignoredClasses: js.UndefOr[js.Array[String]] = js.native
  
  /**
    * A list of DOM node types to ignore when recursing through
    *
    * @default ["script", "noscript", "style", "textarea", "pre", "code"]
    */
  var ignoredTags: js.UndefOr[
    js.Array[
      /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 119 */ js.Any
    ]
  ] = js.native
}
object RenderMathInElementSpecificOptions {
  
  @scala.inline
  def apply(): RenderMathInElementSpecificOptions = {
    val __obj = js.Dynamic.literal()
    __obj.asInstanceOf[RenderMathInElementSpecificOptions]
  }
  
  @scala.inline
  implicit class RenderMathInElementSpecificOptionsOps[Self <: RenderMathInElementSpecificOptions] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setDelimitersVarargs(value: RenderMathInElementSpecificOptionsDelimiters*): Self = this.set("delimiters", js.Array(value :_*))
    
    @scala.inline
    def setDelimiters(value: js.Array[RenderMathInElementSpecificOptionsDelimiters]): Self = this.set("delimiters", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteDelimiters: Self = this.set("delimiters", js.undefined)
    
    @scala.inline
    def setErrorCallback(value: (/* msg */ String, /* err */ js.Error) => Unit): Self = this.set("errorCallback", js.Any.fromFunction2(value))
    
    @scala.inline
    def deleteErrorCallback: Self = this.set("errorCallback", js.undefined)
    
    @scala.inline
    def setIgnoredClassesVarargs(value: String*): Self = this.set("ignoredClasses", js.Array(value :_*))
    
    @scala.inline
    def setIgnoredClasses(value: js.Array[String]): Self = this.set("ignoredClasses", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIgnoredClasses: Self = this.set("ignoredClasses", js.undefined)
    
    @scala.inline
    def setIgnoredTagsVarargs(
      value: (/* import warning: LimitUnionLength.leaveTypeRef Was union type with length 119 */ js.Any)*
    ): Self = this.set("ignoredTags", js.Array(value :_*))
    
    @scala.inline
    def setIgnoredTags(
      value: js.Array[
          /* import warning: LimitUnionLength.leaveTypeRef Was union type with length 119 */ js.Any
        ]
    ): Self = this.set("ignoredTags", value.asInstanceOf[js.Any])
    
    @scala.inline
    def deleteIgnoredTags: Self = this.set("ignoredTags", js.undefined)
  }
}
