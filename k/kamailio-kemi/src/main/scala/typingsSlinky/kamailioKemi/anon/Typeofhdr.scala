package typingsSlinky.kamailioKemi.anon

import scala.scalajs.js
import scala.scalajs.js.`|`
import scala.scalajs.js.annotation.{JSGlobalScope, JSGlobal, JSImport, JSName, JSBracketAccess}

@js.native
trait Typeofhdr extends js.Object {
  
  // Append header to current SIP message (request or reply). It will be added after the last header.
  def append(hdr: String): Double = js.native
  
  // Append header to current SIP message (request or reply).
  // It will be added after the first header matching the name hdrName.
  def append_after(hdr: String, hdrName: String): Double = js.native
  
  // Add a header to the SIP response to be generated by Kamailio for the current SIP request.
  def append_to_reply(hdr: String): Double = js.native
  
  // Insert header to current SIP message (request or reply).
  // It will be added before the first header.
  def insert(hdr: String): Double = js.native
  
  // Insert header to current SIP message (request or reply).
  // It will be added before the header matching the name hdrName.
  def insert_before(hdr: String, hdrName: String): Double = js.native
  
  // Return greater than 0 if a header with the name hdrName exists and less than 0 if there is no such header.
  def is_present(hdrName: String): Double = js.native
  
  // Remove all the headers with the name hdrName.
  def remove(hdrName: String): Double = js.native
}
object Typeofhdr {
  
  @scala.inline
  def apply(
    append: String => Double,
    append_after: (String, String) => Double,
    append_to_reply: String => Double,
    insert: String => Double,
    insert_before: (String, String) => Double,
    is_present: String => Double,
    remove: String => Double
  ): Typeofhdr = {
    val __obj = js.Dynamic.literal(append = js.Any.fromFunction1(append), append_after = js.Any.fromFunction2(append_after), append_to_reply = js.Any.fromFunction1(append_to_reply), insert = js.Any.fromFunction1(insert), insert_before = js.Any.fromFunction2(insert_before), is_present = js.Any.fromFunction1(is_present), remove = js.Any.fromFunction1(remove))
    __obj.asInstanceOf[Typeofhdr]
  }
  
  @scala.inline
  implicit class TypeofhdrOps[Self <: Typeofhdr] (val x: Self) extends AnyVal {
    
    @scala.inline
    def duplicate: Self = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x)).asInstanceOf[Self]
    
    @scala.inline
    def combineWith[Other <: js.Any](other: Other): Self with Other = (js.Dynamic.global.Object.assign(js.Dynamic.literal(), x, other.asInstanceOf[js.Any])).asInstanceOf[Self with Other]
    
    @scala.inline
    def set(key: String, value: js.Any): Self = {
      x.asInstanceOf[js.Dynamic].updateDynamic(key)(value)
      x
    }
    
    @scala.inline
    def setAppend(value: String => Double): Self = this.set("append", js.Any.fromFunction1(value))
    
    @scala.inline
    def setAppend_after(value: (String, String) => Double): Self = this.set("append_after", js.Any.fromFunction2(value))
    
    @scala.inline
    def setAppend_to_reply(value: String => Double): Self = this.set("append_to_reply", js.Any.fromFunction1(value))
    
    @scala.inline
    def setInsert(value: String => Double): Self = this.set("insert", js.Any.fromFunction1(value))
    
    @scala.inline
    def setInsert_before(value: (String, String) => Double): Self = this.set("insert_before", js.Any.fromFunction2(value))
    
    @scala.inline
    def setIs_present(value: String => Double): Self = this.set("is_present", js.Any.fromFunction1(value))
    
    @scala.inline
    def setRemove(value: String => Double): Self = this.set("remove", js.Any.fromFunction1(value))
  }
}
